{
	"info": {
		"_postman_id": "d57567de-6952-4dac-b076-6cb2783028cb",
		"name": "Corpay Cross-Border API Payments API 2.0",
		"description": "Payments V2.0 is the newest API suite offered by Corpay that enables businesses to have an easy access to foreign exchange and domestic payment capabilities. The API suite offers spot and forward capabilities for FX transactions, as well as robust data services around beneficiary creation process. All together it provides simple and standardized access to 145+ currencies with 110 in country delivery channels.\n\n# Common Terms\n\n<ul><li><p>Partner - entity governing one or more client accounts</p></li><li><p>Client – unique entity. All information that pertains to beneficiaries and transactions resides under one client and is not shared between client accounts even under one partner</p></li><li><p>Client Code - unique 6-digit client identifier for each client account. Used in all endpoints as part of URL.</p></li><li><p>Beneficiary – bene – recipient of funds</p></li><li><p>Remitter – the initiator of funds when different from the client</p></li><li><p>Payment - outgoing cashflow to a beneficiary</p></li><li><p>Settlement - Incoming cashflow to Corpay.</p></li><li><p>Order – an object that must contain rate, payment and settlement information and with balanced amount to be considered complete. These elements do not have to be created or provided simultaneously, payment and settlement info can be provide with a time delay (less than 24H)</p></li><li><p>Instructed deal – deal with payments and settlements balanced and fully accounted for</p></li><li><p>Uninstructed deal – deal with payments and settlements not yet present or balanced</p></li></ul>\n\n# Base URL\n\nThe documentation for each endpoint displays the HTTP method and the end path. Before you submit the request, you need to prepend the base path to get the full resource URL. All endpoints referenced in the documentation require the following base path:\n\nsandbox env -[https://cambridgefx-payments-eapi-qa.ca-ce1-01.api.fleetcor.com/api](https://cambridgefx-payments-eapi-qa.ca-ce1-01.api.fleetcor.com/api)\n\nproduction env - [https://cambridgefx-payments-eapi.api.fleetcor.com/api](https://cambridgefx-payments-eapi.api.fleetcor.com/api)\n\n**Note:** This base path will not be the same for the sandbox and production.\n\nColons are used as a placeholder and indicate the type of value that you need to supply. For instance, where you see :clientCode in the resource, you need to replace that string with your client code.\n\nFor example, in the documentation, endpoints look like to this:\n\n`partner/:partnerId/:clientCode/forwards/:forwardID`\n\nWhen you add the base path, your client code, and any parameters, the result is a well-formed REST URL that looks something like this:\n\n`partner/XAPIPrt/252397/forwards/2134`\n\n# Swagger Documentation\n\nYou can access and try out the endpoints by visiting the swagger docs <a href=\"https://app.swaggerhub.com/apis-docs/Cambridgefx/cambridge-fx_payments/1.0.0\">here</a>\n\n# API Status Check\n\nRealtime health of the API can be found on the status page <a href=\"http://status.cambridgefx.com/\">here</a>\n\nThe specific API product these docs relate to on the status page are Corpay Cross-Border for production environment and Beta for the sandbox environment.\n\n# Response Codes\n\nMost of the endpoints include examples for both successful and unsuccessful responses. In the Example Request, click the downward arrow beside the response code to view additional examples.\n\nCorpay uses conventional HTTP response codes to indicate the success or failure of an API request.\n\n<table><tbody><tr><th>Response Code</th><th>Description</th></tr><tr><td>2<i>xx</i></td><td>Success.</td></tr><tr><td>4<i>xx</i></td><td>Client error. This is usually due to missing or incorrect information, for example, a missing or incorrect parameter or value.<ul><li>401 - Authorization issue. This usually means that the authorization token has expired and you need to refresh it.</li><li>410 - Rate resource expired. Due to currency fluctuations, quotes are valid for a very limited period of time. When you get a 410 error, it means that the rate resource you're trying to use has expired and you need to generate a new quote.</li><ul></ul></ul></td></tr><tr><td>5<i>xx</i></td><td>Server error. If the error persists, contact Corpay Tier 2 support.</td></tr></tbody></table>\n\n# API Keys\n\nThe API keys will be provided by the team at Corpay, for any inquiries or support please contact: [paymentsAPI@cambridgefx.com](mailto:paymentsAPI@cambridgefx.com)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16312102",
		"_collection_link": "https://www.postman.com/cambridgeproduct/workspace/cambridgeproduct-s-public-workspace/collection/5203630-d57567de-6952-4dac-b076-6cb2783028cb?action=share&creator=16312102&source=collection_link"
	},
	"item": [
		{
			"name": "Getting Started",
			"item": [
				{
					"name": "Spot Payment",
					"item": [
						{
							"name": "[1]  Spot Quote",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "<string>",
										"description": "(Required) "
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"paymentCurrency\": \"<string>\",\n    \"settlementCurrency\": \"<string>\",\n    \"amount\": \"<float>\",\n    \"lockSide\": \"<string>\"\n}"
								},
								"url": {
									"raw": "/partner/:partnerId/:clientCode/quotes",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"quotes"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "This is the first of two calls that are used to book a live rate as part of a Spot transaction. This call creates an impermanent resource based on a live exchange rate (between a currency pair). In order to secure the rate, you must book the deal (`POST` [Book Quote](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#9da78ce7-c373-4621-bc6c-1bd3c54f6d87)).\n\nThe lockside determines which side of the pair will carry the base amount. For example, for a CAD/USD spot deal, if lockside is set to the 'payment' currency (which in this case is USD), then the quoted amount will be the 'settlement' currency (or CAD in this case).\n\nAs market rates are in flux, this quote may expire before you book the deal. By default, the rate expires in 10 seconds.\n\nThe quote resource is in the response header under 'Location'. This URL is the precursor to executing the `POST` [Book Quote](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#9da78ce7-c373-4621-bc6c-1bd3c54f6d87) endpoint.\n\n* * *\n\n##### REQUEST BODY\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>paymentCurrency</td><td><b>string (required)</b><br>The three-letter ISO code for the payment currency.</td></tr><tr><td>settlementCurrency</td><td><b>string (required)</b><br>The three-letter ISO code for the settlement currency.</td></tr><tr><td>amount</td><td><b>number (required)</b><br>The amount on which to base the quote.</td></tr><tr><td>lockSide</td><td><b>string (required)</b><br>Indicates which currency to lock when the rate calculation is performed = ['payment', 'settlement'].</td></tr></tbody></table>\n\n##### RESPONSE BODY\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>quoteId</td><td>The unique ID assigned to the quote.</td></tr><tr><td>payment.paymentCcurrency</td><td>The three-letter ISO code for the payment currency.</td></tr><tr><td>payment.paymentAmount</td><td>Payment amount.</td></tr><tr><td>settlement.settlementCurrency</td><td>The three-letter ISO code for the settlement currency.</td></tr><tr><td>settlement.settlementAmount</td><td>Amount of the settlement.</td></tr><tr><td>rate.value</td><td>The result of applying the 'operation' type to the 'lockside' amount.</td></tr><tr><td>rate.rateType</td><td>The currency pair used in the rate calculation.<br><b>Note:</b> The second currency in the pair is the more major of the two in Corpay's internal ranking.</td></tr></tbody></table>\n\n##### IMPLEMENTATION NOTES:\n\nConsider the rate to be available for 8 seconds, and 2 for latency and other network effects. Refresh after that period of time, or there will be time out error.\n\n* * *\n\n##### SPOT RATE ERRORS\n\n<table><tbody><tr><th>Error Code</th><th>Description</th></tr><tr><td>400 Bad Request - Amount exceeds limit</td><td>This reflects the per-client threshold on allowed Spot transactions.</td></tr><tr><td>400 Bad Request - Unexpected exception</td><td>Inputting an invalid currency code will return this error.</td></tr></tbody></table>"
							},
							"response": [
								{
									"name": "201 response ",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"paymentCurrency\" : \"CAD\",\n  \"settlementCurrency\" : \"USD\",\n  \"amount\" : 100,\n  \"lockSide\" : \"Payment\",\n  \"instrument\" : \"Spot\"\n}"
										},
										"url": {
											"raw": "/partner/:partnerId/:clientCode/quote",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"quote"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}",
													"description": "(Required) "
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 16:54:46 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "19355"
										},
										{
											"key": "Content-Length",
											"value": "305"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"quoteId\": \"633a17847f2643bd84174cd231b0fbf2\",\n    \"payment\": {\n        \"paymentCurrency\": \"CAD\",\n        \"paymentAmount\": \"100\"\n    },\n    \"settlement\": {\n        \"settlementCurrency\": \"USD\",\n        \"settlementAmount\": \"76.28\"\n    },\n    \"rate\": {\n        \"value\": \"1.3109\",\n        \"rateType\": \"USDCAD\"\n    }\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"paymentCurrency\" : \"CAD\",\n  \"settlementCurrency\" : \"USD\",\n  \"amount\" : 100,\n  \"lockSide\" : \"P\",\n  \"instrument\" : \"Spot\"\n}"
										},
										"url": {
											"raw": "/partner/:partnerId/:clientCode/quote",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"quote"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}",
													"description": "(Required) "
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 16:55:27 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "17965"
										},
										{
											"key": "Content-Length",
											"value": "409"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timeStamp\": \"2020-10-15T16:55:27.286Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": null,\n    \"errorCode\": \"400\",\n    \"errorType\": \"APIKIT:BAD_REQUEST\",\n    \"description\": \"/lockSide P is not a valid enum value  Location:   Position: Line 0,  Column 0\",\n    \"errorClass\": \"org.mule.module.apikit.api.exception.BadRequestException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"39bb5c60-0f07-11eb-898f-122027ceb96f\"\n}"
								},
								{
									"name": "401 response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"paymentCurrency\" : \"CAD\",\n  \"settlementCurrency\" : \"USD\",\n  \"amount\" : 100,\n  \"lockSide\" : \"Payment\",\n  \"instrument\" : \"Spot\"\n}"
										},
										"url": {
											"raw": "/partner/:partnerId/:clientCode/quote",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"quote"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}",
													"description": "(Required) "
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 16:59:51 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "14080"
										},
										{
											"key": "Content-Length",
											"value": "471"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timeStamp\": \"2020-10-15T16:59:51.269Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": \"Unauthorized\",\n    \"errorCode\": null,\n    \"errorType\": \"HTTP:UNAUTHORIZED\",\n    \"description\": \"HTTP POST on resource 'https://beta.cambridgelink.com:443/api/252497/0/quotes/spot' failed: unauthorized (401).\",\n    \"errorClass\": \"org.mule.extension.http.api.request.validator.ResponseValidatorTypedException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"d7050430-0f07-11eb-898f-122027ceb96f\"\n}"
								}
							]
						},
						{
							"name": "[2]  Book Quote ",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "<string>",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/quotes/:quoteId/book",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"quotes",
										":quoteId",
										"book"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "quoteId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "This is the second of two calls that are used to book a live rate as part of a Spot transaction. This call uses the 'quoteId' returned by the `POST` [Spot Quote](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#46b2e579-fc60-458a-9a8e-d9c8c8714121) call to book a deal using the quoted rate.\n\n**Important:** The quote obtained from `POST` [Spot Quote](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#46b2e579-fc60-458a-9a8e-d9c8c8714121) is valid for 10 seconds, after which it expires. If you do not book the deal before the rate expires, the response status will be '410 (Gone)', and you will need to generate a new quote.  \n  \n\n* * *\n\n##### IMPLEMENTATION NOTES:\n\nMake sure to append the `/book` at the end of the resource.\n\n* * *\n\n##### BOOK DEAL ERRORS\n\n<table><tbody><tr><th>Error Code</th><th>Description</th></tr><tr><td>200 OK - Previously booked URL</td><td>The quoteID has already been booked so it cannot be booked again. Returns: \"token\": \"00000000-0000-0000-0000-000000000000\"</td></tr><tr><td>404 Not Found Invalid URL invoked</td><td>The 'Rate Resource' URL is incorrect. Either it has already been booked or it does not exist. This is the format: {{Rate Resource URL}}/book</td></tr><tr><td>410 Gone - Call sent after rate expired</td><td>The rate generated by the <b>POST</b> request expires after 10 seconds.</td></tr></tbody></table>"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "client_id",
												"value": "252497",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "/partner/:partnerId/:clientCode/quote/:quoteId/book",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"quote",
												":quoteId",
												"book"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}",
													"description": "(Required) "
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												},
												{
													"key": "quoteId",
													"value": "88210608e7384af79a57d3996dbc3f33",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 17:02:59 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "0"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "5884"
										},
										{
											"key": "Content-Length",
											"value": "26"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"ordNum\": \"10056056\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "client_id",
												"value": "252497",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "/partner/:partnerId/:clientCode/quote/:quoteId/book",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"quote",
												":quoteId",
												"book"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}",
													"description": "(Required) "
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												},
												{
													"key": "quoteId",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 17:01:29 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "16222"
										},
										{
											"key": "Content-Length",
											"value": "360"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timeStamp\": \"2020-10-15T17:01:29.024Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": null,\n    \"errorCode\": \"404\",\n    \"errorType\": \"APIKIT:NOT_FOUND\",\n    \"description\": \"/partner/erictest1/252497/quote//book\",\n    \"errorClass\": \"org.mule.module.apikit.exception.NotFoundException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"1158f650-0f08-11eb-898f-122027ceb96f\"\n}"
								}
							]
						},
						{
							"name": "[3] Instruct ",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "<string>",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/orders/:ordNum/instruct",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"orders",
										":ordNum",
										"instruct"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "ordNum",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "Once the Spot Transaction has been booked, you can instruct the funds to a beneficiary or to an internal holding balance (this is specified in the 'payment' portion of this payload).\n\nThe settlement funds (the 'settlement' portion) can come from a bank account or from a holding balance. This call also specifies which settlement account to use for fees. In most cases, the account designated for fees contains the base currency (for example, if you are located in Canada, your fee settlement account will be a CAD account).\n\nThe total instructed amount does not have to equal the amount exchanged during the Spot Transaction, but it cannot exceed that amount.\n\n* * *\n\n##### REQUEST BODY\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>orders.orderNum</td><td><b>string (required)</b><br>Number of the deal to which the payment and settlement instructions should be applied.</td></tr><tr><td>orders.amount</td><td><b>number (required)</b><br>Payment amount.</td></tr><tr><td>payments.beneficiaryId</td><td><b>string (required)</b><br>Identifier of the beneficiary/FXBalance where the payment will be sent. Value can be either 'clientIntegrationId' or 'id' (which is returned by <b>GET</b> <a href=\"https://documenter.getpostman.com/view/5203630/UVR4PAbZ#9eba62f9-d534-4c07-99ab-01443efc8e38\">View Bene</a>.</td></tr><tr><td>payments.amount</td><td><b>number (required)</b><br>Payment amount. This number must match the value in orders.amount.</td></tr><tr><td>payments.currency</td><td><b>string (required)</b><br>Three-letter ISO code for the payment currency.</td></tr><tr><td>payments.method</td><td><p><b>string (required)</b><br>Method to use to send the payment = ['W', 'E', 'C'].<br></p><ul><li><p>'W' = Wire</p></li><li><p>'E' = EFT</p></li><li><p>'C' = FXBalance</p></li></ul></td></tr><tr><td>payments.purposeOfPayment</td><td><b>string (required)</b><br>The purpose of payment. Can be found here: <b>GET </b>Purpose of Payment</td></tr><tr><td>payments.paymentReference</td><td><b>string (optional)</b><br>Reference to be included with the payment, for example, purchase order number or invoice number.</td></tr><tr><td>payments.remitterId</td><td><b>string (optional)</b><br>Identifier of the remitter on whose behalf the payment is being made.</td></tr><tr><td>settlements.accountId</td><td><b>string (required)</b><br>Settlement account identifier.</td></tr><tr><td>settlements.method</td><td><p><b>string (required)</b><br>Method to use to settle the deal = ['W', 'E', 'C'].<br></p><ul><li><p>'W' = Wire</p></li><li><p>'E' = EFT</p></li><li><p>'C' = FXBalance</p></li></ul></td></tr><tr><td>settlements.currency</td><td><b>string (required)</b><br>Three-letter ISO code for the settlement account currency.</td></tr><tr><td>settlements.purpose</td><td><b>string (required)</b><br>The reason for the settlement = ['All', 'Allocation', 'Fee', 'Spot', 'SpotTrade', 'Drawdown'].</td></tr></tbody></table>\n\n##### RESPONSE BODY\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>valueDate</td><td>Order value date.</td></tr><tr></tr><tr><td>payments.availableDate</td><td>The date when the payment will be received by the beneficiary.</td></tr><tr><td>payments.feeAmount</td><td>The amount of the fee levied on the payment.</td></tr><tr><td>payments.feeCurrency</td><td>Currency of the fee.</td></tr><tr><td>payments.estimateCostAmount</td><td>The cost of the settlement currency.</td></tr><tr><td>payments.method</td><td><p>Method to use to send the payment. Possible values returned = ['W', 'E', 'C'].</p><ul><li><p>'W' = Wire</p><p></p></li><li><p>'E' = EFT</p></li><li><p>'C' =FXBalance</p></li></ul></td></tr><tr><td>payments.payeeName</td><td>The name of the beneficiary/account where the payment will be sent.</td></tr><tr><td>payments.amount</td><td>The amount paid to the beneficiary.</td></tr><tr><td>payments.currency</td><td>The currency in which the beneficiary will receive the payment.</td></tr><tr><td>payments.paymentInstructionId</td><td>Internal identifier of the Payment Instruction. Different from the Deal and/or Order Numbers.</td></tr><tr><td>payments.beneId</td><td>The beneficiary's 'id' found in the <b>GET</b> <a href=\"https://documenter.getpostman.com/view/5203630/UVR4PAbZ#9eba62f9-d534-4c07-99ab-01443efc8e38\">View Bene</a> endpoint.</td></tr><tr><td>orderDetail.entryDate</td><td>The date of the transaction entry.</td></tr><tr><td>orderDetail.ordNum</td><td>The unique number associated with the transaction.</td></tr><tr><td>orderDetail.buy</td><td>The buy-side currency.</td></tr><tr><td>orderDetail.buyAmount</td><td>Amount of the buy-side</td></tr><tr><td>orderDetail.sell</td><td>The sell-side currency.</td></tr><tr><td>orderDetail.sellAmount</td><td>Amount of the sell-side</td></tr><tr><td>orderDetail.exchange</td><td>The quoted amount’s all-in rate as part of the spot transaction.</td></tr></tbody></table>\n\n##### INSTRUST DEAL ERRORS\n\n<table><tbody><tr><th>Error Code</th><th>Description</th></tr><tr><td>400 Bad Request - Improper settlement account / wrong 'deliveryMethod'</td><td>Either the client does not have the permission set to settle with this account type, or the account identifier invoked is incorrect.</td></tr><tr><td>400 Bad Request - Improper bene / wrong 'deliveryMethod'</td><td><p>Could be one of the following:</p><ul><li><p>The identifier of the beneficiary invoked is incorrect (the 'clientIntegrationId' or 'id').</p></li><li><p>The bene does not exist (therefore the 'id' or 'clientIntegrationId' that you are using is invalid).</p></li></ul></td></tr><tr><td>400 Bad Request - Invalid / already-instructed Order Number</td><td>The order number has already been instructed or it doesn't belong to your account.</td></tr><tr><td>400 Bad Request - Amount exceeds Spot balance</td><td>The order does not contain the funds available to pay the beneficiary. A top-up is not possible.</td></tr></tbody></table>"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"orders\": [ \r\n        {\r\n        \"ordNum\": \"10056061\",\r\n\t\t\"amount\" : 10000\r\n        }\r\n\t],\t\r\n        \"payments\": [\r\n           {\r\n                \"beneficiaryId\": \"testtestv5\",\r\n\t\t\t\t\"amount\": 10000,\r\n\t\t\t\t\"currency\": \"INR\",\r\n\t\t\t\t\"method\": \"W\",\r\n                \"purposeOfPayment\":\"fxvx\",\r\n\t\t\t\t\"remitterId\": \"00801OSCXZATTZNAZNC2\"\r\n\r\n            }\r\n\t\t],\r\n        \"settlements\":[\r\n\t\t\t{\r\n\t\t\t    \"accountId\":\"INCOMING-TEST-USD\" ,\r\n                \"method\":\"W\",\r\n                \"currency\":\"USD\",\r\n                \"purpose\" : \"Spot\"\r\n\t        }  \r\n\t\t\t\t\r\n\t\t\t    \r\n\t\t]\t\r\n    \r\n}         ",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "/partner/:partnerId/:clientCode/orders/:ordNum/instruct",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"orders",
												":ordNum",
												"instruct"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}",
													"description": "(Required) "
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												},
												{
													"key": "ordNum",
													"value": "10056061",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 17:27:24 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "2350"
										},
										{
											"key": "Content-Length",
											"value": "462"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"valueDate\": \"2020-10-15T00:00:00\",\n    \"payments\": [\n        {\n            \"availableDate\": \"2020-10-21T00:00:00\",\n            \"feeAmount\": \"0\",\n            \"feeCurrency\": \"\",\n            \"estimateCostAmount\": \"0\",\n            \"method\": \"W\",\n            \"payeeName\": \"john\",\n            \"beneId\":\"testtestv5\",\n            \"amount\":10000,\n            \"currency\":\"INR\",   \n            \"paymentInstructionId\":122355443 \n\n\n        }\n    ],\n    \"orderDetail\": {\n        \"entryDate\": \"2020-10-15T13:18:18.893\",\n        \"ordNum\": \"10056061\",\n        \"buy\": \"USD\",\n        \"buyAmount\": \"139.2700\",\n        \"sell\": \"INR\",\n        \"sellAmount\": \"10000\",\n        \"exchange\": \"0.013927\"\n    }\n}"
								},
								{
									"name": "403 response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"orders\": [ \r\n        {\r\n        \"ordNum\": \"10056061\",\r\n\t\t\"amount\" : 10000\r\n        }\r\n\t],\t\r\n        \"payments\": [\r\n           {\r\n                \"beneficiaryId\": \"\",\r\n\t\t\t\t\"amount\": 10000,\r\n\t\t\t\t\"currency\": \"INR\",\r\n\t\t\t\t\"method\": \"W\",\r\n                \"purposeOfPayment\":\"fxvx\",\r\n\t\t\t\t\"remitterId\": \"00801OSCXZATTZNAZNC2\"\r\n\r\n            }\r\n\t\t],\r\n        \"settlements\":[\r\n\t\t\t{\r\n\t\t\t    \"accountId\":\"INCOMING-TEST-USD\" ,\r\n                \"method\":\"W\",\r\n                \"currency\":\"USD\",\r\n                \"purpose\" : \"Spot\"\r\n\t        }  \r\n\t\t\t\t\r\n\t\t\t    \r\n\t\t]\t\r\n    \r\n}         ",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "/partner/:partnerId/:clientCode/orders/:ordNum/instruct",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"orders",
												":ordNum",
												"instruct"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}",
													"description": "(Required) "
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												},
												{
													"key": "ordNum",
													"value": "10056061",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 17:27:03 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "2267"
										},
										{
											"key": "Content-Length",
											"value": "577"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timeStamp\": \"2020-10-15T17:27:03.042Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": \"Forbidden\",\n    \"errorCode\": null,\n    \"errorType\": \"HTTP:FORBIDDEN\",\n    \"description\": [\n        {\n            \"key\": \"permission\",\n            \"type\": \"system\",\n            \"message\": \"User [30553] does not have permission [CanPayThisBene {}]\"\n        },\n        {\n            \"key\": \"ErrorID\",\n            \"type\": \"input\",\n            \"message\": \"\"\n        }\n    ],\n    \"errorClass\": \"org.mule.extension.http.api.request.validator.ResponseValidatorTypedException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"a3a7eb80-0f0b-11eb-898f-122027ceb96f\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"orders\": [ \r\n        {\r\n        \"ordNum\": \"10056061\",\r\n\t\t\"amount\" : 10000\r\n        }\r\n\t],\t\r\n        \"payments\": [\r\n           {\r\n                \"beneficiaryId\": \"testtestv5\",\r\n\t\t\t\t\"amount\": 10000,\r\n\t\t\t\t\"currency\": \"INR\",\r\n\t\t\t\t\"method\": \"W\",\r\n                \"purposeOfPayment\":\"fxvx\",\r\n\t\t\t\t\"remitterId\": \"00801OSCXZATTZNAZNC2\"\r\n\r\n            }\r\n\t\t],\r\n        \"settlements\":[\r\n\t\t\t{\r\n\t\t\t    \"accountId\":\"INCOMING-TEST-USD\" ,\r\n                \"method\":\"W\",\r\n                \"currency\":\"USD\",\r\n                \"purpose\" : \"Spot\"\r\n\t        }  \r\n\t\t\t\t\r\n\t\t\t    \r\n\t\t]\t\r\n    \r\n}         ",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "/partner/:partnerId/:clientCode/orders/:ordNum/instruct",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"orders",
												":ordNum",
												"instruct"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}",
													"description": "(Required) "
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												},
												{
													"key": "ordNum",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 17:26:04 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "291"
										},
										{
											"key": "Content-Length",
											"value": "362"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timeStamp\": \"2020-10-15T17:26:04.955Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": null,\n    \"errorCode\": \"404\",\n    \"errorType\": \"APIKIT:NOT_FOUND\",\n    \"description\": \"/partner/252497/252497/orders//instruct\",\n    \"errorClass\": \"org.mule.module.apikit.exception.NotFoundException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"81122900-0f0b-11eb-898f-122027ceb96f\"\n}"
								},
								{
									"name": "500 response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"orders\": [ \r\n        {\r\n        \"ordNum\": \"10056061\",\r\n\t\t\"amount\" : 100\r\n        }\r\n\t],\t\r\n        \"payments\": [\r\n           {\r\n                \"beneficiaryId\": \"testtestv5\",\r\n\t\t\t\t\"amount\": 10000,\r\n\t\t\t\t\"currency\": \"INR\",\r\n\t\t\t\t\"method\": \"W\",\r\n                \"purposeOfPayment\":\"fxvx\",\r\n\t\t\t\t\"remitterId\": \"00801OSCXZATTZNAZNC2\"\r\n\r\n            }\r\n\t\t],\r\n        \"settlements\":[\r\n\t\t\t{\r\n\t\t\t    \"accountId\":\"INCOMING-TEST-USD\" ,\r\n                \"method\":\"W\",\r\n                \"currency\":\"USD\",\r\n                \"purpose\" : \"Spot\"\r\n\t        }  \r\n\t\t\t\t\r\n\t\t\t    \r\n\t\t]\t\r\n    \r\n}         ",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "/partner/:partnerId/:clientCode/orders/:ordNum/instruct",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"orders",
												":ordNum",
												"instruct"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{parnterId}}",
													"description": "(Required) "
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												},
												{
													"key": "ordNum",
													"value": "10056061",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 17:26:33 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "12113"
										},
										{
											"key": "Content-Length",
											"value": "609"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timeStamp\": \"2020-10-15T17:26:33.551Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": \"Internal Server Error\",\n    \"errorCode\": 500,\n    \"errorType\": \"HTTP:INTERNAL_SERVER_ERROR\",\n    \"description\": [\n        {\n            \"key\": \"OPERATION_FAILED\",\n            \"type\": \"input\",\n            \"message\": \"Unexpected exception\"\n        },\n        {\n            \"key\": \"ErrorID\",\n            \"type\": \"input\",\n            \"message\": \"2021-a028ef1b-9f2f-4ed4-9a42-55a40eb57bbf\"\n        }\n    ],\n    \"errorClass\": \"org.mule.extension.http.api.request.validator.ResponseValidatorTypedException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"91ddc820-0f0b-11eb-898f-122027ceb96f\"\n}"
								}
							]
						}
					],
					"description": "To make a payment, three APIs get invoked. The first two are part of the liquidity purchase, where FX is locked in but not disbursed anywhere. The third endpoint instructs where the money is going and coming from.  \n\nThird endpoint, Instruct Payment, requires an existing beneficiary as it uses the ID for that unique beneficiary. You cannot instruct a payment without providing this ID, which signifies there is a well-formed beneficiary saved in the system. This beneficiary object has all the CRUD commands associated, and can be created and amended at will; however, it is an integral part of the payment instruction process. Beneficiary Create is required to create the beneficiary,"
				},
				{
					"name": "Beneficiary",
					"item": [
						{
							"name": "[1] Beneficiary Guide ",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "<string>",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/guides?templateType=<string>&paymentMethods=<string>&bankCurrency=<string>&bankcountry=<string>&destinationcountry=<string>&classification=<string>",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"guides"
									],
									"query": [
										{
											"key": "templateType",
											"value": "<string>"
										},
										{
											"key": "paymentMethods",
											"value": "<string>"
										},
										{
											"key": "bankCurrency",
											"value": "<string>"
										},
										{
											"key": "bankcountry",
											"value": "<string>"
										},
										{
											"key": "destinationcountry",
											"value": "<string>"
										},
										{
											"key": "classification",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "partnerId",
											"value": ""
										},
										{
											"key": "clientCode",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "This endpoint specifies the information needed to create a beneficiary in a particular country. (See `POST` [Create/Edit Bene](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#52d10b0f-0d34-4fbd-8f0a-f1fe040a68d5))\n\nThe URL is a query string that requires five parameters to obtain all the information needed to create the beneficiary:\n\n<ul><li><p>'destinationCountry': ISO2 country code</p></li><li><p>'bankCountry': ISO2 country code</p></li><li><p>'bankCurrency': ISO3 currency code</p></li><li><p>'classification': 'business' or 'individual'</p></li><li><p>'paymentMethod': 'W'- Wire, 'E' - iACH</p></li></ul>\n\n**Note:** If you don't include all five parameters in the URL, the 'provide' element in the response will display any missing information. If 'provide' is an empty array, that means that no additional data is needed. In other words, not providing all five parameters will not result in an error.\n\nIf successful, the response contains a list of the fields required to successfully create a beneficiary. These rules are guidelines for the payload of the `POST` [Create/Edit Bene](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#52d10b0f-0d34-4fbd-8f0a-f1fe040a68d5) endpoint."
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "client_id",
												"value": "252497",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "111111",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "/partner/:partnerId/:clientCode/guide?templateType=Bene&paymentMethods=W,E&bankCurrency=INR&bankcountry=IN&destinationcountry=IN&classification=Individual",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"guide"
											],
											"query": [
												{
													"key": "templateType",
													"value": "Bene"
												},
												{
													"key": "paymentMethods",
													"value": "W,E"
												},
												{
													"key": "bankCurrency",
													"value": "INR"
												},
												{
													"key": "bankcountry",
													"value": "IN"
												},
												{
													"key": "destinationcountry",
													"value": "IN"
												},
												{
													"key": "classification",
													"value": "Individual"
												}
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "erictest1"
												},
												{
													"key": "clientCode",
													"value": "252497",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 16:04:56 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "9085"
										},
										{
											"key": "Content-Length",
											"value": "11849"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"rules\": [\n        {\n            \"id\": \"accountHolderName\",\n            \"regEx\": \"^.{3,100}$\",\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"Name is invalid. Value should be 3 to 100 characters long.\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"templateIdentifier\",\n            \"regEx\": \"^.{1,50}$\",\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"Beneficiary Identifier should not be greater than 50 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"destinationCountry\",\n            \"regEx\": [],\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"IN\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"bankCurrency\",\n            \"regEx\": [],\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"INR\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"classification\",\n            \"regEx\": [],\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"Individual\",\n            \"valueSet\": [\n                {\n                    \"id\": \"Individual\",\n                    \"text\": \"Individual\"\n                },\n                {\n                    \"id\": \"Business\",\n                    \"text\": \"Business\"\n                },\n                {\n                    \"id\": \"Aerospace and defense\",\n                    \"text\": \"Aerospace and defense\"\n                },\n                {\n                    \"id\": \"Agriculture and agric-food\",\n                    \"text\": \"Agriculture and agric-food\"\n                },\n                {\n                    \"id\": \"Apparel / Clothing\",\n                    \"text\": \"Apparel / Clothing\"\n                },\n                {\n                    \"id\": \"Automotive / Trucking\",\n                    \"text\": \"Automotive / Trucking\"\n                },\n                {\n                    \"id\": \"Books / Magazines\",\n                    \"text\": \"Books / Magazines\"\n                },\n                {\n                    \"id\": \"Broadcasting\",\n                    \"text\": \"Broadcasting\"\n                },\n                {\n                    \"id\": \"Building products\",\n                    \"text\": \"Building products\"\n                },\n                {\n                    \"id\": \"Chemicals\",\n                    \"text\": \"Chemicals\"\n                },\n                {\n                    \"id\": \"Dairy\",\n                    \"text\": \"Dairy\"\n                },\n                {\n                    \"id\": \"E-business\",\n                    \"text\": \"E-business\"\n                },\n                {\n                    \"id\": \"Environment\",\n                    \"text\": \"Environment\"\n                },\n                {\n                    \"id\": \"Explosives\",\n                    \"text\": \"Explosives\"\n                },\n                {\n                    \"id\": \"Fisheries and oceans\",\n                    \"text\": \"Fisheries and oceans\"\n                },\n                {\n                    \"id\": \"Food / Beverage distribution\",\n                    \"text\": \"Food / Beverage distribution\"\n                },\n                {\n                    \"id\": \"Footwear\",\n                    \"text\": \"Footwear\"\n                },\n                {\n                    \"id\": \"Forest industries\",\n                    \"text\": \"Forest industries\"\n                },\n                {\n                    \"id\": \"Furniture\",\n                    \"text\": \"Furniture\"\n                },\n                {\n                    \"id\": \"Giftware and crafts\",\n                    \"text\": \"Giftware and crafts\"\n                },\n                {\n                    \"id\": \"Horticulture\",\n                    \"text\": \"Horticulture\"\n                },\n                {\n                    \"id\": \"Hydroelectric energy\",\n                    \"text\": \"Hydroelectric energy\"\n                },\n                {\n                    \"id\": \"Information and communication technologies\",\n                    \"text\": \"Information and communication technologies\"\n                },\n                {\n                    \"id\": \"Intelligent systems\",\n                    \"text\": \"Intelligent systems\"\n                },\n                {\n                    \"id\": \"Livestock\",\n                    \"text\": \"Livestock\"\n                },\n                {\n                    \"id\": \"Medical devices\",\n                    \"text\": \"Medical devices\"\n                },\n                {\n                    \"id\": \"Medical treatment\",\n                    \"text\": \"Medical treatment\"\n                },\n                {\n                    \"id\": \"Minerals, metals and mining\",\n                    \"text\": \"Minerals, metals and mining\"\n                },\n                {\n                    \"id\": \"Oil and gas\",\n                    \"text\": \"Oil and gas\"\n                },\n                {\n                    \"id\": \"Pharmaceuticals and biopharmaceuticals\",\n                    \"text\": \"Pharmaceuticals and biopharmaceuticals\"\n                },\n                {\n                    \"id\": \"Plastics\",\n                    \"text\": \"Plastics\"\n                },\n                {\n                    \"id\": \"Poultry and eggs\",\n                    \"text\": \"Poultry and eggs\"\n                },\n                {\n                    \"id\": \"Printing /Publishing\",\n                    \"text\": \"Printing /Publishing\"\n                },\n                {\n                    \"id\": \"Product design and development\",\n                    \"text\": \"Product design and development\"\n                },\n                {\n                    \"id\": \"Railway\",\n                    \"text\": \"Railway\"\n                },\n                {\n                    \"id\": \"Retail\",\n                    \"text\": \"Retail\"\n                },\n                {\n                    \"id\": \"Shipping and industrial marine\",\n                    \"text\": \"Shipping and industrial marine\"\n                },\n                {\n                    \"id\": \"Soil\",\n                    \"text\": \"Soil\"\n                },\n                {\n                    \"id\": \"Sound recording\",\n                    \"text\": \"Sound recording\"\n                },\n                {\n                    \"id\": \"Sporting goods\",\n                    \"text\": \"Sporting goods\"\n                },\n                {\n                    \"id\": \"Telecommunications equipment\",\n                    \"text\": \"Telecommunications equipment\"\n                },\n                {\n                    \"id\": \"Television\",\n                    \"text\": \"Television\"\n                },\n                {\n                    \"id\": \"Textiles\",\n                    \"text\": \"Textiles\"\n                },\n                {\n                    \"id\": \"Tourism\",\n                    \"text\": \"Tourism\"\n                },\n                {\n                    \"id\": \"Water supply\",\n                    \"text\": \"Water supply\"\n                },\n                {\n                    \"id\": \"Wholesale\",\n                    \"text\": \"Wholesale\"\n                }\n            ]\n        },\n        {\n            \"id\": \"settlementMethods\",\n            \"regEx\": [],\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [\n                {\n                    \"id\": \"W\",\n                    \"text\": \"Wire\"\n                },\n                {\n                    \"id\": \"E\",\n                    \"text\": \"iACH\"\n                }\n            ]\n        },\n        {\n            \"id\": \"paymentMethods\",\n            \"regEx\": [],\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"W\",\n            \"valueSet\": [\n                {\n                    \"id\": \"W\",\n                    \"text\": \"Wire\"\n                },\n                {\n                    \"id\": \"E\",\n                    \"text\": \"iACH\"\n                }\n            ]\n        },\n        {\n            \"id\": \"preferredMethod\",\n            \"regEx\": [],\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"W\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"accountHolderCountry\",\n            \"regEx\": \"^.{2,2}$\",\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"IN\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"accountHolderRegion\",\n            \"regEx\": \"^.{0,100}$\",\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"State/Province must be less than 100 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"accountHolderAddress1\",\n            \"regEx\": \"^.{0,1000}$\",\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"Address Line 1 must be less than 1000 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"accountHolderAddress2\",\n            \"regEx\": \"^.{0,100}$\",\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"Address Line 2 must be less than 100 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"accountHolderCity\",\n            \"regEx\": \"^.{0,100}$\",\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"City must be less than 100 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"accountHolderPostal\",\n            \"regEx\": \"^.{0,30}$\",\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"Postal Code must be less than 30 characters long\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"accountHolderPhoneNumber\",\n            \"regEx\": \"^.{0,100}$\",\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"Beneficiary Phone Number is too long. Maximum 100 characters allowed.\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"accountHolderEmail\",\n            \"regEx\": \"^.{0,250}$\",\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"Email Address must be less than 250 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"sendPayTracker\",\n            \"regEx\": [],\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"ibanDigits\",\n            \"regEx\": [],\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"0\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"ibanEnabled\",\n            \"regEx\": [],\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"false\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"swiftBicCode\",\n            \"regEx\": \"^.{0,12}$\",\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"Swift must be less than 12 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"bankName\",\n            \"regEx\": [],\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"bankCountry\",\n            \"regEx\": \"^.{2,2}$\",\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"IN\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"bankRegion\",\n            \"regEx\": \"^.{0,100}$\",\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"State/Province must be less than 100 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"bankCity\",\n            \"regEx\": \"^.{0,100}$\",\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"City must be less than 100 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"bankAddressLine1\",\n            \"regEx\": \"^.{0,1000}$\",\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"Bank Address Line 1 must be less than 1000 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"bankAddressLine2\",\n            \"regEx\": \"^.{0,100}$\",\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"Bank Address Line 2 must be less than 100 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"bankPostal\",\n            \"regEx\": \"^.{0,30}$\",\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"Postal Code must be less than 30 characters long\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"paymentReference\",\n            \"regEx\": [],\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"internalPaymentAlert\",\n            \"regEx\": [],\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"externalPaymentAlert\",\n            \"regEx\": [],\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"accountNumber\",\n            \"regEx\": \"^[A-Za-z0-9]{1,16}$\",\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"Beneficiary Account Number is invalid. Value should be 1 to 16 digits long.\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"routingCode\",\n            \"regEx\": \"^[A-Za-z0-9]{11}$\",\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"IFSC Code is invalid. Value should be exactly 11 characters long.\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        }\n    ],\n    \"regulatoryRules\": [\n        {\n            \"order\": \"1\",\n            \"id\": \"BeneficiaryAccountType\",\n            \"regEx\": \"^(CACC|SVGS)$\",\n            \"isRequired\": \"true\"\n        }\n    ],\n    \"provide\": []\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "client_id",
												"value": "252497",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "111111",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "/partner/:partnerId/:clientCode/guide?templateType=Bene&paymentMethods=W&bankCurrency=INR&bankcountry=IN&destinationcountry=<string>&classification=<string>",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"guide"
											],
											"query": [
												{
													"key": "templateType",
													"value": "Bene"
												},
												{
													"key": "paymentMethods",
													"value": "W"
												},
												{
													"key": "bankCurrency",
													"value": "INR"
												},
												{
													"key": "bankcountry",
													"value": "IN"
												},
												{
													"key": "destinationcountry",
													"value": "<string>"
												},
												{
													"key": "classification",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "partnerId",
													"value": ""
												},
												{
													"key": "clientCode",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 16:07:58 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "0"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "6754"
										},
										{
											"key": "Content-Length",
											"value": "351"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timeStamp\": \"2020-10-15T16:07:58.492Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": null,\n    \"errorCode\": \"404\",\n    \"errorType\": \"APIKIT:NOT_FOUND\",\n    \"description\": \"/partner//%3Cstring%3E/guide\",\n    \"errorClass\": \"org.mule.module.apikit.exception.NotFoundException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"97b8a810-0f00-11eb-898f-122027ceb96f\"\n}"
								}
							]
						},
						{
							"name": "[2] Create/Edit Bene ",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "2475F2ECF1D6E2D411721FEB64D90E0532A767958C47571030C816B1AF41903E62E85FF66B1437F5A5949BCA2C35D3D156183FE8561B8DD09C6DB8EAE5D9DE5CB3FB96201046ED3207573D5F810AE78C395DDA0FC1128547B3D65E315372FCF9C093C686A088D037780EB4B831E1545C8F950A5344120A6D5D761492F9ABB40181544DF9E82ED828487D902C541B6B012E93EF1E846B74BDA0D5487FE49467F7985BC289965F89700F4574586EAE41C4",
										"description": "(Required) "
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\n\n \t\"identifier\": \"testdemobeneINR2\",\n \t\"templateData\": {\n \t\t\"beneData\": {\n \t\t\t\"beneSpecific\": {\n \t\t\t\t\"accountHolderName\": \"john\",\n \t\t\t\t\"classification\": \"Individual\",\n \t\t\t\t\"accountNumber\": \"67385863631\",\n \t\t\t\t\"localAccountNumber\": \"\",\n \t\t\t\t\"phoneNumber\": \"\",\n \t\t\t\t\"emailAddress\": \"\"\n \t\t\t},\n \t\t\t\"address\": {\n \t\t\t\t\"country\": \"CA\",\n \t\t\t\t\"region\": \"ON\",\n \t\t\t\t\"city\": \"Toronto\",\n \t\t\t\t\"addressLine1\": \"234 king st\",\n \t\t\t\t\"addressLine2\": \"\",\n \t\t\t\t\"postalCode\": \"m5a2r4\"\n \t\t\t}\n \t\t},\n \t\t\"bankData\": {\n \t\t\t\"bankSpecific\": {\n \t\t\t\t\"name\": \"State Bank of India\",\n \t\t\t\t\"routingCode\": \"34356456987\",\n \t\t\t\t\"localRoutingCode\": \"SBIN0070706\",\n \t\t\t\t\"SWIFTBIC\": \"SBININBBXXX\"\n\n \t\t\t},\n \t\t\t\"address\": {\n \t\t\t\t\"country\": \"IN\",\n \t\t\t\t\"region\": \"Kerla\",\n \t\t\t\t\"city\": \"Kochi\",\n \t\t\t\t\"addressLine1\": \"No.37/2156 A5, Madathikunnel Buildi\",\n \t\t\t\t\"addressLine2\": \"\",\n \t\t\t\t\"postalCode\": \"682017\"\n\n \t\t\t},\n\n \t\t\t\"regulatoryData\": {\n \t\t\t\t\"regulatory\": {\n \t\t\t\t\t\"regulatorySpecific\": [{\n \t\t\t\t\t\t\"key\": \"BeneficiaryAccountType\",\n \t\t\t\t\t\t\"value\": \"CACC\"\n\n\n \t\t\t\t\t}]\n\n \t\t\t\t}\n \t\t\t}\n\n \t\t}\n\n \t},\n\n \t\"paymentData\": {\n \t\t\"paymentSpecific\": {\n \t\t\t\"paymentMethod\": [\"E\"],\n \t\t\t\"paymentCurrency\": \"INR\",\n \t\t\t\"sendPaytracker\": false,\n \t\t\t\"preferredMethod\": \"E\",\n \t\t\t\"paymentAlert\": \"\"\n \t\t}\n\n \t}\n\n\n\n }"
								},
								"url": {
									"raw": "/partner/:partnerId/:clientCode/beneficiaries/:beneId",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"beneficiaries",
										":beneId"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "erictest1"
										},
										{
											"key": "clientCode",
											"value": "252497",
											"description": "(Required) "
										},
										{
											"key": "beneId",
											"value": "testdemobeneINR",
											"description": "(Required) "
										}
									]
								},
								"description": "The POST method is used here for better error handling due to the idempotency of POST requests. This results in a resource that can be updated multiple times with the same data and provide the same response.  \nThe ID value is a unique beneficiary ID that you can use in other endpoints. The first time it is provided, it creates a new resource, which is later used to reference that beneficiary.\n\nThe beneficiary ID must be unique as Corpay uses global values in this field. You can use [GUID](https://guidgenerator.com/) which has a very low chance of collision, your own hash, or some determinstic prefix to make it unique.\n\nThe 'id' appears in the URL as well as in the payload.\n\nChanging the 'id' creates a new beneficiary template.\n\nIn the following list, **Required** means that the field is required for *ALL* beneficiaries, regardless of destination. Some destinations require additional information.\n\n* * *\n\n#### Request Body\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>identifier<br><b>Required</b></td><td>The client-assigned template identifier. This value should match the 'beneId' in the URL. The value in this field is returned in the 'beneIdentifier' field when you run <b>GET</b> <a href=\"https://documenter.getpostman.com/view/5203630/UVR4PAbZ#9eba62f9-d534-4c07-99ab-01443efc8e38\">View Bene</a>.<br></td></tr><tr><td>templateData.beneData.beneSpecific.accountHolderName<br><b>Required</b></td><td>Full name of the account holder.</td></tr><tr><td>templateData.beneData.beneSpecific.classification<br><b>Required</b></td><td>Beneficiary classification = 'Individual' or 'Business'. Most of the other values shown in <b>GET</b>.</td></tr><tr><td>templateData.beneData.beneSpecific.accountNumber<br><b>Required ONLY</b> for Wires.</td><td>Bank account number.</td></tr><tr><td>templateData.beneData.beneSpecific.localAccountNumber<br><b>Required ONLY</b> for EFTs.</td><td>Bank account number.</td></tr><tr><td>templateData.beneData.beneSpecific.accountHolderPhoneNumber</td><td>The account holder's phone number.</td></tr><tr><td>templateData.beneData.beneSpecific.accountHolderEmail</td><td>Email address used if 'SendPayTracker' = 'true'.</td></tr><tr><td>templateData.beneData.address.accountHolderCountry<br><b>Required</b></td><td>The account holder's two-letter ISO country code.</td></tr><tr><td>templateData.beneData.address.accountHolderRegion<br><b>Required ONLY</b> only for Canada and the United States.</td><td>The account holder's province or state.</td></tr><tr><td>templateData.beneData.address.accountHolderCity<br><b>Required</b></td><td>The account holder's city.</td></tr><tr><td>templateData.beneData.address.accountHolderAddress1<br><b>Required</b></td><td>First line of the account holder's address.</td></tr><tr><td>templateData.beneData.address.accountHolderAddress2</td><td>Second line of the account holder's address.</td></tr><tr><td>templateData.beneData.address.accountHolderPostal</td><td>The account holder's postal or zip code.</td></tr><tr><td>templateData.bankData.bankSpecific.bankName<br><b>Required</b></td><td>Name of the financial institution.</td></tr><tr><td>templateData.bankData.bankSpecific.routingCode<br><b>Required ONLY</b> for Wires.</td><td>Bank routing code.</td></tr><tr><td>templateData.bankData.bankSpecific.localRoutingCode<br><b>RequiredD ONLY</b> for EFTs.</td><td>Bank routing code.</td></tr><tr><td>templateData.bankData.bankSpecific.swiftBicCode<br><b>Required ONLY</b> for Wires.</td><td>The unique identifier for the bank or financial institution.</td></tr><tr><td>templateData.bankData.address.country<br><b>Required</b></td><td>Two-digit ISO code for the country where the beneficiary's bank is located.</td></tr><tr><td>templateData.bankData.address.bankRegion</td><td>The bank's province or state.</td></tr><tr><td>templateData.bankData.address.bankCity<br><b>Required</b></td><td>The bank's city.</td></tr><tr><td>templateData.bankData.address.bankAddressLine1<br><b>Required</b></td><td>First line of the bank's address.</td></tr><tr><td>templateData.bankData.address.bankAddressLine2</td><td>Second line of the bank's address.</td></tr><tr><td>templateData.bankData.address.bankPostal</td><td>The bank's postal or zip code.</td></tr><tr><td>templateData.regulatoryData.regulatory.regulatorySpecific</td><td>The fields and corresponding values needed to satisfy regulatory requirements for the destination country.</td></tr><tr><td>templateData.paymentData.paymentSpecific.paymentMethods<br><b>Required</b></td><td>Methods of payment that can be used for this beneficiary = ['W' or 'E'].</td></tr><tr><td>templateData.paymentData.paymentSpecific.bankCurrency<br><b>Required</b></td><td>Three-digit ISO-4217 code for the bank account currency.</td></tr><tr><td>templateData.paymentData.paymentSpecific.preferredMethod<br><b>Required</b></td><td>Method of payment preferred by this beneficiary.</td></tr><tr><td>templateData.paymentData.paymentSpecific.sendPayTracker</td><td>Specifies whether to send an email alert to the beneficiary whenever a payment is released = ['true', 'false'].</td></tr><tr><td>templateData.paymentData.paymentSpecific.paymentAlert</td><td>Internal email addresses to notify when a payment is made to this beneficiary.</td></tr></tbody></table>\n\n* * *\n\n#### Response Body\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>templateId</td><td>The <i>id</i> that is used to reference the most recent iteration of a beneficiary template (since the template is mutable, it generates a new <i>id</i> every time there is a change</td></tr></tbody></table>\n\n* * *\n\n#### Bene Creation Errors\n\n<table><tbody><tr><th>Error Code</th><th>Description</th></tr><tr><td>400 \"Beneficiary Identifier {templateIdentifier} has already been assigned\"</td><td>This happens when you are trying to create a beneficiary with a Unique URL Identifier, but you are using a 'templateIdentifier' that already exists.</td></tr><tr><td>400 \"Form Not Valid\"</td><td>This error is generated when there is missing or invalid data in one of the beneficiary fields. For example: missing regulatory fields. Refer to the <b>GET</b> <a href=\"https://documenter.getpostman.com/view/5203630/UVR4PAbZ#cfd6c235-ec61-49b7-95c5-9686dafa57f3\">Beneficiary Guide</a> for the validation rules.</td></tr><tr><td>401 \"Authorization has been denied for this request\"</td><td>The URL contains an invalid 'clientCode'. This can be fixed by using the right 'clientCode'.</td></tr></tbody></table>"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "  {\n\n \t\"identifier\": \"testdemobeneINR2\",\n \t\"templateData\": {\n \t\t\"beneData\": {\n \t\t\t\"beneSpecific\": {\n \t\t\t\t\"accountHolderName\": \"john\",\n \t\t\t\t\"classification\": \"Individual\",\n \t\t\t\t\"accountNumber\": \"67385863631\",\n \t\t\t\t\"localAccountNumber\": \"\",\n \t\t\t\t\"phoneNumber\": \"\",\n \t\t\t\t\"emailAddress\": \"\"\n \t\t\t},\n \t\t\t\"address\": {\n \t\t\t\t\"country\": \"CA\",\n \t\t\t\t\"region\": \"ON\",\n \t\t\t\t\"city\": \"Toronto\",\n \t\t\t\t\"addressLine1\": \"234 king st\",\n \t\t\t\t\"addressLine2\": \"\",\n \t\t\t\t\"postalCode\": \"m5a2r4\"\n \t\t\t}\n \t\t},\n \t\t\"bankData\": {\n \t\t\t\"bankSpecific\": {\n \t\t\t\t\"name\": \"State Bank of India\",\n \t\t\t\t\"routingCode\": \"34356456987\",\n \t\t\t\t\"localRoutingCode\": \"SBIN0070706\",\n \t\t\t\t\"SWIFTBIC\": \"SBININBBXXX\"\n\n \t\t\t},\n \t\t\t\"address\": {\n \t\t\t\t\"country\": \"IN\",\n \t\t\t\t\"region\": \"Kerla\",\n \t\t\t\t\"city\": \"Kochi\",\n \t\t\t\t\"addressLine1\": \"No.37/2156 A5, Madathikunnel Buildi\",\n \t\t\t\t\"addressLine2\": \"\",\n \t\t\t\t\"postalCode\": \"682017\"\n\n \t\t\t},\n\n \t\t\t\"regulatoryData\": {\n \t\t\t\t\"regulatory\": {\n \t\t\t\t\t\"regulatorySpecific\": [{\n \t\t\t\t\t\t\"key\": \"BeneficiaryAccountType\",\n \t\t\t\t\t\t\"value\": \"CACC\"\n\n\n \t\t\t\t\t}]\n\n \t\t\t\t}\n \t\t\t}\n\n \t\t}\n\n \t},\n\n \t\"paymentData\": {\n \t\t\"paymentSpecific\": {\n \t\t\t\"paymentMethod\": [\"E\"],\n \t\t\t\"paymentCurrency\": \"INR\",\n \t\t\t\"sendPaytracker\": false,\n \t\t\t\"preferredMethod\": \"E\",\n \t\t\t\"paymentAlert\": \"\"\n \t\t}\n\n \t}\n\n\n\n }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "/partner/:partnerId/:clientCode/beneficiaries/:beneId",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"beneficiaries",
												":beneId"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "erictest1"
												},
												{
													"key": "clientCode",
													"value": "252497",
													"description": "(Required) "
												},
												{
													"key": "beneId",
													"value": "testdemobeneINR_example",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 16:38:49 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "17566"
										},
										{
											"key": "Content-Length",
											"value": "54"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"templateId\": \"c1342aa9fa554c1aa3a2039e720a9aaa\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n    \n    \"identifier\": \"testdemobeneINR2_example\",\n    \"templateData\": {\n        \"beneData\": {\n            \"beneSpecific\": {\n                \"accountHolderName\": \"john\",\n                \"classification\": \"Individual\",\n                \"accountNumber\": \"67385863631\",\n                \"localAccountNumber\": \"\",\n\t\t\t\t\"phoneNumber\": \"\",\n\t\t\t\t\"emailAddress\": \"\"\n            },\n            \"address\": {\n                \"country\": \"CA\",\n                \"region\": \"ON\",\n                \"city\": \"Toronto\",\n                \"addressLine1\": \"234 king st\",\n                \"addressLine2\": \"\",\n\t\t\t\t\"postalCode\" : \"m5a2r4\"\n\t\t\t}\t\n        },\n        \"bankData\": {\n            \"bankSpecific\": {\n                \"name\": \"State Bank of India\",\n                \"routingCode\": \"34356456987\",\n                \"localRoutingCode\": \"SBIN0070706\",\n                \"SWIFTBIC\": \"SBININBBXXX\"\n\n            },\n            \"address\": {\n                \"country\": \"IN\",\n                \"region\": \"Kerla\",\n                \"city\": \"Kochi\",\n                \"addressLine1\": \"No.37/2156 A5, Madathikunnel Buildi\",\n                \"addressLine2\": \"\",\n\t\t\t\t\"postalCode\" : \"682017\"\n\n            }\n        }\n        \n\t},\n            \"regulatoryData\":{\n\t\t       \"regulatory\": {  \n\t\t       \"regulatorySpecific\": [{   \n               \"key\": \"BeneficiaryAccountType\", \n               \"value\": \"CACC\"\n                \n\t\t\t\n\t\t    }]\n\t\t  \n\t  \t}\t\n\t},\n    \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\"E\"],\n\t\t\t\t\"paymentCurrency\": \"INR\",\n                \"sendPaytracker\": false,\n                \"preferredMethod\": \"E\",\n                \"paymentAlert\":\"\"\n                }\n\n    }\n        \n\n    \n}"
										},
										"url": {
											"raw": "/partner/:partnerId/:clientCode/beneficiaries/:beneId",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"beneficiaries",
												":beneId"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "erictest1"
												},
												{
													"key": "clientCode",
													"value": "252497",
													"description": "(Required) "
												},
												{
													"key": "beneId",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 16:39:18 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "6755"
										},
										{
											"key": "Content-Length",
											"value": "363"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timeStamp\": \"2020-10-15T16:39:18.492Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": null,\n    \"errorCode\": \"404\",\n    \"errorType\": \"APIKIT:NOT_FOUND\",\n    \"description\": \"/partner/erictest1/252497/beneficiaries/\",\n    \"errorClass\": \"org.mule.module.apikit.exception.NotFoundException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"f84995f0-0f04-11eb-898f-122027ceb96f\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n    \n    \"identifier\": \"testdemobeneINR2_example\",\n    \"templateData\": {\n        \"beneData\": {\n            \"beneSpecific\": {\n                \"accountHolderName\": \"john\",\n                \"classification\": \"Individual\",\n                \"accountNumber\": \"67385863631\",\n                \"localAccountNumber\": \"\",\n\t\t\t\t\"phoneNumber\": \"\",\n\t\t\t\t\"emailAddress\": \"\"\n            },\n            \"address\": {\n                \"country\": \"CA\",\n                \"region\": \"ON\",\n                \"city\": \"Toronto\",\n                \"addressLine1\": \"234 king st\",\n                \"addressLine2\": \"\",\n\t\t\t\t\"postalCode\" : \"m5a2r4\"\n\t\t\t}\t\n        },\n        \"bankData\": {\n            \"bankSpecific\": {\n                \"name\": \"State Bank of India\",\n                \"routingCode\": \"34356456987\",\n                \"localRoutingCode\": \"SBIN0070706\",\n                \"SWIFTBIC\": \"SBININBBXXX\"\n\n            },\n            \"address\": {\n                \"country\": \"IN\",\n                \"region\": \"Kerla\",\n                \"city\": \"Kochi\",\n                \"addressLine1\": \"No.37/2156 A5, Madathikunnel Buildi\",\n                \"addressLine2\": \"\",\n\t\t\t\t\"postalCode\" : \"682017\"\n\n            }\n        }\n        \n\t},\n            \"regulatoryData\":{\n\t\t       \"regulatory\": {  \n\t\t       \"regulatorySpecific\": [{   \n               \"key\": \"BeneficiaryAccountType\", \n               \"value\": \"CACC\"\n                \n\t\t\t\n\t\t    }]\n\t\t  \n\t  \t}\t\n\t},\n    \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\"\"],\n\t\t\t\t\"paymentCurrency\": \"\",\n                \"sendPaytracker\": false,\n                \"preferredMethod\": \"E\",\n                \"paymentAlert\":\"\"\n                }\n\n    }\n        \n\n    \n}"
										},
										"url": {
											"raw": "/partner/:partnerId/:clientCode/beneficiaries/:beneId",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"beneficiaries",
												":beneId"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "erictest1"
												},
												{
													"key": "clientCode",
													"value": "252497",
													"description": "(Required) "
												},
												{
													"key": "beneId",
													"value": "testdemobeneINR_example",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 16:39:58 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "7152"
										},
										{
											"key": "Content-Length",
											"value": "574"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timeStamp\": \"2020-10-15T16:39:58.142Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": null,\n    \"errorCode\": \"400\",\n    \"errorType\": \"APIKIT:BAD_REQUEST\",\n    \"description\": \"/paymentData/paymentSpecific/paymentMethod/0  is not a valid enum value  Location:   Position: Line 0,  Column 0\\n/paymentData/paymentSpecific/paymentCurrency string [] does not match pattern ^[A-Z]{3}$  Location:   Position: Line 0,  Column 0\",\n    \"errorClass\": \"org.mule.module.apikit.api.exception.BadRequestException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"0fe3e9e0-0f05-11eb-898f-122027ceb96f\"\n}"
								}
							]
						}
					],
					"description": "Corpay provides a variety of helper APIs to assist with creating the object. These APIs help create a good UX to capture and validate inputs. These APIs include bank search, IBAN validation, city and country lookups and most importantly, the dynamic payment rules. By following this model, we achieve good beneficiary data that will go through our payment rails with minimal touch points. This results in fast payments with low error rates across all modalities of payments.\n\nThe two endpoints provided in the sample are for creating the beneficiary and retrieving the required data fields for the beneficiary."
				}
			],
			"description": "Corpay Cross-Border API is a REST API with a focus on objects and their reusability. The examples provided are a quick way to see the APIs at work, and do not cover all scenarios. For advanced use cases, the Technical Sales team will assist with designing and implementation of an optimal solution.\n\nThe first workflow is the payment process which involves three steps to completing and disbursing funds. It consists of Liquidity Purchase based on guaranteed rate, followed by payment instruction.  \nThe second workflow is the requirement to create the beneficiary that the disbursements will go to, along with a guide to the data points required."
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Token Authentication",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "AccessToken",
								"value": "<string>"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"scope\": \"Partner\",\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJsaW5raWJhbiIsImlhdCI6MTYxMDQ2NjczOCwiZXhwIjoxNjEwNDY3OTM4LCJhdWQiOiJjYW1icmlkZ2VmeCIsInN1YiI6IiJ9.zSZZV-v0sn7w3QCJfbtneocDOktzpdNDXcB2oiHbONk\"\n}"
						},
						"url": {
							"raw": "/partner/:partnerId/tokens",
							"path": [
								"partner",
								":partnerId",
								"tokens"
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Sample payload for the JWT token generation:\n\n```\n{\n\"iss\": \"test\",\n\"iat\": 1480103915,\n\"exp\": 1480105116,\n\"aud\": \"cambridgefx\",\n\"sub\": \"\"\n}\n\n```\n\n[This link](http://jwtbuilder.jamiekurtz.com/) has a form to generate JWT token.\n\nFor the token, you must be current between the window of the issue and the expiry (`iat` and `exp`, respectively) of the Unix-Timestamp.\n\n* * *\n\n#### Implementation Notes:\n\n*   Algorithm has to be HS256.\n*   Assertion needs to be regenerated as it has expiry time.\n*   Assertion value is an encoded JWT token that contain security key provided by Corpay.\n*   `iss` is the Corpay-provided partner ID.\n    \n\nClient level is done within the same URL providing the appropriate scope and token.  \nThe header will be the partner Corpay accessCode (this was provided in the response of the scope: \"Partner\" call).\n\nThe authentication on the Client-level is similar to the authentication process at the partner-level.  \nTwo key differences in the JWT construction:\n\n<ul><li><p><code>access_code</code> from Partner Auth goes in the header of this API.</p></li><li><p>API username is the `iss` in the JWT token.</p></li></ul>\n\nThe `access_code` granted at the Client-level will be the session token for all subsequent calls in the current user session.\n\nExpiry of the `access_code` can accommodate different use cases."
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "client_Id",
										"value": "252497",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "111111",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"scope\": \"Partner\",\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJlcmljdGVzdDEiLCJpYXQiOjE2MDI3MDM1ODMsImV4cCI6MTYwMjcwNDc4MywiYXVkIjoiY2FtYnJpZGdlZngiLCJzdWIiOiIifQ.j2AP_WC8vOs9mqY3kausIA9VtKyfUcpIbUBEsdMkkCI\"\n}"
								},
								"url": {
									"raw": "/partner/:partnerId/tokens",
									"path": [
										"partner",
										":partnerId",
										"tokens"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Wed, 14 Oct 2020 19:29:01 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "4312"
								},
								{
									"key": "Content-Length",
									"value": "374"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_code\": \"90F4C7A365347CE15B910D64E89E8940E8573552C8BE685974EFA36C5AB2C7F706DBF6F2540FDEA58DA94B79FE2FC7117FB1B25BF971FA89481A0275B209C4B32D836FF9582332B1D2B59D089BFC2BBABEB1FCB9222DBF03EF072074E4ADD807FA57171638C66756BE52ED52F7912C53B29FC1DEE2CD879208089607EC14CCA552C961F834E4E6FC9A43A67AD9D836CA33152A98268B88F9DA36598F0F484DD0E1FE70F4D6D244DB03395042BD29BBEC\",\n    \"expires_in\": 3000000\n}"
						},
						{
							"name": "401 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "client_Id",
										"value": "252497",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "111111",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"scope\": \"partner\",\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJlcmljdGVzdDEiLCJpYXQiOjE2MDI3MDM1ODMsImV4cCI6MTYwMjcwNDc4MywiYXVkIjoiY2FtYnJpZGdlZngiLCJzdWIiOiIifQ.j2AP_WC8vOs9mqY3kausIA9VtKyfUcpIbUBEsdMkkCI\"\n}"
								},
								"url": {
									"raw": "/partner/:partnerId/tokens",
									"path": [
										"partner",
										":partnerId",
										"tokens"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Wed, 14 Oct 2020 19:32:34 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "10708"
								},
								{
									"key": "Content-Length",
									"value": "119"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"Unauthorized\",\n    \"description\": \"Invalid scope partner provided. Please pass either Partner or Client\"\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "AccessToken",
										"value": "{{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"scope\": \"Partner\",\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJlcmljdGVzdDEiLCJpYXQiOjE2MTQzNzIzMDUsImV4cCI6MTYxNDM3MzUwNSwiYXVkIjoiY2FtYnJpZGdlZngiLCJzdWIiOiIifQ.EcnkSFaRnuVtXU7JRX1aY_ztzlX6voPYFu_owuGB_rA\"\n}"
								},
								"url": {
									"raw": "https://cambridgefx-payments-qa.ca-ce1-01.api.fleetcor.com/api/partner/:partnerId/tokens",
									"protocol": "https",
									"host": [
										"cambridgefx-payments-qa",
										"ca-ce1-01",
										"api",
										"fleetcor",
										"com"
									],
									"path": [
										"api",
										"partner",
										":partnerId",
										"tokens"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 17 Mar 2021 14:21:49 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-correlation-id",
									"value": "77251804-5678-4e63-99db-3d3666ad3a0e"
								},
								{
									"key": "X-CDN",
									"value": "Imperva"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "X-Iinfo",
									"value": "12-144133752-144159433 NNYN CT(30 32 0) RT(1615990813753 94413) q(0 0 1 -1) r(7 7) U6"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2021-03-17T14:21:49.381Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": \"Bad Request\",\n    \"errorCode\": \"400\",\n    \"errorType\": \"HTTP:BAD_REQUEST\",\n    \"description\": \"Token failed\",\n    \"errorClass\": \"org.mule.extension.http.api.request.validator.ResponseValidatorTypedException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"77251804-5678-4e63-99db-3d3666ad3a0e\"\n}"
						}
					]
				}
			],
			"description": "Our RESTful API suite employs an OAuth2 framework which consists of a two-legged flow that involves exchanging a HS256-signed JWT token for a “AccessToken”. The flow is under a single URL with a body <br>\n\n    {\n    \"scope\": str,\n    \"token\": varchar,\n    }\n\nWhereby scope is the level (Partner or Client) and the token will be the JWT token created. \n\nThe scope values are Partner or Client, first letter capitalized\nthe token is specific to the key that is provided for each of the scope values. \n\n\nThe partner-level and the client-level work in the following way:\nGiven “Issuer” - either the name of the Partner or the Client (contained in the Claim Set) - and the Signature, you create an encoded JWT Token (hashed via HS256); which is inserted into the body of the request of this call (in the “assertion” field). \n\nWhen creating the token, the ‘issued-at’ and the ‘expiration’ should be: current, and advisably set apart at an interval of 20 minutes, respectively. \n\nOnce the call is placed, the response provides an “access_code” which will be submitted to the “AccessToken” field in the header of the subsequent (Client-Level) request. Since there is no call preceding partner-level, there is no need to pass anything through “AccessToken” for the partner-level.\n\nTwo more values may be required which are \"client_id\" and \"client_secret\" the values are same as the url for \"partnerId\" and \"clientcode\" respectively. \n\n----\n\n# Authentication Errors\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Error Code</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>400 Bad Request - Invalid value for audience</td>\n    <td>JWT audience (aud) value of 'cambridgefx' was expected.  Make sure that the audience (\"aud\") is set to \"cambridgefx\" (in the JWT claimset)</td>\n  </tr>\n  <tr>\n    <td>400 Bad Request - 'exp' token is set too far into the future</td>\n    <td>This error is the result of setting the token too far into the future. The threshold is approximately 24 hours after issue.</td></tr>\n    <tr>\n    <td>400 Bad Request - Invalid Issuer (either Partner or User)</td>\n    <td>User not found or partner access not configured. Check the \"error_description\" parameter for more information.</td></tr>\n    <tr>\n    <td>400 Bad Request - Invalid signature key</td>\n    <td>The auth key or signature must be current; otherwise the token will not be signed properly.</td></tr>\n    <tr>\n    <td>400 Bad Request - JWT Token is expired</td>\n    <td>As a general rule, use 'time + 20 minutes' as your expiry date/time.</td></tr>\n  </tr>\n</table>",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Guide",
			"item": [
				{
					"name": "Beneficiary Guide",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"The response has all properties\", () => {\r",
									"    //parse the response json and test three properties\r",
									"    const responseJson = pm.response.json();\r",
									"});\r",
									"pm.test(\"CMG-AccessToken header is present\", () => {\r",
									"  pm.request.to.have.header(\"CMG-AccessToken\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>",
								"description": "(Required) "
							}
						],
						"url": {
							"raw": "/partner/:partnerId/:clientCode/guides?templateType=<string>&paymentMethods=<string>&bankCurrency=<string>&bankcountry=<string>&destinationcountry=<string>&classification=<string>",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"guides"
							],
							"query": [
								{
									"key": "templateType",
									"value": "<string>"
								},
								{
									"key": "paymentMethods",
									"value": "<string>"
								},
								{
									"key": "bankCurrency",
									"value": "<string>"
								},
								{
									"key": "bankcountry",
									"value": "<string>"
								},
								{
									"key": "destinationcountry",
									"value": "<string>"
								},
								{
									"key": "classification",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>"
								},
								{
									"key": "clientCode",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "This endpoint specifies the information needed to create a beneficiary in a particular country. See `POST` [Create/Edit Bene](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#52d10b0f-0d34-4fbd-8f0a-f1fe040a68d5)\n\nThe URL is a query string that requires five parameters to obtain all the information needed to create the beneficiary:\n\n<ul><li><p>'destinationCountry': ISO2 country code</p></li><li><p>'bankCountry': ISO2 country code</p></li><li><p>'bankCurrency': ISO3 currency code</p></li><li><p>'classification': 'business' or 'individual'</p></li><li><p>'paymentMethod': 'W'- Wire, 'E' - iACH</p></li></ul>\n\n**Note:** If you don't include all five parameters in the URL, the 'provide' element in the response will display any missing information. If 'provide' is an empty array, that means that no additional data is needed. In other words, not providing all five parameters will not result in an error.\n\nIf successful, the response contains a list of the fields required to successfully create a beneficiary. These rules are guidelines for the payload of the `POST` [Create/Edit Bene](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#52d10b0f-0d34-4fbd-8f0a-f1fe040a68d5) endpoint."
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "client_id",
										"value": "252497",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "111111",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/guide?templateType=Bene&paymentMethods=W,E&bankCurrency=INR&bankcountry=IN&destinationcountry=IN&classification=Individual",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"guide"
									],
									"query": [
										{
											"key": "templateType",
											"value": "Bene"
										},
										{
											"key": "paymentMethods",
											"value": "W,E"
										},
										{
											"key": "bankCurrency",
											"value": "INR"
										},
										{
											"key": "bankcountry",
											"value": "IN"
										},
										{
											"key": "destinationcountry",
											"value": "IN"
										},
										{
											"key": "classification",
											"value": "Individual"
										}
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}"
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 16:04:56 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "9085"
								},
								{
									"key": "Content-Length",
									"value": "11849"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rules\": [\n        {\n            \"id\": \"accountHolderName\",\n            \"regEx\": \"^.{3,100}$\",\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"Name is invalid. Value should be 3 to 100 characters long.\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"templateIdentifier\",\n            \"regEx\": \"^.{1,50}$\",\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"Beneficiary Identifier should not be greater than 50 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"destinationCountry\",\n            \"regEx\": [],\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"IN\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"bankCurrency\",\n            \"regEx\": [],\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"INR\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"classification\",\n            \"regEx\": [],\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"Individual\",\n            \"valueSet\": [\n                {\n                    \"id\": \"Individual\",\n                    \"text\": \"Individual\"\n                },\n                {\n                    \"id\": \"Business\",\n                    \"text\": \"Business\"\n                },\n                {\n                    \"id\": \"Aerospace and defense\",\n                    \"text\": \"Aerospace and defense\"\n                },\n                {\n                    \"id\": \"Agriculture and agric-food\",\n                    \"text\": \"Agriculture and agric-food\"\n                },\n                {\n                    \"id\": \"Apparel / Clothing\",\n                    \"text\": \"Apparel / Clothing\"\n                },\n                {\n                    \"id\": \"Automotive / Trucking\",\n                    \"text\": \"Automotive / Trucking\"\n                },\n                {\n                    \"id\": \"Books / Magazines\",\n                    \"text\": \"Books / Magazines\"\n                },\n                {\n                    \"id\": \"Broadcasting\",\n                    \"text\": \"Broadcasting\"\n                },\n                {\n                    \"id\": \"Building products\",\n                    \"text\": \"Building products\"\n                },\n                {\n                    \"id\": \"Chemicals\",\n                    \"text\": \"Chemicals\"\n                },\n                {\n                    \"id\": \"Dairy\",\n                    \"text\": \"Dairy\"\n                },\n                {\n                    \"id\": \"E-business\",\n                    \"text\": \"E-business\"\n                },\n                {\n                    \"id\": \"Environment\",\n                    \"text\": \"Environment\"\n                },\n                {\n                    \"id\": \"Explosives\",\n                    \"text\": \"Explosives\"\n                },\n                {\n                    \"id\": \"Fisheries and oceans\",\n                    \"text\": \"Fisheries and oceans\"\n                },\n                {\n                    \"id\": \"Food / Beverage distribution\",\n                    \"text\": \"Food / Beverage distribution\"\n                },\n                {\n                    \"id\": \"Footwear\",\n                    \"text\": \"Footwear\"\n                },\n                {\n                    \"id\": \"Forest industries\",\n                    \"text\": \"Forest industries\"\n                },\n                {\n                    \"id\": \"Furniture\",\n                    \"text\": \"Furniture\"\n                },\n                {\n                    \"id\": \"Giftware and crafts\",\n                    \"text\": \"Giftware and crafts\"\n                },\n                {\n                    \"id\": \"Horticulture\",\n                    \"text\": \"Horticulture\"\n                },\n                {\n                    \"id\": \"Hydroelectric energy\",\n                    \"text\": \"Hydroelectric energy\"\n                },\n                {\n                    \"id\": \"Information and communication technologies\",\n                    \"text\": \"Information and communication technologies\"\n                },\n                {\n                    \"id\": \"Intelligent systems\",\n                    \"text\": \"Intelligent systems\"\n                },\n                {\n                    \"id\": \"Livestock\",\n                    \"text\": \"Livestock\"\n                },\n                {\n                    \"id\": \"Medical devices\",\n                    \"text\": \"Medical devices\"\n                },\n                {\n                    \"id\": \"Medical treatment\",\n                    \"text\": \"Medical treatment\"\n                },\n                {\n                    \"id\": \"Minerals, metals and mining\",\n                    \"text\": \"Minerals, metals and mining\"\n                },\n                {\n                    \"id\": \"Oil and gas\",\n                    \"text\": \"Oil and gas\"\n                },\n                {\n                    \"id\": \"Pharmaceuticals and biopharmaceuticals\",\n                    \"text\": \"Pharmaceuticals and biopharmaceuticals\"\n                },\n                {\n                    \"id\": \"Plastics\",\n                    \"text\": \"Plastics\"\n                },\n                {\n                    \"id\": \"Poultry and eggs\",\n                    \"text\": \"Poultry and eggs\"\n                },\n                {\n                    \"id\": \"Printing /Publishing\",\n                    \"text\": \"Printing /Publishing\"\n                },\n                {\n                    \"id\": \"Product design and development\",\n                    \"text\": \"Product design and development\"\n                },\n                {\n                    \"id\": \"Railway\",\n                    \"text\": \"Railway\"\n                },\n                {\n                    \"id\": \"Retail\",\n                    \"text\": \"Retail\"\n                },\n                {\n                    \"id\": \"Shipping and industrial marine\",\n                    \"text\": \"Shipping and industrial marine\"\n                },\n                {\n                    \"id\": \"Soil\",\n                    \"text\": \"Soil\"\n                },\n                {\n                    \"id\": \"Sound recording\",\n                    \"text\": \"Sound recording\"\n                },\n                {\n                    \"id\": \"Sporting goods\",\n                    \"text\": \"Sporting goods\"\n                },\n                {\n                    \"id\": \"Telecommunications equipment\",\n                    \"text\": \"Telecommunications equipment\"\n                },\n                {\n                    \"id\": \"Television\",\n                    \"text\": \"Television\"\n                },\n                {\n                    \"id\": \"Textiles\",\n                    \"text\": \"Textiles\"\n                },\n                {\n                    \"id\": \"Tourism\",\n                    \"text\": \"Tourism\"\n                },\n                {\n                    \"id\": \"Water supply\",\n                    \"text\": \"Water supply\"\n                },\n                {\n                    \"id\": \"Wholesale\",\n                    \"text\": \"Wholesale\"\n                }\n            ]\n        },\n        {\n            \"id\": \"settlementMethods\",\n            \"regEx\": [],\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [\n                {\n                    \"id\": \"W\",\n                    \"text\": \"Wire\"\n                },\n                {\n                    \"id\": \"E\",\n                    \"text\": \"iACH\"\n                }\n            ]\n        },\n        {\n            \"id\": \"paymentMethods\",\n            \"regEx\": [],\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"W\",\n            \"valueSet\": [\n                {\n                    \"id\": \"W\",\n                    \"text\": \"Wire\"\n                },\n                {\n                    \"id\": \"E\",\n                    \"text\": \"iACH\"\n                }\n            ]\n        },\n        {\n            \"id\": \"preferredMethod\",\n            \"regEx\": [],\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"W\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"accountHolderCountry\",\n            \"regEx\": \"^.{2,2}$\",\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"IN\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"accountHolderRegion\",\n            \"regEx\": \"^.{0,100}$\",\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"State/Province must be less than 100 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"accountHolderAddress1\",\n            \"regEx\": \"^.{0,1000}$\",\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"Address Line 1 must be less than 1000 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"accountHolderAddress2\",\n            \"regEx\": \"^.{0,100}$\",\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"Address Line 2 must be less than 100 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"accountHolderCity\",\n            \"regEx\": \"^.{0,100}$\",\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"City must be less than 100 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"accountHolderPostal\",\n            \"regEx\": \"^.{0,30}$\",\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"Postal Code must be less than 30 characters long\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"accountHolderPhoneNumber\",\n            \"regEx\": \"^.{0,100}$\",\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"Beneficiary Phone Number is too long. Maximum 100 characters allowed.\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"accountHolderEmail\",\n            \"regEx\": \"^.{0,250}$\",\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"Email Address must be less than 250 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"sendPayTracker\",\n            \"regEx\": [],\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"ibanDigits\",\n            \"regEx\": [],\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"0\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"ibanEnabled\",\n            \"regEx\": [],\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"false\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"swiftBicCode\",\n            \"regEx\": \"^.{0,12}$\",\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"Swift must be less than 12 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"bankName\",\n            \"regEx\": [],\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"bankCountry\",\n            \"regEx\": \"^.{2,2}$\",\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"IN\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"bankRegion\",\n            \"regEx\": \"^.{0,100}$\",\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"State/Province must be less than 100 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"bankCity\",\n            \"regEx\": \"^.{0,100}$\",\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"City must be less than 100 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"bankAddressLine1\",\n            \"regEx\": \"^.{0,1000}$\",\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"Bank Address Line 1 must be less than 1000 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"bankAddressLine2\",\n            \"regEx\": \"^.{0,100}$\",\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"Bank Address Line 2 must be less than 100 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"bankPostal\",\n            \"regEx\": \"^.{0,30}$\",\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"Postal Code must be less than 30 characters long\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"paymentReference\",\n            \"regEx\": [],\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"internalPaymentAlert\",\n            \"regEx\": [],\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"externalPaymentAlert\",\n            \"regEx\": [],\n            \"isRequired\": \"false\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"accountNumber\",\n            \"regEx\": \"^[A-Za-z0-9]{1,16}$\",\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"Beneficiary Account Number is invalid. Value should be 1 to 16 digits long.\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        },\n        {\n            \"id\": \"routingCode\",\n            \"regEx\": \"^[A-Za-z0-9]{11}$\",\n            \"isRequired\": \"true\",\n            \"errorMessage\": \"IFSC Code is invalid. Value should be exactly 11 characters long.\",\n            \"defaultValue\": \"\",\n            \"valueSet\": []\n        }\n    ],\n    \"regulatoryRules\": [\n        {\n            \"order\": \"1\",\n            \"id\": \"BeneficiaryAccountType\",\n            \"regEx\": \"^(CACC|SVGS)$\",\n            \"isRequired\": \"true\"\n        }\n    ],\n    \"provide\": []\n}"
						},
						{
							"name": "404 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "client_id",
										"value": "252497",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "111111",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/guide?templateType=Bene&paymentMethods=W&bankCurrency=INR&bankcountry=IN&destinationcountry=<string>&classification=<string>",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"guide"
									],
									"query": [
										{
											"key": "templateType",
											"value": "Bene"
										},
										{
											"key": "paymentMethods",
											"value": "W"
										},
										{
											"key": "bankCurrency",
											"value": "INR"
										},
										{
											"key": "bankcountry",
											"value": "IN"
										},
										{
											"key": "destinationcountry",
											"value": "<string>"
										},
										{
											"key": "classification",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}"
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 16:07:58 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "0"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "6754"
								},
								{
									"key": "Content-Length",
									"value": "351"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2020-10-15T16:07:58.492Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": null,\n    \"errorCode\": \"404\",\n    \"errorType\": \"APIKIT:NOT_FOUND\",\n    \"description\": \"/partner//%3Cstring%3E/guide\",\n    \"errorClass\": \"org.mule.module.apikit.exception.NotFoundException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"97b8a810-0f00-11eb-898f-122027ceb96f\"\n}"
						},
						{
							"name": "Beneficiary Guide",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "https://cambridgefx-payments-qa.ca-ce1-01.api.fleetcor.com/api/partner/:partnerId/:clientCode/guides?templateType=bene&paymentMethods=W&bankCurrency=EUR&bankcountry=FR&destinationcountry=FR&classification=individual",
									"protocol": "https",
									"host": [
										"cambridgefx-payments-qa",
										"ca-ce1-01",
										"api",
										"fleetcor",
										"com"
									],
									"path": [
										"api",
										"partner",
										":partnerId",
										":clientCode",
										"guides"
									],
									"query": [
										{
											"key": "templateType",
											"value": "bene"
										},
										{
											"key": "paymentMethods",
											"value": "W"
										},
										{
											"key": "bankCurrency",
											"value": "EUR"
										},
										{
											"key": "bankcountry",
											"value": "FR"
										},
										{
											"key": "destinationcountry",
											"value": "FR"
										},
										{
											"key": "classification",
											"value": "individual"
										}
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{parterId}}"
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 30 Mar 2021 19:05:02 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-correlation-id",
									"value": "538a7197-361d-440f-aee9-aee491fa213e"
								},
								{
									"key": "X-CDN",
									"value": "Imperva"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "X-Iinfo",
									"value": "14-520146067-520146093 SNYN RT(1617131077249 23869) q(0 0 0 -1) r(3 3) U12"
								}
							],
							"cookie": [],
							"body": "{\n    \"rules\": [\n        {\n            \"id\": \"accountHolderName\",\n            \"regEx\": \"^.{3,100}$\",\n            \"isRequired\": \"true\",\n            \"label\": \"\",\n            \"errorMessage\": \"Name is invalid. Value should be 3 to 100 characters long.\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^.{3,100}$\",\n                    \"errorMessage\": \"Name is invalid. Value should be 3 to 100 characters long.\"\n                },\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"templateIdentifier\",\n            \"regEx\": \"^.{1,50}$\",\n            \"isRequired\": \"true\",\n            \"label\": \"\",\n            \"errorMessage\": \"Beneficiary Identifier should not be greater than 50 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^.{1,50}$\",\n                    \"errorMessage\": \"Beneficiary Identifier should not be greater than 50 characters\"\n                },\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"destinationCountry\",\n            \"regEx\": [],\n            \"isRequired\": \"true\",\n            \"label\": \"\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"FR\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"bankCurrency\",\n            \"regEx\": [],\n            \"isRequired\": \"true\",\n            \"label\": \"\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"EUR\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"classification\",\n            \"regEx\": [],\n            \"isRequired\": \"true\",\n            \"label\": \"\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"individual\",\n            \"valueSet\": [\n                {\n                    \"id\": \"Individual\",\n                    \"text\": \"Individual\"\n                },\n                {\n                    \"id\": \"Business\",\n                    \"text\": \"Business\"\n                },\n                {\n                    \"id\": \"Aerospace and defense\",\n                    \"text\": \"Aerospace and defense\"\n                },\n                {\n                    \"id\": \"Agriculture and agric-food\",\n                    \"text\": \"Agriculture and agric-food\"\n                },\n                {\n                    \"id\": \"Apparel / Clothing\",\n                    \"text\": \"Apparel / Clothing\"\n                },\n                {\n                    \"id\": \"Automotive / Trucking\",\n                    \"text\": \"Automotive / Trucking\"\n                },\n                {\n                    \"id\": \"Books / Magazines\",\n                    \"text\": \"Books / Magazines\"\n                },\n                {\n                    \"id\": \"Broadcasting\",\n                    \"text\": \"Broadcasting\"\n                },\n                {\n                    \"id\": \"Building products\",\n                    \"text\": \"Building products\"\n                },\n                {\n                    \"id\": \"Chemicals\",\n                    \"text\": \"Chemicals\"\n                },\n                {\n                    \"id\": \"Dairy\",\n                    \"text\": \"Dairy\"\n                },\n                {\n                    \"id\": \"E-business\",\n                    \"text\": \"E-business\"\n                },\n                {\n                    \"id\": \"Environment\",\n                    \"text\": \"Environment\"\n                },\n                {\n                    \"id\": \"Explosives\",\n                    \"text\": \"Explosives\"\n                },\n                {\n                    \"id\": \"Fisheries and oceans\",\n                    \"text\": \"Fisheries and oceans\"\n                },\n                {\n                    \"id\": \"Food / Beverage distribution\",\n                    \"text\": \"Food / Beverage distribution\"\n                },\n                {\n                    \"id\": \"Footwear\",\n                    \"text\": \"Footwear\"\n                },\n                {\n                    \"id\": \"Forest industries\",\n                    \"text\": \"Forest industries\"\n                },\n                {\n                    \"id\": \"Furniture\",\n                    \"text\": \"Furniture\"\n                },\n                {\n                    \"id\": \"Giftware and crafts\",\n                    \"text\": \"Giftware and crafts\"\n                },\n                {\n                    \"id\": \"Horticulture\",\n                    \"text\": \"Horticulture\"\n                },\n                {\n                    \"id\": \"Hydroelectric energy\",\n                    \"text\": \"Hydroelectric energy\"\n                },\n                {\n                    \"id\": \"Information and communication technologies\",\n                    \"text\": \"Information and communication technologies\"\n                },\n                {\n                    \"id\": \"Intelligent systems\",\n                    \"text\": \"Intelligent systems\"\n                },\n                {\n                    \"id\": \"Livestock\",\n                    \"text\": \"Livestock\"\n                },\n                {\n                    \"id\": \"Medical devices\",\n                    \"text\": \"Medical devices\"\n                },\n                {\n                    \"id\": \"Medical treatment\",\n                    \"text\": \"Medical treatment\"\n                },\n                {\n                    \"id\": \"Minerals, metals and mining\",\n                    \"text\": \"Minerals, metals and mining\"\n                },\n                {\n                    \"id\": \"Oil and gas\",\n                    \"text\": \"Oil and gas\"\n                },\n                {\n                    \"id\": \"Pharmaceuticals and biopharmaceuticals\",\n                    \"text\": \"Pharmaceuticals and biopharmaceuticals\"\n                },\n                {\n                    \"id\": \"Plastics\",\n                    \"text\": \"Plastics\"\n                },\n                {\n                    \"id\": \"Poultry and eggs\",\n                    \"text\": \"Poultry and eggs\"\n                },\n                {\n                    \"id\": \"Printing /Publishing\",\n                    \"text\": \"Printing /Publishing\"\n                },\n                {\n                    \"id\": \"Product design and development\",\n                    \"text\": \"Product design and development\"\n                },\n                {\n                    \"id\": \"Railway\",\n                    \"text\": \"Railway\"\n                },\n                {\n                    \"id\": \"Retail\",\n                    \"text\": \"Retail\"\n                },\n                {\n                    \"id\": \"Shipping and industrial marine\",\n                    \"text\": \"Shipping and industrial marine\"\n                },\n                {\n                    \"id\": \"Soil\",\n                    \"text\": \"Soil\"\n                },\n                {\n                    \"id\": \"Sound recording\",\n                    \"text\": \"Sound recording\"\n                },\n                {\n                    \"id\": \"Sporting goods\",\n                    \"text\": \"Sporting goods\"\n                },\n                {\n                    \"id\": \"Telecommunications equipment\",\n                    \"text\": \"Telecommunications equipment\"\n                },\n                {\n                    \"id\": \"Television\",\n                    \"text\": \"Television\"\n                },\n                {\n                    \"id\": \"Textiles\",\n                    \"text\": \"Textiles\"\n                },\n                {\n                    \"id\": \"Tourism\",\n                    \"text\": \"Tourism\"\n                },\n                {\n                    \"id\": \"Water supply\",\n                    \"text\": \"Water supply\"\n                },\n                {\n                    \"id\": \"Wholesale\",\n                    \"text\": \"Wholesale\"\n                }\n            ],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"settlementMethods\",\n            \"regEx\": [],\n            \"isRequired\": \"false\",\n            \"label\": \"\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [\n                {\n                    \"id\": \"W\",\n                    \"text\": \"Wire\"\n                },\n                {\n                    \"id\": \"E\",\n                    \"text\": \"iACH\"\n                },\n                {\n                    \"id\": \"D\",\n                    \"text\": \"Draft\"\n                }\n            ],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"paymentMethods\",\n            \"regEx\": [],\n            \"isRequired\": \"true\",\n            \"label\": \"\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"W\",\n            \"valueSet\": [\n                {\n                    \"id\": \"W\",\n                    \"text\": \"Wire\"\n                },\n                {\n                    \"id\": \"E\",\n                    \"text\": \"iACH\"\n                },\n                {\n                    \"id\": \"D\",\n                    \"text\": \"Draft\"\n                }\n            ],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"preferredMethod\",\n            \"regEx\": [],\n            \"isRequired\": \"true\",\n            \"label\": \"\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"W\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"accountHolderCountry\",\n            \"regEx\": \"^.{2,2}$\",\n            \"isRequired\": \"true\",\n            \"label\": \"\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"FR\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^.{2,2}$\"\n                },\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"accountHolderRegion\",\n            \"regEx\": \"^.{0,100}$\",\n            \"isRequired\": \"false\",\n            \"label\": \"\",\n            \"errorMessage\": \"State/Province must be less than 100 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^.{0,100}$\",\n                    \"errorMessage\": \"State/Province must be less than 100 characters\"\n                },\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"accountHolderAddress1\",\n            \"regEx\": \"^.{0,1000}$\",\n            \"isRequired\": \"true\",\n            \"label\": \"\",\n            \"errorMessage\": \"Address Line 1 must be less than 1000 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^.{0,1000}$\",\n                    \"errorMessage\": \"Address Line 1 must be less than 1000 characters\"\n                },\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"accountHolderAddress2\",\n            \"regEx\": \"^.{0,100}$\",\n            \"isRequired\": \"false\",\n            \"label\": \"\",\n            \"errorMessage\": \"Address Line 2 must be less than 100 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^.{0,100}$\",\n                    \"errorMessage\": \"Address Line 2 must be less than 100 characters\"\n                },\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"accountHolderCity\",\n            \"regEx\": \"^.{0,100}$\",\n            \"isRequired\": \"true\",\n            \"label\": \"\",\n            \"errorMessage\": \"City must be less than 100 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^.{0,100}$\",\n                    \"errorMessage\": \"City must be less than 100 characters\"\n                },\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"accountHolderPostal\",\n            \"regEx\": \"^.{0,30}$\",\n            \"isRequired\": \"false\",\n            \"label\": \"\",\n            \"errorMessage\": \"Postal Code must be less than 30 characters long\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^.{0,30}$\",\n                    \"errorMessage\": \"Postal Code must be less than 30 characters long\"\n                },\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"accountHolderPhoneNumber\",\n            \"regEx\": \"^.{0,100}$\",\n            \"isRequired\": \"false\",\n            \"label\": \"Beneficiary Phone Number\",\n            \"errorMessage\": \"Beneficiary Phone Number is too long. Maximum 100 characters allowed.\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^.{0,100}$\",\n                    \"errorMessage\": \"Beneficiary Phone Number is too long. Maximum 100 characters allowed.\",\n                    \"ruleDescription\": \"Maximum 100 characters\"\n                },\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"accountHolderEmail\",\n            \"regEx\": \"^.{0,250}$\",\n            \"isRequired\": \"false\",\n            \"label\": \"\",\n            \"errorMessage\": \"Email Address must be less than 250 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^.{0,250}$\",\n                    \"errorMessage\": \"Email Address must be less than 250 characters\"\n                },\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"sendPayTracker\",\n            \"regEx\": [],\n            \"isRequired\": \"false\",\n            \"label\": \"\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"ibanDigits\",\n            \"regEx\": [],\n            \"isRequired\": \"false\",\n            \"label\": \"\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"27\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"ibanEnabled\",\n            \"regEx\": [],\n            \"isRequired\": \"false\",\n            \"label\": \"\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"true\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"swiftBicCode\",\n            \"regEx\": \"^.{0,12}$\",\n            \"isRequired\": \"false\",\n            \"label\": \"\",\n            \"errorMessage\": \"Swift must be less than 12 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^.{0,12}$\",\n                    \"errorMessage\": \"Swift must be less than 12 characters\"\n                },\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"bankName\",\n            \"regEx\": \"^.{0,250}$\",\n            \"isRequired\": \"true\",\n            \"label\": \"\",\n            \"errorMessage\": \"Beneficiary Bank Name must be less than 250 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^.{0,250}$\",\n                    \"errorMessage\": \"Beneficiary Bank Name must be less than 250 characters\"\n                },\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"bankCountry\",\n            \"regEx\": \"^.{2,2}$\",\n            \"isRequired\": \"true\",\n            \"label\": \"\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"FR\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^.{2,2}$\"\n                },\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"bankRegion\",\n            \"regEx\": \"^.{0,100}$\",\n            \"isRequired\": \"false\",\n            \"label\": \"\",\n            \"errorMessage\": \"State/Province must be less than 100 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^.{0,100}$\",\n                    \"errorMessage\": \"State/Province must be less than 100 characters\"\n                },\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"bankCity\",\n            \"regEx\": \"^.{0,100}$\",\n            \"isRequired\": \"true\",\n            \"label\": \"\",\n            \"errorMessage\": \"City must be less than 100 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^.{0,100}$\",\n                    \"errorMessage\": \"City must be less than 100 characters\"\n                },\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"bankAddressLine1\",\n            \"regEx\": \"^.{0,1000}$\",\n            \"isRequired\": \"true\",\n            \"label\": \"\",\n            \"errorMessage\": \"Bank Address Line 1 must be less than 1000 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^.{0,1000}$\",\n                    \"errorMessage\": \"Bank Address Line 1 must be less than 1000 characters\"\n                },\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"bankAddressLine2\",\n            \"regEx\": \"^.{0,100}$\",\n            \"isRequired\": \"false\",\n            \"label\": \"\",\n            \"errorMessage\": \"Bank Address Line 2 must be less than 100 characters\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^.{0,100}$\",\n                    \"errorMessage\": \"Bank Address Line 2 must be less than 100 characters\"\n                },\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"bankPostal\",\n            \"regEx\": \"^.{0,30}$\",\n            \"isRequired\": \"false\",\n            \"label\": \"\",\n            \"errorMessage\": \"Postal Code must be less than 30 characters long\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^.{0,30}$\",\n                    \"errorMessage\": \"Postal Code must be less than 30 characters long\"\n                },\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"paymentReference\",\n            \"regEx\": [],\n            \"isRequired\": \"false\",\n            \"label\": \"\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"internalPaymentAlert\",\n            \"regEx\": [],\n            \"isRequired\": \"false\",\n            \"label\": \"\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"externalPaymentAlert\",\n            \"regEx\": [],\n            \"isRequired\": \"false\",\n            \"label\": \"\",\n            \"errorMessage\": \"\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [],\n            \"detailedRule\": [],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"accountNumber\",\n            \"regEx\": \"^(FR)[A-Z0-9]{25}$\",\n            \"isRequired\": \"true\",\n            \"label\": \"IBAN Number\",\n            \"errorMessage\": \"IBAN Number is invalid. Value must start with\\\"FR\\\" followed by exactly 25 characters.\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [],\n            \"detailedRule\": [\n                {\n                    \"isRequired\": true,\n                    \"value\": [\n                        {\n                            \"regEx\": \"^(FR)[A-Z0-9]{25}$\",\n                            \"errorMessage\": \"IBAN Number is invalid. Value must start with\\\"FR\\\" followed by exactly 25 characters.\",\n                            \"ruleDescription\": \"Start with\\\"FR\\\" followed by exactly 25 characters\"\n                        }\n                    ]\n                }\n            ],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^(FR)[A-Z0-9]{25}$\",\n                    \"errorMessage\": \"IBAN Number is invalid. Value must start with\\\"FR\\\" followed by exactly 25 characters.\",\n                    \"ruleDescription\": \"Start with\\\"FR\\\" followed by exactly 25 characters\"\n                },\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        },\n        {\n            \"id\": \"routingCode\",\n            \"regEx\": \"^.{0,100}$\",\n            \"isRequired\": \"false\",\n            \"label\": \"Routing Code\",\n            \"errorMessage\": \"Routing Code is too long. Maximum 100 characters allowed.\",\n            \"defaultValue\": \"\",\n            \"valueSet\": [],\n            \"detailedRule\": [\n                {\n                    \"isRequired\": false,\n                    \"value\": [\n                        {\n                            \"regEx\": \"^.{0,100}$\",\n                            \"errorMessage\": \"Routing Code is too long. Maximum 100 characters allowed.\",\n                            \"ruleDescription\": \"Maximum 100 characters\"\n                        }\n                    ]\n                }\n            ],\n            \"validationRules\": [\n                {\n                    \"regEx\": \"^.{0,100}$\",\n                    \"errorMessage\": \"Routing Code is too long. Maximum 100 characters allowed.\",\n                    \"ruleDescription\": \"Maximum 100 characters\"\n                },\n                {\n                    \"regEx\": \"^[^<>\\\\x22]*$\",\n                    \"errorMessage\": \"The following characters are not allowed: <,>, \\\"\"\n                }\n            ]\n        }\n    ],\n    \"regulatoryRules\": [],\n    \"provide\": []\n}"
						}
					]
				},
				{
					"name": "Search Banks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>",
								"description": "(Required) "
							}
						],
						"url": {
							"raw": "/partner/:partnerId/:clientCode/guides/banks?query=<string>&country={country ISO2}",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"guides",
								"banks"
							],
							"query": [
								{
									"key": "query",
									"value": "<string>"
								},
								{
									"key": "country",
									"value": "{country ISO2}"
								}
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>"
								},
								{
									"key": "clientCode",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "This call searches a database of global banks and returns results that meet your search criteria. \r\nThe query parameters can be any relevant information, such as name, city, routing code, etc. \r\n\r\nThere are two optional parameters that you can include in the query string: 'take' specifies how many results you want returned, and 'skip' specifies how many search results you want to skip. For very broad search results, we recommend that you use 'take' and 'skip' to minimize page load times."
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "client_id",
										"value": "252497",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "111111",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/guide/banks?query=RU,moscow",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"guide",
										"banks"
									],
									"query": [
										{
											"key": "query",
											"value": "RU,moscow"
										}
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}"
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 16:12:54 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "10408"
								},
								{
									"key": "Content-Length",
									"value": "566"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"rows\": [\n        {\n            \"primaryKey\": \"000000000700720\",\n            \"institutionName\": \"JOINT-STOCK COMMERCIAL BANK (BANK OF CHINA (RUSSIA))\",\n            \"address1\": \"72, PROSPEKT, MOSCOW 129110, RUSSIA\",\n            \"address2\": \"\",\n            \"city\": \"\",\n            \"region\": \"\",\n            \"country\": \"RUSSIAN FEDERATION\",\n            \"countryISO\": \"RU\",\n            \"postalCode\": \"\",\n            \"swiftBIC\": \"BKCHRUMMXXX\",\n            \"nationalBankCode\": \"283002\",\n            \"nationalBankCodeType\": \"HKBC\",\n            \"officeType\": \"Branch\",\n            \"branchName\": \"MOSCOW BRANCH\",\n            \"phone\": \"\",\n            \"fax\": \"\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "View Cities",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>",
								"description": "(Required) "
							}
						],
						"url": {
							"raw": "/partner/:partnerId/:clientCode/guides/:countryISO/:regionName/cities",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"guides",
								":countryISO",
								":regionName",
								"cities"
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "{partnerId}"
								},
								{
									"key": "clientCode",
									"value": "{clientcode}",
									"description": "(Required) "
								},
								{
									"key": "countryISO",
									"value": "{countryISO}"
								},
								{
									"key": "regionName",
									"value": "{regionName}"
								}
							]
						},
						"description": "This endpoint brings a list of all cities based the \r\n{countryISO2} provided."
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/guides/:countryISO/:regionName/cities",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"guides",
										":countryISO",
										":regionName",
										"cities"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{partnerId}"
										},
										{
											"key": "clientCode",
											"value": "{clientcode}",
											"description": "(Required) "
										},
										{
											"key": "countryISO",
											"value": "{countryISO}"
										},
										{
											"key": "regionName",
											"value": "{regionName}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 17 Mar 2021 14:15:40 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-correlation-id",
									"value": "751f1170-30cf-445c-819b-e0e83d9aff38"
								},
								{
									"key": "Set-Cookie",
									"value": "nlbi_2367180=LEJ4J9hz0XBSinB8MImlLwAAAABB8ZMRd9ciUnz8A9TCwuS0; path=/; Domain=.ca-ce1-01.api.fleetcor.com"
								},
								{
									"key": "Set-Cookie",
									"value": "incap_ses_1226_2367180=n2mwckfv6Fhp0/JVyaADEQwPUmAAAAAA0BTcknZpI3wx2ot8/lep3g==; path=/; Domain=.ca-ce1-01.api.fleetcor.com"
								},
								{
									"key": "X-CDN",
									"value": "Imperva"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "X-Iinfo",
									"value": "13-164879951-164879965 NNYN CT(31 62 0) RT(1615990538489 59) q(0 0 1 0) r(16 16) U12"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"city\": \"ABBEVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ACWORTH\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ADAIRSVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ADEL\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ALAMO\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ALAPAHA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ALBANY\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ALLENTOWN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ALMA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ALPHARETTA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"AMERICUS\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ARLINGTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ASHBURN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ATHENS\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ATLANTA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ATTAPULGUS\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"AUBURN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"AUGUSTA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"AUSTELL\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BAINBRIDGE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BALL GROUND\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BARNESVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BARWICK\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BAXLEY\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BELLVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BERKELEY LAKE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BLACKSHEAR\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BLAIRSVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BLAKELY\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BLUE RIDGE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BOGART\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BONAIRE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BOSTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BOWDON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BOWMAN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BRASELTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BREMEN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BROOKLET\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BROXTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BRUNSWICK\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BUCHANAN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BUENA VISTA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BUFORD\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BUTLER\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"BYRON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CADWELL\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CAIRO\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CALHOUN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CAMILLA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CANTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CARNESVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CARROLLTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CARTERSVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CAVE SPRING\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CEDAR SPRINGS\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CEDARTOWN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CENTERVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CHAMBLEE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CHATSWORTH\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CHESTER\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CHICKAMAUGA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CLARKESVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CLARKSTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CLAXTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CLAYTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CLERMONT\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CLEVELAND\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"COCHRAN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"COLBERT\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"COLLEGE PARK\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"COLQUITT\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"COLUMBUS\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"COMER\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"COMMERCE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CONCORD\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CONYERS\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CORDELE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CORNELIA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"COVINGTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CRAWFORD\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CRAWFORDVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CUMMING\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"CUTHBERT\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"DACULA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"DAHLONEGA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"DALLAS\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"DALTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"DANIELSVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"DARIEN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"DAWSON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"DAWSONVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"DECATUR\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"DEXTER\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"DILLARD\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"DOERUN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"DONALSONVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"DORAVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"DOUGLAS\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"DOUGLASVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"DUBLIN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"DUDLEY\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"DULUTH\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"DUNWOODY\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"EAST DUBLIN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"EAST ELLIJAY\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"EAST POINT\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"EASTMAN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"EATONTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"EDISON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ELBERTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ELLAVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ELLENWOOD\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ELLIJAY\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ENIGMA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ETON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"EULONIA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"EVANS\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"FAIRBURN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"FAYETTEVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"FITZGERALD\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"FLINTSTONE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"FLOWERY BRANCH\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"FOLKSTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"FOREST PARK\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"FORSYTH\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"FORT BENNING\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"FORT GAINES\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"FORT GORDON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"FORT OGLETHORPE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"FORT STEWART\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"FORT VALLEY\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"FRANKLIN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"FRANKLIN SPRINGS\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"GAINESVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"GARDEN CITY\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"GEORGETOWN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"GIBSON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"GLENNVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"GLYNCO\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"GORDON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"GRACEWOOD\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"GRAY\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"GRAYSON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"GREENSBORO\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"GREENVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"GRIFFIN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"GROVETOWN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"HAHIRA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"HAMILTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"HAMPTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"HAPEVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"HARLEM\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"HARTWELL\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"HAWKINSVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"HAZLEHURST\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"HELEN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"HEPHZIBAH\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"HIAWASSEE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"HINESVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"HIRAM\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"HOGANSVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"HOMER\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"HOMERVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"HOSCHTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"HULL\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"IRWINTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"JACKSON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"JASPER\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"JEFFERSON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"JEFFERSONVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"JEKYLL ISLAND\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"JESUP\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"JOHNS CREEK\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"JONESBORO\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"KATHLEEN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"KENNESAW\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"KINGSLAND\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LA FAYETTE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LA GRANGE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LAGRANGE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LAKE PARK\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LAKELAND\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LAVONIA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LAWRENCEVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LEESBURG\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LENOX\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LEXINGTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LILBURN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LINCOLNTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LITHIA SPRINGS\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LITHONIA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LOCUST GROVE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LOGANVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LOOKOUT MOUNTAIN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LOUISVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LOVEJOY\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LUDOWICI\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LUMBER CITY\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LUMPKIN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LUTHERSVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"LYONS\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MABLETON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MACON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MADISON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MANCHESTER\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MARBLE HILL\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MARIETTA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MARTINEZ\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MCCAYSVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MCDONOUGH\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MCRAE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"METTER\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MIDVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MIDWAY\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MILAN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MILLEDGEVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MILLEN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MILTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MOLENA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MONROE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MONTEZUMA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MONTICELLO\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MOODY AIR FORCE BASE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MORROW\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MORVEN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"MOULTRIE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"NAHUNTA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"NASHVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"NEWINGTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"NEWNAN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"NEWTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"NORCROSS\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"OAKWOOD\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"OCILLA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"OGLETHORPE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"OMEGA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"PALMETTO\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"PATTERSON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"PEACHTREE CITY\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"PEARSON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"PELHAM\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"PEMBROKE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"PERRY\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"PINE MOUNTAIN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"PINEVIEW\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"POOLER\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"PORT WENTWORTH\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"POWDER SPRINGS\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"PRESTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"QUITMAN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"RAY CITY\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"REIDSVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"REYNOLDS\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"RHINE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"RICHLAND\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"RICHMOND HILL\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"RINCON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"RINGGOLD\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"RIVERDALE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ROBERTA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ROBINS AIR FORCE BASE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ROCHELLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ROCK SPRING\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ROCKMART\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ROME\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ROSSVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ROSWELL\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ROYSTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"SAINT MARYS\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"SAINT SIMONS ISLAND\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"SANDERSVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"SANDY SPRINGS\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"SARDIS\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"SAVANNAH\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"SCREVEN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"SENOIA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"SHARPSBURG\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"SHELLMAN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"SMYRNA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"SNELLVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"SOCIAL CIRCLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"SOPERTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"SPARTA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"SPRINGFIELD\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"STATESBORO\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"STATHAM\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"STOCKBRIDGE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"STONE MOUNTAIN\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"SUGAR HILL\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"SUMMERVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"SUWANEE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"SWAINSBORO\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"SYLVANIA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"SYLVESTER\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"TALBOTTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"TALLAPOOSA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"TAYLORSVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"TEMPLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"THOMASTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"THOMASVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"THOMSON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"TIFTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"TIGNALL\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"TOCCOA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"TRENTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"TRION\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"TUCKER\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"TWIN CITY\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"TYRONE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"UNADILLA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"UNION CITY\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"UNION POINT\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"UVALDA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"VALDOSTA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"VIDALIA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"VIENNA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"VILLA RICA\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"WADLEY\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"WARNER ROBINS\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"WARRENTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"WASHINGTON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"WATKINSVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"WAYCROSS\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"WAYNESBORO\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"WEST POINT\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"WHIGHAM\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"WILLACOOCHEE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"WILLIAMSON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"WINDER\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"WINTERVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"WOODBINE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"WOODBURY\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"WOODLAND\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"WOODSTOCK\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"WRENS\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"WRIGHTSVILLE\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"YOUNG HARRIS\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    },\n    {\n        \"city\": \"ZEBULON\",\n        \"region\": \"GEORGIA\",\n        \"countryIsoCode\": \"US\"\n    }\n]"
						}
					]
				},
				{
					"name": "View Countries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>",
								"description": "(Required) "
							}
						],
						"url": {
							"raw": "/partner/:partnerId/:clientCode/guides/countries",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"guides",
								"countries"
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>"
								},
								{
									"key": "clientCode",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "List of all Countries"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/guide/countries",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"guide",
										"countries"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}"
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 16:18:36 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "9149"
								},
								{
									"key": "Content-Length",
									"value": "21340"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"countryName\": \"Afghanistan\",\n        \"country\": \"AF\",\n        \"defaultCurrency\": \"AFN\"\n    },\n    {\n        \"countryName\": \"Albania\",\n        \"country\": \"AL\",\n        \"defaultCurrency\": \"ALL\"\n    },\n    {\n        \"countryName\": \"Algeria\",\n        \"country\": \"DZ\",\n        \"defaultCurrency\": \"DZD\"\n    },\n    {\n        \"countryName\": \"AMERICAN SAMOA\",\n        \"country\": \"AS\",\n        \"defaultCurrency\": \"USD\"\n    },\n    {\n        \"countryName\": \"Andorra\",\n        \"country\": \"AD\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"Angola\",\n        \"country\": \"AO\",\n        \"defaultCurrency\": \"AOA\"\n    },\n    {\n        \"countryName\": \"Anguilla\",\n        \"country\": \"AI\",\n        \"defaultCurrency\": \"XCD\"\n    },\n    {\n        \"countryName\": \"Antigua and Barbuda\",\n        \"country\": \"AG\",\n        \"defaultCurrency\": \"XCD\"\n    },\n    {\n        \"countryName\": \"Argentina\",\n        \"country\": \"AR\",\n        \"defaultCurrency\": \"ARS\"\n    },\n    {\n        \"countryName\": \"Armenia\",\n        \"country\": \"AM\",\n        \"defaultCurrency\": \"AMD\"\n    },\n    {\n        \"countryName\": \"Aruba\",\n        \"country\": \"AW\",\n        \"defaultCurrency\": \"AWG\"\n    },\n    {\n        \"countryName\": \"Australia\",\n        \"country\": \"AU\",\n        \"defaultCurrency\": \"AUD\"\n    },\n    {\n        \"countryName\": \"Austria\",\n        \"country\": \"AT\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"Azerbaijan\",\n        \"country\": \"AZ\",\n        \"defaultCurrency\": \"AZN\"\n    },\n    {\n        \"countryName\": \"Bahamas\",\n        \"country\": \"BS\",\n        \"defaultCurrency\": \"BSD\"\n    },\n    {\n        \"countryName\": \"Bahrain\",\n        \"country\": \"BH\",\n        \"defaultCurrency\": \"BHD\"\n    },\n    {\n        \"countryName\": \"Bangladesh\",\n        \"country\": \"BD\",\n        \"defaultCurrency\": \"BDT\"\n    },\n    {\n        \"countryName\": \"Barbados\",\n        \"country\": \"BB\",\n        \"defaultCurrency\": \"BBD\"\n    },\n    {\n        \"countryName\": \"Belarus\",\n        \"country\": \"BY\",\n        \"defaultCurrency\": \"BYR\"\n    },\n    {\n        \"countryName\": \"Belgium\",\n        \"country\": \"BE\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"Belize\",\n        \"country\": \"BZ\",\n        \"defaultCurrency\": \"BZD\"\n    },\n    {\n        \"countryName\": \"Benin\",\n        \"country\": \"BJ\",\n        \"defaultCurrency\": \"XOF\"\n    },\n    {\n        \"countryName\": \"Bermuda\",\n        \"country\": \"BM\",\n        \"defaultCurrency\": \"BMD\"\n    },\n    {\n        \"countryName\": \"Bhutan\",\n        \"country\": \"BT\",\n        \"defaultCurrency\": \"BTN\"\n    },\n    {\n        \"countryName\": \"Bolivia\",\n        \"country\": \"BO\",\n        \"defaultCurrency\": \"BOB\"\n    },\n    {\n        \"countryName\": \"Bonaire, St. Eustatius and Saba\",\n        \"country\": \"BQ\",\n        \"defaultCurrency\": \"USD\"\n    },\n    {\n        \"countryName\": \"Bosnia and Herzegovina\",\n        \"country\": \"BA\",\n        \"defaultCurrency\": \"BAM\"\n    },\n    {\n        \"countryName\": \"Botswana\",\n        \"country\": \"BW\",\n        \"defaultCurrency\": \"BWP\"\n    },\n    {\n        \"countryName\": \"Brazil\",\n        \"country\": \"BR\",\n        \"defaultCurrency\": \"BRL\"\n    },\n    {\n        \"countryName\": \"British Virgin Islands\",\n        \"country\": \"VG\",\n        \"defaultCurrency\": \"USD\"\n    },\n    {\n        \"countryName\": \"Brunei\",\n        \"country\": \"BN\",\n        \"defaultCurrency\": \"BND\"\n    },\n    {\n        \"countryName\": \"Bulgaria\",\n        \"country\": \"BG\",\n        \"defaultCurrency\": \"BGN\"\n    },\n    {\n        \"countryName\": \"Burkina Faso\",\n        \"country\": \"BF\",\n        \"defaultCurrency\": \"XOF\"\n    },\n    {\n        \"countryName\": \"Burundi\",\n        \"country\": \"BI\",\n        \"defaultCurrency\": \"BIF\"\n    },\n    {\n        \"countryName\": \"Cambodia\",\n        \"country\": \"KH\",\n        \"defaultCurrency\": \"KHR\"\n    },\n    {\n        \"countryName\": \"Cameroon\",\n        \"country\": \"CM\",\n        \"defaultCurrency\": \"XAF\"\n    },\n    {\n        \"countryName\": \"Canada\",\n        \"country\": \"CA\",\n        \"defaultCurrency\": \"CAD\"\n    },\n    {\n        \"countryName\": \"Cape Verde\",\n        \"country\": \"CV\",\n        \"defaultCurrency\": \"CVE\"\n    },\n    {\n        \"countryName\": \"Cayman Islands\",\n        \"country\": \"KY\",\n        \"defaultCurrency\": \"KYD\"\n    },\n    {\n        \"countryName\": \"Central African Republic\",\n        \"country\": \"CF\",\n        \"defaultCurrency\": \"XAF\"\n    },\n    {\n        \"countryName\": \"Chad\",\n        \"country\": \"TD\",\n        \"defaultCurrency\": \"XAF\"\n    },\n    {\n        \"countryName\": \"Chile\",\n        \"country\": \"CL\",\n        \"defaultCurrency\": \"CLP\"\n    },\n    {\n        \"countryName\": \"China\",\n        \"country\": \"CN\",\n        \"defaultCurrency\": \"CNY\"\n    },\n    {\n        \"countryName\": \"Colombia\",\n        \"country\": \"CO\",\n        \"defaultCurrency\": \"COP\"\n    },\n    {\n        \"countryName\": \"Comoros\",\n        \"country\": \"KM\",\n        \"defaultCurrency\": \"KMF\"\n    },\n    {\n        \"countryName\": \"Cook Islands\",\n        \"country\": \"CK\",\n        \"defaultCurrency\": \"NZD\"\n    },\n    {\n        \"countryName\": \"Costa Rica\",\n        \"country\": \"CR\",\n        \"defaultCurrency\": \"CRC\"\n    },\n    {\n        \"countryName\": \"Cote d Ivoire\",\n        \"country\": \"CI\",\n        \"defaultCurrency\": \"XOF\"\n    },\n    {\n        \"countryName\": \"Croatia\",\n        \"country\": \"HR\",\n        \"defaultCurrency\": \"HRK\"\n    },\n    {\n        \"countryName\": \"Curacao\",\n        \"country\": \"CW\",\n        \"defaultCurrency\": \"ANG\"\n    },\n    {\n        \"countryName\": \"Cyprus\",\n        \"country\": \"CY\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"Czech Republic\",\n        \"country\": \"CZ\",\n        \"defaultCurrency\": \"CZK\"\n    },\n    {\n        \"countryName\": \"Democratic Republic of the Congo\",\n        \"country\": \"CD\",\n        \"defaultCurrency\": \"CDF\"\n    },\n    {\n        \"countryName\": \"Denmark\",\n        \"country\": \"DK\",\n        \"defaultCurrency\": \"DKK\"\n    },\n    {\n        \"countryName\": \"Djibouti\",\n        \"country\": \"DJ\",\n        \"defaultCurrency\": \"DJF\"\n    },\n    {\n        \"countryName\": \"Dominica\",\n        \"country\": \"DM\",\n        \"defaultCurrency\": \"XCD\"\n    },\n    {\n        \"countryName\": \"Dominican Republic\",\n        \"country\": \"DO\",\n        \"defaultCurrency\": \"DOP\"\n    },\n    {\n        \"countryName\": \"Ecuador\",\n        \"country\": \"EC\",\n        \"defaultCurrency\": \"USD\"\n    },\n    {\n        \"countryName\": \"Egypt\",\n        \"country\": \"EG\",\n        \"defaultCurrency\": \"EGP\"\n    },\n    {\n        \"countryName\": \"El Salvador\",\n        \"country\": \"SV\",\n        \"defaultCurrency\": \"SVC\"\n    },\n    {\n        \"countryName\": \"Equatorial Guinea\",\n        \"country\": \"GQ\",\n        \"defaultCurrency\": \"XAF\"\n    },\n    {\n        \"countryName\": \"Eritrea\",\n        \"country\": \"ER\",\n        \"defaultCurrency\": \"ERN\"\n    },\n    {\n        \"countryName\": \"Estonia\",\n        \"country\": \"EE\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"Ethiopia\",\n        \"country\": \"ET\",\n        \"defaultCurrency\": \"ETB\"\n    },\n    {\n        \"countryName\": \"F.Y.R. Macedonia\",\n        \"country\": \"MK\",\n        \"defaultCurrency\": \"MKD\"\n    },\n    {\n        \"countryName\": \"Falkland Islands (Malvinas)\",\n        \"country\": \"FK\",\n        \"defaultCurrency\": \"FKP\"\n    },\n    {\n        \"countryName\": \"Faroe Islands\",\n        \"country\": \"FO\",\n        \"defaultCurrency\": \"DKK\"\n    },\n    {\n        \"countryName\": \"Fiji\",\n        \"country\": \"FJ\",\n        \"defaultCurrency\": \"FJD\"\n    },\n    {\n        \"countryName\": \"Finland\",\n        \"country\": \"FI\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"France\",\n        \"country\": \"FR\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"French Guiana\",\n        \"country\": \"GF\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"French Polynesia\",\n        \"country\": \"PF\",\n        \"defaultCurrency\": \"XPF\"\n    },\n    {\n        \"countryName\": \"Gabon\",\n        \"country\": \"GA\",\n        \"defaultCurrency\": \"XAF\"\n    },\n    {\n        \"countryName\": \"Georgia\",\n        \"country\": \"GE\",\n        \"defaultCurrency\": \"GEL\"\n    },\n    {\n        \"countryName\": \"Germany\",\n        \"country\": \"DE\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"Ghana\",\n        \"country\": \"GH\",\n        \"defaultCurrency\": \"GHS\"\n    },\n    {\n        \"countryName\": \"Gibraltar\",\n        \"country\": \"GI\",\n        \"defaultCurrency\": \"GIP\"\n    },\n    {\n        \"countryName\": \"Greece\",\n        \"country\": \"GR\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"Greenland\",\n        \"country\": \"GL\",\n        \"defaultCurrency\": \"DKK\"\n    },\n    {\n        \"countryName\": \"Grenada\",\n        \"country\": \"GD\",\n        \"defaultCurrency\": \"XCD\"\n    },\n    {\n        \"countryName\": \"Guadeloupe\",\n        \"country\": \"GP\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"GUAM\",\n        \"country\": \"GU\",\n        \"defaultCurrency\": \"USD\"\n    },\n    {\n        \"countryName\": \"Guatemala\",\n        \"country\": \"GT\",\n        \"defaultCurrency\": \"GTQ\"\n    },\n    {\n        \"countryName\": \"Guernsey, Channel Islands\",\n        \"country\": \"GG\",\n        \"defaultCurrency\": \"GGP\"\n    },\n    {\n        \"countryName\": \"Guinea\",\n        \"country\": \"GN\",\n        \"defaultCurrency\": \"GNF\"\n    },\n    {\n        \"countryName\": \"Guinea Bissau\",\n        \"country\": \"GW\",\n        \"defaultCurrency\": \"XOF\"\n    },\n    {\n        \"countryName\": \"Guyana\",\n        \"country\": \"GY\",\n        \"defaultCurrency\": \"GYD\"\n    },\n    {\n        \"countryName\": \"Haiti\",\n        \"country\": \"HT\",\n        \"defaultCurrency\": \"HTG\"\n    },\n    {\n        \"countryName\": \"Holy See\",\n        \"country\": \"VA\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"Honduras\",\n        \"country\": \"HN\",\n        \"defaultCurrency\": \"HNL\"\n    },\n    {\n        \"countryName\": \"Hong Kong\",\n        \"country\": \"HK\",\n        \"defaultCurrency\": \"HKD\"\n    },\n    {\n        \"countryName\": \"Hungary\",\n        \"country\": \"HU\",\n        \"defaultCurrency\": \"HUF\"\n    },\n    {\n        \"countryName\": \"Iceland\",\n        \"country\": \"IS\",\n        \"defaultCurrency\": \"ISK\"\n    },\n    {\n        \"countryName\": \"India\",\n        \"country\": \"IN\",\n        \"defaultCurrency\": \"INR\"\n    },\n    {\n        \"countryName\": \"Indonesia\",\n        \"country\": \"ID\",\n        \"defaultCurrency\": \"IDR\"\n    },\n    {\n        \"countryName\": \"Iraq\",\n        \"country\": \"IQ\",\n        \"defaultCurrency\": \"IQD\"\n    },\n    {\n        \"countryName\": \"Ireland\",\n        \"country\": \"IE\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"Isle of Man\",\n        \"country\": \"IM\",\n        \"defaultCurrency\": \"IMP\"\n    },\n    {\n        \"countryName\": \"Israel\",\n        \"country\": \"IL\",\n        \"defaultCurrency\": \"ILS\"\n    },\n    {\n        \"countryName\": \"Italy\",\n        \"country\": \"IT\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"Jamaica\",\n        \"country\": \"JM\",\n        \"defaultCurrency\": \"JMD\"\n    },\n    {\n        \"countryName\": \"Japan\",\n        \"country\": \"JP\",\n        \"defaultCurrency\": \"JPY\"\n    },\n    {\n        \"countryName\": \"Jersey, Channel Islands\",\n        \"country\": \"JE\",\n        \"defaultCurrency\": \"JEP\"\n    },\n    {\n        \"countryName\": \"Jordan\",\n        \"country\": \"JO\",\n        \"defaultCurrency\": \"JOD\"\n    },\n    {\n        \"countryName\": \"Kazakhstan\",\n        \"country\": \"KZ\",\n        \"defaultCurrency\": \"KZT\"\n    },\n    {\n        \"countryName\": \"Kenya\",\n        \"country\": \"KE\",\n        \"defaultCurrency\": \"KES\"\n    },\n    {\n        \"countryName\": \"Kiribati\",\n        \"country\": \"KI\",\n        \"defaultCurrency\": \"AUD\"\n    },\n    {\n        \"countryName\": \"Kosovo\",\n        \"country\": \"XK\",\n        \"defaultCurrency\": \"\"\n    },\n    {\n        \"countryName\": \"Kuwait\",\n        \"country\": \"KW\",\n        \"defaultCurrency\": \"KWD\"\n    },\n    {\n        \"countryName\": \"Kyrgyzstan\",\n        \"country\": \"KG\",\n        \"defaultCurrency\": \"KGS\"\n    },\n    {\n        \"countryName\": \"Laos\",\n        \"country\": \"LA\",\n        \"defaultCurrency\": \"LAK\"\n    },\n    {\n        \"countryName\": \"Latvia\",\n        \"country\": \"LV\",\n        \"defaultCurrency\": \"LVL\"\n    },\n    {\n        \"countryName\": \"Lebanon\",\n        \"country\": \"LB\",\n        \"defaultCurrency\": \"LBP\"\n    },\n    {\n        \"countryName\": \"Lesotho\",\n        \"country\": \"LS\",\n        \"defaultCurrency\": \"LSL\"\n    },\n    {\n        \"countryName\": \"Liberia\",\n        \"country\": \"LR\",\n        \"defaultCurrency\": \"LRD\"\n    },\n    {\n        \"countryName\": \"Libya\",\n        \"country\": \"LY\",\n        \"defaultCurrency\": \"LYD\"\n    },\n    {\n        \"countryName\": \"Liechtenstein\",\n        \"country\": \"LI\",\n        \"defaultCurrency\": \"CHF\"\n    },\n    {\n        \"countryName\": \"Lithuania\",\n        \"country\": \"LT\",\n        \"defaultCurrency\": \"LTL\"\n    },\n    {\n        \"countryName\": \"Luxembourg\",\n        \"country\": \"LU\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"Macao\",\n        \"country\": \"MO\",\n        \"defaultCurrency\": \"MOP\"\n    },\n    {\n        \"countryName\": \"Madagascar\",\n        \"country\": \"MG\",\n        \"defaultCurrency\": \"MGA\"\n    },\n    {\n        \"countryName\": \"Malawi\",\n        \"country\": \"MW\",\n        \"defaultCurrency\": \"MWK\"\n    },\n    {\n        \"countryName\": \"Malaysia\",\n        \"country\": \"MY\",\n        \"defaultCurrency\": \"MYR\"\n    },\n    {\n        \"countryName\": \"Maldives\",\n        \"country\": \"MV\",\n        \"defaultCurrency\": \"MVR\"\n    },\n    {\n        \"countryName\": \"Mali\",\n        \"country\": \"ML\",\n        \"defaultCurrency\": \"XOF\"\n    },\n    {\n        \"countryName\": \"Malta\",\n        \"country\": \"MT\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"Marshall Islands\",\n        \"country\": \"MH\",\n        \"defaultCurrency\": \"USD\"\n    },\n    {\n        \"countryName\": \"Martinique\",\n        \"country\": \"MQ\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"Mauritania\",\n        \"country\": \"MR\",\n        \"defaultCurrency\": \"MRO\"\n    },\n    {\n        \"countryName\": \"Mauritius\",\n        \"country\": \"MU\",\n        \"defaultCurrency\": \"MUR\"\n    },\n    {\n        \"countryName\": \"Mayotte\",\n        \"country\": \"YT\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"Mexico\",\n        \"country\": \"MX\",\n        \"defaultCurrency\": \"MXN\"\n    },\n    {\n        \"countryName\": \"Micronesia\",\n        \"country\": \"FM\",\n        \"defaultCurrency\": \"USD\"\n    },\n    {\n        \"countryName\": \"Moldova\",\n        \"country\": \"MD\",\n        \"defaultCurrency\": \"MDL\"\n    },\n    {\n        \"countryName\": \"Monaco\",\n        \"country\": \"MC\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"Mongolia\",\n        \"country\": \"MN\",\n        \"defaultCurrency\": \"MNT\"\n    },\n    {\n        \"countryName\": \"Montenegro\",\n        \"country\": \"ME\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"Montserrat\",\n        \"country\": \"MS\",\n        \"defaultCurrency\": \"XCD\"\n    },\n    {\n        \"countryName\": \"Morocco\",\n        \"country\": \"MA\",\n        \"defaultCurrency\": \"MAD\"\n    },\n    {\n        \"countryName\": \"Mozambique\",\n        \"country\": \"MZ\",\n        \"defaultCurrency\": \"MZN\"\n    },\n    {\n        \"countryName\": \"Myanmar\",\n        \"country\": \"MM\",\n        \"defaultCurrency\": \"MMK\"\n    },\n    {\n        \"countryName\": \"Namibia\",\n        \"country\": \"NA\",\n        \"defaultCurrency\": \"NAD\"\n    },\n    {\n        \"countryName\": \"Nauru\",\n        \"country\": \"NR\",\n        \"defaultCurrency\": \"AUD\"\n    },\n    {\n        \"countryName\": \"Nepal\",\n        \"country\": \"NP\",\n        \"defaultCurrency\": \"NPR\"\n    },\n    {\n        \"countryName\": \"Netherlands\",\n        \"country\": \"NL\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"Netherlands Antilles\",\n        \"country\": \"AN\",\n        \"defaultCurrency\": \"\"\n    },\n    {\n        \"countryName\": \"New Caledonia\",\n        \"country\": \"NC\",\n        \"defaultCurrency\": \"XPF\"\n    },\n    {\n        \"countryName\": \"New Zealand\",\n        \"country\": \"NZ\",\n        \"defaultCurrency\": \"NZD\"\n    },\n    {\n        \"countryName\": \"Nicaragua\",\n        \"country\": \"NI\",\n        \"defaultCurrency\": \"NIO\"\n    },\n    {\n        \"countryName\": \"Niger\",\n        \"country\": \"NE\",\n        \"defaultCurrency\": \"XOF\"\n    },\n    {\n        \"countryName\": \"Nigeria\",\n        \"country\": \"NG\",\n        \"defaultCurrency\": \"NGN\"\n    },\n    {\n        \"countryName\": \"Niue\",\n        \"country\": \"NU\",\n        \"defaultCurrency\": \"NZD\"\n    },\n    {\n        \"countryName\": \"NORTHERN MARIANA ISLANDS\",\n        \"country\": \"MP\",\n        \"defaultCurrency\": \"USD\"\n    },\n    {\n        \"countryName\": \"Norway\",\n        \"country\": \"NO\",\n        \"defaultCurrency\": \"NOK\"\n    },\n    {\n        \"countryName\": \"Oman\",\n        \"country\": \"OM\",\n        \"defaultCurrency\": \"OMR\"\n    },\n    {\n        \"countryName\": \"Pakistan\",\n        \"country\": \"PK\",\n        \"defaultCurrency\": \"PKR\"\n    },\n    {\n        \"countryName\": \"Palau\",\n        \"country\": \"PW\",\n        \"defaultCurrency\": \"USD\"\n    },\n    {\n        \"countryName\": \"Palestinian Territory, Occupied\",\n        \"country\": \"PS\",\n        \"defaultCurrency\": \"\"\n    },\n    {\n        \"countryName\": \"Panama\",\n        \"country\": \"PA\",\n        \"defaultCurrency\": \"PAB\"\n    },\n    {\n        \"countryName\": \"Papua New Guinea\",\n        \"country\": \"PG\",\n        \"defaultCurrency\": \"PGK\"\n    },\n    {\n        \"countryName\": \"Paraguay\",\n        \"country\": \"PY\",\n        \"defaultCurrency\": \"PYG\"\n    },\n    {\n        \"countryName\": \"Peru\",\n        \"country\": \"PE\",\n        \"defaultCurrency\": \"PEN\"\n    },\n    {\n        \"countryName\": \"Philippines\",\n        \"country\": \"PH\",\n        \"defaultCurrency\": \"PHP\"\n    },\n    {\n        \"countryName\": \"Poland\",\n        \"country\": \"PL\",\n        \"defaultCurrency\": \"PLN\"\n    },\n    {\n        \"countryName\": \"Portugal\",\n        \"country\": \"PT\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"PUERTO RICO\",\n        \"country\": \"PR\",\n        \"defaultCurrency\": \"USD\"\n    },\n    {\n        \"countryName\": \"Qatar\",\n        \"country\": \"QA\",\n        \"defaultCurrency\": \"QAR\"\n    },\n    {\n        \"countryName\": \"Republic of the Congo\",\n        \"country\": \"CG\",\n        \"defaultCurrency\": \"\"\n    },\n    {\n        \"countryName\": \"Reunion\",\n        \"country\": \"RE\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"Romania\",\n        \"country\": \"RO\",\n        \"defaultCurrency\": \"RON\"\n    },\n    {\n        \"countryName\": \"Russia\",\n        \"country\": \"RU\",\n        \"defaultCurrency\": \"RUB\"\n    },\n    {\n        \"countryName\": \"Rwanda\",\n        \"country\": \"RW\",\n        \"defaultCurrency\": \"RWF\"\n    },\n    {\n        \"countryName\": \"Samoa\",\n        \"country\": \"WS\",\n        \"defaultCurrency\": \"WST\"\n    },\n    {\n        \"countryName\": \"San Marino\",\n        \"country\": \"SM\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"Sao Tome and Principe\",\n        \"country\": \"ST\",\n        \"defaultCurrency\": \"STD\"\n    },\n    {\n        \"countryName\": \"Saudi Arabia\",\n        \"country\": \"SA\",\n        \"defaultCurrency\": \"SAR\"\n    },\n    {\n        \"countryName\": \"Senegal\",\n        \"country\": \"SN\",\n        \"defaultCurrency\": \"XOF\"\n    },\n    {\n        \"countryName\": \"Serbia\",\n        \"country\": \"RS\",\n        \"defaultCurrency\": \"RSD\"\n    },\n    {\n        \"countryName\": \"Seychelles\",\n        \"country\": \"SC\",\n        \"defaultCurrency\": \"SCR\"\n    },\n    {\n        \"countryName\": \"Sierra Leone\",\n        \"country\": \"SL\",\n        \"defaultCurrency\": \"SLL\"\n    },\n    {\n        \"countryName\": \"Singapore\",\n        \"country\": \"SG\",\n        \"defaultCurrency\": \"SGD\"\n    },\n    {\n        \"countryName\": \"Sint Maarten\",\n        \"country\": \"SX\",\n        \"defaultCurrency\": \"ANG\"\n    },\n    {\n        \"countryName\": \"Slovakia\",\n        \"country\": \"SK\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"Slovenia\",\n        \"country\": \"SI\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"Solomon Islands\",\n        \"country\": \"SB\",\n        \"defaultCurrency\": \"SBD\"\n    },\n    {\n        \"countryName\": \"Somalia\",\n        \"country\": \"SO\",\n        \"defaultCurrency\": \"SOS\"\n    },\n    {\n        \"countryName\": \"South Africa\",\n        \"country\": \"ZA\",\n        \"defaultCurrency\": \"ZAR\"\n    },\n    {\n        \"countryName\": \"South Korea\",\n        \"country\": \"KR\",\n        \"defaultCurrency\": \"KRW\"\n    },\n    {\n        \"countryName\": \"South Sudan\",\n        \"country\": \"SS\",\n        \"defaultCurrency\": \"SSP\"\n    },\n    {\n        \"countryName\": \"Spain\",\n        \"country\": \"ES\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"Sri Lanka\",\n        \"country\": \"LK\",\n        \"defaultCurrency\": \"LKR\"\n    },\n    {\n        \"countryName\": \"St. Barthelemy\",\n        \"country\": \"BL\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"St. Helena\",\n        \"country\": \"SH\",\n        \"defaultCurrency\": \"SHP\"\n    },\n    {\n        \"countryName\": \"St. Kitts and Nevis\",\n        \"country\": \"KN\",\n        \"defaultCurrency\": \"XCD\"\n    },\n    {\n        \"countryName\": \"St. Lucia\",\n        \"country\": \"LC\",\n        \"defaultCurrency\": \"XCD\"\n    },\n    {\n        \"countryName\": \"St. Pierre et Miquelon\",\n        \"country\": \"PM\",\n        \"defaultCurrency\": \"EUR\"\n    },\n    {\n        \"countryName\": \"St. Vincent and the Grenadines\",\n        \"country\": \"VC\",\n        \"defaultCurrency\": \"XCD\"\n    },\n    {\n        \"countryName\": \"Sudan\",\n        \"country\": \"SD\",\n        \"defaultCurrency\": \"SDG\"\n    },\n    {\n        \"countryName\": \"Suriname\",\n        \"country\": \"SR\",\n        \"defaultCurrency\": \"SRD\"\n    },\n    {\n        \"countryName\": \"Svalbard and Jan Mayen Islands\",\n        \"country\": \"SJ\",\n        \"defaultCurrency\": \"\"\n    },\n    {\n        \"countryName\": \"Swaziland\",\n        \"country\": \"SZ\",\n        \"defaultCurrency\": \"SZL\"\n    },\n    {\n        \"countryName\": \"Sweden\",\n        \"country\": \"SE\",\n        \"defaultCurrency\": \"SEK\"\n    },\n    {\n        \"countryName\": \"Switzerland\",\n        \"country\": \"CH\",\n        \"defaultCurrency\": \"CHF\"\n    },\n    {\n        \"countryName\": \"Taiwan\",\n        \"country\": \"TW\",\n        \"defaultCurrency\": \"TWD\"\n    },\n    {\n        \"countryName\": \"Tajikistan\",\n        \"country\": \"TJ\",\n        \"defaultCurrency\": \"TJS\"\n    },\n    {\n        \"countryName\": \"Tanzania\",\n        \"country\": \"TZ\",\n        \"defaultCurrency\": \"TZS\"\n    },\n    {\n        \"countryName\": \"Thailand\",\n        \"country\": \"TH\",\n        \"defaultCurrency\": \"THB\"\n    },\n    {\n        \"countryName\": \"The Gambia\",\n        \"country\": \"GM\",\n        \"defaultCurrency\": \"GMD\"\n    },\n    {\n        \"countryName\": \"Timor Leste\",\n        \"country\": \"TL\",\n        \"defaultCurrency\": \"USD\"\n    },\n    {\n        \"countryName\": \"Togo\",\n        \"country\": \"TG\",\n        \"defaultCurrency\": \"XOF\"\n    },\n    {\n        \"countryName\": \"Tonga\",\n        \"country\": \"TO\",\n        \"defaultCurrency\": \"TOP\"\n    },\n    {\n        \"countryName\": \"Trinidad and Tobago\",\n        \"country\": \"TT\",\n        \"defaultCurrency\": \"TTD\"\n    },\n    {\n        \"countryName\": \"Tunisia\",\n        \"country\": \"TN\",\n        \"defaultCurrency\": \"TND\"\n    },\n    {\n        \"countryName\": \"Turkey\",\n        \"country\": \"TR\",\n        \"defaultCurrency\": \"TRY\"\n    },\n    {\n        \"countryName\": \"Turkmenistan\",\n        \"country\": \"TM\",\n        \"defaultCurrency\": \"TMT\"\n    },\n    {\n        \"countryName\": \"Turks and Caicos Islands\",\n        \"country\": \"TC\",\n        \"defaultCurrency\": \"USD\"\n    },\n    {\n        \"countryName\": \"Tuvalu\",\n        \"country\": \"TV\",\n        \"defaultCurrency\": \"TVD\"\n    },\n    {\n        \"countryName\": \"Uganda\",\n        \"country\": \"UG\",\n        \"defaultCurrency\": \"UGX\"\n    },\n    {\n        \"countryName\": \"Ukraine\",\n        \"country\": \"UA\",\n        \"defaultCurrency\": \"UAH\"\n    },\n    {\n        \"countryName\": \"United Arab Emirates\",\n        \"country\": \"AE\",\n        \"defaultCurrency\": \"AED\"\n    },\n    {\n        \"countryName\": \"United Kingdom\",\n        \"country\": \"GB\",\n        \"defaultCurrency\": \"GBP\"\n    },\n    {\n        \"countryName\": \"United States\",\n        \"country\": \"US\",\n        \"defaultCurrency\": \"USD\"\n    },\n    {\n        \"countryName\": \"Uruguay\",\n        \"country\": \"UY\",\n        \"defaultCurrency\": \"UYU\"\n    },\n    {\n        \"countryName\": \"Uzbekistan\",\n        \"country\": \"UZ\",\n        \"defaultCurrency\": \"UZS\"\n    },\n    {\n        \"countryName\": \"Vanuatu\",\n        \"country\": \"VU\",\n        \"defaultCurrency\": \"VUV\"\n    },\n    {\n        \"countryName\": \"Venezuela\",\n        \"country\": \"VE\",\n        \"defaultCurrency\": \"VEF\"\n    },\n    {\n        \"countryName\": \"Viet Nam\",\n        \"country\": \"VN\",\n        \"defaultCurrency\": \"VND\"\n    },\n    {\n        \"countryName\": \"VIRGIN ISLANDS (U.S.)\",\n        \"country\": \"VI\",\n        \"defaultCurrency\": \"USD\"\n    },\n    {\n        \"countryName\": \"Wallis and Futuna\",\n        \"country\": \"WF\",\n        \"defaultCurrency\": \"XPF\"\n    },\n    {\n        \"countryName\": \"Western Sahara\",\n        \"country\": \"EH\",\n        \"defaultCurrency\": \"\"\n    },\n    {\n        \"countryName\": \"Yemen\",\n        \"country\": \"YE\",\n        \"defaultCurrency\": \"YER\"\n    },\n    {\n        \"countryName\": \"Zambia\",\n        \"country\": \"ZM\",\n        \"defaultCurrency\": \"ZMW\"\n    },\n    {\n        \"countryName\": \"Zimbabwe\",\n        \"country\": \"ZW\",\n        \"defaultCurrency\": \"ZWD\"\n    }\n]"
						}
					]
				},
				{
					"name": "View Currencies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>",
								"description": "(Required) "
							}
						],
						"url": {
							"raw": "/partner/:partnerId/:clientCode/guides/currencies?product=<string>",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"guides",
								"currencies"
							],
							"query": [
								{
									"key": "product",
									"value": "<string>",
									"description": "(Required) "
								}
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>"
								},
								{
									"key": "clientCode",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "List of all currencies Corpay trades in."
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/guide/currencies?product=Bene",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"guide",
										"currencies"
									],
									"query": [
										{
											"key": "product",
											"value": "Bene",
											"description": "(Required) "
										}
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}"
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 16:23:39 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "0"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "5401"
								},
								{
									"key": "Content-Length",
									"value": "10605"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"all\": [\n        {\n            \"curr\": \"AED\",\n            \"desc\": \"AED-UAE Dirham\"\n        },\n        {\n            \"curr\": \"AFN\",\n            \"desc\": \"AFN-Afghan afghani\"\n        },\n        {\n            \"curr\": \"ALL\",\n            \"desc\": \"ALL-Albanian lek\"\n        },\n        {\n            \"curr\": \"AMD\",\n            \"desc\": \"AMD-Armenian Dram\"\n        },\n        {\n            \"curr\": \"ANG\",\n            \"desc\": \"ANG-Netherlands Antillian Guilder\"\n        },\n        {\n            \"curr\": \"AOA\",\n            \"desc\": \"AOA-Angolan kwanza\"\n        },\n        {\n            \"curr\": \"ARB\",\n            \"desc\": \"ARB-Argentine Bond\"\n        },\n        {\n            \"curr\": \"ARS\",\n            \"desc\": \"ARS-Argentine Peso\"\n        },\n        {\n            \"curr\": \"AUD\",\n            \"desc\": \"AUD-Australian Dollar\"\n        },\n        {\n            \"curr\": \"AWG\",\n            \"desc\": \"AWG-Aruban or Dutch Guilder\"\n        },\n        {\n            \"curr\": \"AZN\",\n            \"desc\": \"AZN-Azerbaijani manat\"\n        },\n        {\n            \"curr\": \"BAM\",\n            \"desc\": \"BAM-Bosnia and Herzegovina convertible mark\"\n        },\n        {\n            \"curr\": \"BBD\",\n            \"desc\": \"BBD-Barbados Dollar\"\n        },\n        {\n            \"curr\": \"BDT\",\n            \"desc\": \"BDT-Bangladeshi taka\"\n        },\n        {\n            \"curr\": \"BGN\",\n            \"desc\": \"BGN-Bulgarian Lev\"\n        },\n        {\n            \"curr\": \"BHD\",\n            \"desc\": \"BHD-Bahraini Dinar\"\n        },\n        {\n            \"curr\": \"BIF\",\n            \"desc\": \"BIF-Burundian franc\"\n        },\n        {\n            \"curr\": \"BMD\",\n            \"desc\": \"BMD-Bermudian dollar\"\n        },\n        {\n            \"curr\": \"BND\",\n            \"desc\": \"BND-Brunei Dollar\"\n        },\n        {\n            \"curr\": \"BOB\",\n            \"desc\": \"BOB-Bolivian boliviano\"\n        },\n        {\n            \"curr\": \"BRL\",\n            \"desc\": \"BRL-Brazilian Real\"\n        },\n        {\n            \"curr\": \"BSD\",\n            \"desc\": \"BSD-Bahamian dollar\"\n        },\n        {\n            \"curr\": \"BTN\",\n            \"desc\": \"BTN-Bhutanese ngultrum\"\n        },\n        {\n            \"curr\": \"BWP\",\n            \"desc\": \"BWP-Pula\"\n        },\n        {\n            \"curr\": \"BYN\",\n            \"desc\": \"BYN-New Belarusian ruble\"\n        },\n        {\n            \"curr\": \"BYR\",\n            \"desc\": \"BYR-Belarusian ruble\"\n        },\n        {\n            \"curr\": \"BZD\",\n            \"desc\": \"BZD-Belize dollar\"\n        },\n        {\n            \"curr\": \"CAD\",\n            \"desc\": \"CAD-Canadian Dollar\"\n        },\n        {\n            \"curr\": \"CDF\",\n            \"desc\": \"CDF-Congolese franc\"\n        },\n        {\n            \"curr\": \"CHF\",\n            \"desc\": \"CHF-Swiss Franc\"\n        },\n        {\n            \"curr\": \"CLP\",\n            \"desc\": \"CLP-Chilean Peso\"\n        },\n        {\n            \"curr\": \"CNH\",\n            \"desc\": \"CNH-Chinese Renminbi\"\n        },\n        {\n            \"curr\": \"CNY\",\n            \"desc\": \"CNY-Yuan Renminbi\"\n        },\n        {\n            \"curr\": \"COP\",\n            \"desc\": \"COP-Colombian Peso\"\n        },\n        {\n            \"curr\": \"CRC\",\n            \"desc\": \"CRC-Costa Rican Colon\"\n        },\n        {\n            \"curr\": \"CVE\",\n            \"desc\": \"CVE-Cape Verdean Escudo\"\n        },\n        {\n            \"curr\": \"CZK\",\n            \"desc\": \"CZK-Czech Koruna\"\n        },\n        {\n            \"curr\": \"DJF\",\n            \"desc\": \"DJF-Djiboutian franc\"\n        },\n        {\n            \"curr\": \"DKK\",\n            \"desc\": \"DKK-Danish Krone\"\n        },\n        {\n            \"curr\": \"DOP\",\n            \"desc\": \"DOP-Dominican Peso\"\n        },\n        {\n            \"curr\": \"DZD\",\n            \"desc\": \"DZD-Algerian Dinar\"\n        },\n        {\n            \"curr\": \"EEK\",\n            \"desc\": \"EEK-Kroon\"\n        },\n        {\n            \"curr\": \"EGP\",\n            \"desc\": \"EGP-Egyptian Pound\"\n        },\n        {\n            \"curr\": \"ERN\",\n            \"desc\": \"ERN-Eritrean nakfa\"\n        },\n        {\n            \"curr\": \"ETB\",\n            \"desc\": \"ETB-Ethiopian Birr\"\n        },\n        {\n            \"curr\": \"EUR\",\n            \"desc\": \"EUR-Euro\"\n        },\n        {\n            \"curr\": \"FJD\",\n            \"desc\": \"FJD-Fiji Dollar\"\n        },\n        {\n            \"curr\": \"FKP\",\n            \"desc\": \"FKP-Falkland Islands pound\"\n        },\n        {\n            \"curr\": \"GBP\",\n            \"desc\": \"GBP-Pound Sterling\"\n        },\n        {\n            \"curr\": \"GEL\",\n            \"desc\": \"GEL-Georgian lari\"\n        },\n        {\n            \"curr\": \"GHS\",\n            \"desc\": \"GHS-Ghana cedi\"\n        },\n        {\n            \"curr\": \"GIP\",\n            \"desc\": \"GIP-Gibraltar pound\"\n        },\n        {\n            \"curr\": \"GMD\",\n            \"desc\": \"GMD-Gambian dalasi\"\n        },\n        {\n            \"curr\": \"GNF\",\n            \"desc\": \"GNF-Guinean franc\"\n        },\n        {\n            \"curr\": \"GTQ\",\n            \"desc\": \"GTQ-Guatemala Quetzal\"\n        },\n        {\n            \"curr\": \"GYD\",\n            \"desc\": \"GYD-Guyanese dollar\"\n        },\n        {\n            \"curr\": \"HKD\",\n            \"desc\": \"HKD-Hong Kong Dollar\"\n        },\n        {\n            \"curr\": \"HNL\",\n            \"desc\": \"HNL-Honduran Lempira\"\n        },\n        {\n            \"curr\": \"HRK\",\n            \"desc\": \"HRK-Croatian Kuna\"\n        },\n        {\n            \"curr\": \"HTG\",\n            \"desc\": \"HTG-Haitian gourde\"\n        },\n        {\n            \"curr\": \"HUF\",\n            \"desc\": \"HUF-Forint\"\n        },\n        {\n            \"curr\": \"IDR\",\n            \"desc\": \"IDR-Rupiah\"\n        },\n        {\n            \"curr\": \"ILS\",\n            \"desc\": \"ILS-New Israeli Sheqel\"\n        },\n        {\n            \"curr\": \"INR\",\n            \"desc\": \"INR-Indian Rupee\"\n        },\n        {\n            \"curr\": \"IQD\",\n            \"desc\": \"IQD-Iraqi dinar\"\n        },\n        {\n            \"curr\": \"ISK\",\n            \"desc\": \"ISK-Iceland Krona\"\n        },\n        {\n            \"curr\": \"JMD\",\n            \"desc\": \"JMD-Jamaican Dollar\"\n        },\n        {\n            \"curr\": \"JOD\",\n            \"desc\": \"JOD-Jordanian Dinar\"\n        },\n        {\n            \"curr\": \"JPY\",\n            \"desc\": \"JPY-Yen\"\n        },\n        {\n            \"curr\": \"KES\",\n            \"desc\": \"KES-Kenyan Shilling\"\n        },\n        {\n            \"curr\": \"KGS\",\n            \"desc\": \"KGS-Kyrgyzstani som\"\n        },\n        {\n            \"curr\": \"KHR\",\n            \"desc\": \"KHR-Cambodian riel\"\n        },\n        {\n            \"curr\": \"KMF\",\n            \"desc\": \"KMF-Comorian Franc\"\n        },\n        {\n            \"curr\": \"KRW\",\n            \"desc\": \"KRW-Won\"\n        },\n        {\n            \"curr\": \"KWD\",\n            \"desc\": \"KWD-Kuwaiti Dinar\"\n        },\n        {\n            \"curr\": \"KYD\",\n            \"desc\": \"KYD-Cayman Islands dollar\"\n        },\n        {\n            \"curr\": \"KZT\",\n            \"desc\": \"KZT-Kazakhstani tenge\"\n        },\n        {\n            \"curr\": \"LAK\",\n            \"desc\": \"LAK-Lao kip\"\n        },\n        {\n            \"curr\": \"LBP\",\n            \"desc\": \"LBP-Lebanese Pound\"\n        },\n        {\n            \"curr\": \"LKR\",\n            \"desc\": \"LKR-Sri Lanka Rupee\"\n        },\n        {\n            \"curr\": \"LRD\",\n            \"desc\": \"LRD-Liberian dollar\"\n        },\n        {\n            \"curr\": \"LSL\",\n            \"desc\": \"LSL-Lesotho loti\"\n        },\n        {\n            \"curr\": \"LYD\",\n            \"desc\": \"LYD-Libyan dinar\"\n        },\n        {\n            \"curr\": \"MAD\",\n            \"desc\": \"MAD-Moroccan Dirham\"\n        },\n        {\n            \"curr\": \"MDL\",\n            \"desc\": \"MDL-Moldovan leu\"\n        },\n        {\n            \"curr\": \"MGA\",\n            \"desc\": \"MGA-Malagasy ariary\"\n        },\n        {\n            \"curr\": \"MKD\",\n            \"desc\": \"MKD-Macedonian Denar\"\n        },\n        {\n            \"curr\": \"MMK\",\n            \"desc\": \"MMK-Myanmar Kyat\"\n        },\n        {\n            \"curr\": \"MNT\",\n            \"desc\": \"MNT-Mongolian tögrög\"\n        },\n        {\n            \"curr\": \"MOP\",\n            \"desc\": \"MOP-Macanese pataca\"\n        },\n        {\n            \"curr\": \"MRO\",\n            \"desc\": \"MRO-Mauritanian ouguiya\"\n        },\n        {\n            \"curr\": \"MUR\",\n            \"desc\": \"MUR-Mauritius Rupee\"\n        },\n        {\n            \"curr\": \"MVR\",\n            \"desc\": \"MVR-Maldivian rufiyaa\"\n        },\n        {\n            \"curr\": \"MWK\",\n            \"desc\": \"MWK-Malawian kwacha\"\n        },\n        {\n            \"curr\": \"MXN\",\n            \"desc\": \"MXN-Mexican Peso\"\n        },\n        {\n            \"curr\": \"MYR\",\n            \"desc\": \"MYR-Malaysian Ringgit\"\n        },\n        {\n            \"curr\": \"MZN\",\n            \"desc\": \"MZN-Mozambican metical\"\n        },\n        {\n            \"curr\": \"NAD\",\n            \"desc\": \"NAD-Namibian Dollar\"\n        },\n        {\n            \"curr\": \"NGN\",\n            \"desc\": \"NGN-Naira\"\n        },\n        {\n            \"curr\": \"NIO\",\n            \"desc\": \"NIO-Nicaraguan córdoba\"\n        },\n        {\n            \"curr\": \"NOK\",\n            \"desc\": \"NOK-Norwegian Kroner\"\n        },\n        {\n            \"curr\": \"NPR\",\n            \"desc\": \"NPR-Nepalese Rupee\"\n        },\n        {\n            \"curr\": \"NZD\",\n            \"desc\": \"NZD-New Zealand Dollar\"\n        },\n        {\n            \"curr\": \"OMR\",\n            \"desc\": \"OMR-Rial Omani\"\n        },\n        {\n            \"curr\": \"PAB\",\n            \"desc\": \"PAB-Panamanian balboa\"\n        },\n        {\n            \"curr\": \"PEN\",\n            \"desc\": \"PEN-Nuevo Sol\"\n        },\n        {\n            \"curr\": \"PGK\",\n            \"desc\": \"PGK-Kina\"\n        },\n        {\n            \"curr\": \"PHP\",\n            \"desc\": \"PHP-Philippine Peso\"\n        },\n        {\n            \"curr\": \"PKR\",\n            \"desc\": \"PKR-Pakistan Rupee\"\n        },\n        {\n            \"curr\": \"PLN\",\n            \"desc\": \"PLN-Zloty\"\n        },\n        {\n            \"curr\": \"PYG\",\n            \"desc\": \"PYG-Paraguayan Guarani\"\n        },\n        {\n            \"curr\": \"QAR\",\n            \"desc\": \"QAR-Qatari Rial\"\n        },\n        {\n            \"curr\": \"RON\",\n            \"desc\": \"RON-New Leu\"\n        },\n        {\n            \"curr\": \"RSD\",\n            \"desc\": \"RSD-Serbian dinar\"\n        },\n        {\n            \"curr\": \"RUB\",\n            \"desc\": \"RUB-Russian Ruble\"\n        },\n        {\n            \"curr\": \"RWF\",\n            \"desc\": \"RWF-Rwandan franc\"\n        },\n        {\n            \"curr\": \"SAR\",\n            \"desc\": \"SAR-Saudi Riyal\"\n        },\n        {\n            \"curr\": \"SBD\",\n            \"desc\": \"SBD-Solomon Islands Dollar\"\n        },\n        {\n            \"curr\": \"SCR\",\n            \"desc\": \"SCR-Seychellois rupee\"\n        },\n        {\n            \"curr\": \"SEK\",\n            \"desc\": \"SEK-Swedish Krona\"\n        },\n        {\n            \"curr\": \"SGD\",\n            \"desc\": \"SGD-Singapore Dollar\"\n        },\n        {\n            \"curr\": \"SHP\",\n            \"desc\": \"SHP-Saint Helena pound\"\n        },\n        {\n            \"curr\": \"SLL\",\n            \"desc\": \"SLL-Sierra Leonean leone\"\n        },\n        {\n            \"curr\": \"SRD\",\n            \"desc\": \"SRD-Surinamese dollar\"\n        },\n        {\n            \"curr\": \"SSP\",\n            \"desc\": \"SSP-South Sudanese pound\"\n        },\n        {\n            \"curr\": \"STN\",\n            \"desc\": \"STN-Sao Tomean Dobra\"\n        },\n        {\n            \"curr\": \"SVC\",\n            \"desc\": \"SVC-Salvadoran colón\"\n        },\n        {\n            \"curr\": \"SZL\",\n            \"desc\": \"SZL-Lilangeni\"\n        },\n        {\n            \"curr\": \"THB\",\n            \"desc\": \"THB-Baht\"\n        },\n        {\n            \"curr\": \"TJS\",\n            \"desc\": \"TJS-Tajikistani somoni\"\n        },\n        {\n            \"curr\": \"TMT\",\n            \"desc\": \"TMT-Turkmenistan manat\"\n        },\n        {\n            \"curr\": \"TND\",\n            \"desc\": \"TND-Tunisian Dinar\"\n        },\n        {\n            \"curr\": \"TOP\",\n            \"desc\": \"TOP-Pa'anga\"\n        },\n        {\n            \"curr\": \"TRY\",\n            \"desc\": \"TRY-Turkish Lira\"\n        },\n        {\n            \"curr\": \"TTD\",\n            \"desc\": \"TTD-Trinidad and Tobago Dollar\"\n        },\n        {\n            \"curr\": \"TWD\",\n            \"desc\": \"TWD-New Taiwan Dollar\"\n        },\n        {\n            \"curr\": \"TZS\",\n            \"desc\": \"TZS-Tanzanian Shilling\"\n        },\n        {\n            \"curr\": \"UAH\",\n            \"desc\": \"UAH-Ukrainian hryvnia\"\n        },\n        {\n            \"curr\": \"UGX\",\n            \"desc\": \"UGX-Uganda Shilling\"\n        },\n        {\n            \"curr\": \"USD\",\n            \"desc\": \"USD-US Dollar\"\n        },\n        {\n            \"curr\": \"UYU\",\n            \"desc\": \"UYU-Uruguayan peso\"\n        },\n        {\n            \"curr\": \"UZS\",\n            \"desc\": \"UZS-Uzbekistani som\"\n        },\n        {\n            \"curr\": \"VEF\",\n            \"desc\": \"VEF-Venezuelan bolívar\"\n        },\n        {\n            \"curr\": \"VND\",\n            \"desc\": \"VND-Vietnamese dong\"\n        },\n        {\n            \"curr\": \"VUV\",\n            \"desc\": \"VUV-Vanuatu vatu\"\n        },\n        {\n            \"curr\": \"WST\",\n            \"desc\": \"WST-Samoan tala\"\n        },\n        {\n            \"curr\": \"XAF\",\n            \"desc\": \"XAF-CFA Franc BEAC\"\n        },\n        {\n            \"curr\": \"XCD\",\n            \"desc\": \"XCD-East Caribbean Dollar\"\n        },\n        {\n            \"curr\": \"XOF\",\n            \"desc\": \"XOF-CFA Franc BCEAO\"\n        },\n        {\n            \"curr\": \"XPF\",\n            \"desc\": \"XPF-CFP Franc\"\n        },\n        {\n            \"curr\": \"YER\",\n            \"desc\": \"YER-Yemeni rial\"\n        },\n        {\n            \"curr\": \"ZAR\",\n            \"desc\": \"ZAR-Rand\"\n        },\n        {\n            \"curr\": \"ZMW\",\n            \"desc\": \"ZMW-Zambian Kwacha\"\n        }\n    ]\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/guide/currencies?product=Wire",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"guide",
										"currencies"
									],
									"query": [
										{
											"key": "product",
											"value": "Wire",
											"description": "(Required) "
										}
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}"
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 16:24:05 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "19423"
								},
								{
									"key": "Content-Length",
									"value": "469"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2020-10-15T16:24:05.89Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": \"Bad Request\",\n    \"errorCode\": \"400\",\n    \"errorType\": \"HTTP:BAD_REQUEST\",\n    \"description\": \"HTTP GET on resource 'https://beta.cambridgelink.com:443/api/252497/0/payCurrencies' failed: bad request (400).\",\n    \"errorClass\": \"org.mule.extension.http.api.request.validator.ResponseValidatorTypedException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"d84ba740-0f02-11eb-898f-122027ceb96f\"\n}"
						}
					]
				},
				{
					"name": "Forward Guide",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "/partner/:partnerId/:clientCode/guides/forwardGuide",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"guides",
								"forwardGuide"
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "clientCode",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "This endpoint returns the clauses in the Master Hedging Agreement contract. The Response Body lists the contractual restrictions when creating forwards.\r\n<br />\r\n\r\n----\r\n<br />\r\n\r\n##### RESPONSE BODY\r\n\r\n\r\n<table style=\"width:100%\">\r\n  <tr>\r\n    <th align=\"left\">Parameter</th>\r\n    <th align=\"left\">Description</th>\r\n  </tr>\r\n  <tr>\r\n    <td>forwardMaturityDays</td>\r\n    <td>The minimum number of days allowed between the start date and the maturity date.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>lientLimit.amount</td>\r\n    <td>The maximum amount that could be used as settlement as part of the forward agreement.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>clientLimit.currency</td>\r\n    <td>The SELL currency applicable to the 'clientLimit.amount'.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>bookdate</td>\r\n    <td>The earliest date the forward agreement will go into effect once the order is completed.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>contractTypes</td>\r\n    <td>Possible values = ['C', closed contract; 'O', open contract]. Contract type is determined by business needs.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>allowBookDeals</td>\r\n    <td>Indicates whether the client is allowed to book deals = [true, false].</td>\r\n  </tr>\r\n  <tr>\r\n    <td>marginCallPercent</td>\r\n    <td>The allowed loan amount as a percentage of the initial investment.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>marginCallPercentMessages</td>\r\n    <td>The Response message (displayed on the UI) stating the deposit percentage required to be placed with each booked forward.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>baseCurrency</td>\r\n    <td>The sell currency. Same as the 'clientLimit.currency' field.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>baseCurrency</td>\r\n    <td>The sell currency. Same as the 'clientLimit.currency' field.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>skipStep3</td>\r\n    <td>Internal use only.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>forwardAgreement.hedgingAgreement</td>\r\n    <td>Indicates whether the Hedging Agreement has been signed under the account. Possible values = [true, false].</td>\r\n  </tr>\r\n  <tr>\r\n    <td>forwardAgreement.allowBook</td>\r\n    <td>Indicates whether the forward can be booked. Possible values = [true, false].</td>\r\n  </tr>\r\n  <tr>\r\n    <td>forwardAgreement.<br />forwardMasterAgreementWarning</td>\r\n    <td>Internal use only.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>maxDays</td>\r\n    <td>The maximum number of days allowed between the start date and maturity.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>forwardMaxOpenContractInterval</td>\r\n    <td>The maximum number of days that the forward can be open.</td>\r\n  </tr>\r\n</table>"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}"
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/guide/forwardGuide",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"guide",
										"forwardGuide"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 16:25:41 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "4388"
								},
								{
									"key": "Content-Length",
									"value": "727"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"forwardMaturityDays\": 7,\n    \"clientLimit\": {\n        \"amount\": 0,\n        \"currency\": \"CAD\"\n    },\n    \"bookDate\": \"2020-10-15T00:00:00-04:00\",\n    \"contractTypes\": [\n        {\n            \"id\": \"O\",\n            \"text\": \"Open\"\n        },\n        {\n            \"id\": \"C\",\n            \"text\": \"Closed\"\n        }\n    ],\n    \"allowBookDeals\": true,\n    \"marginCallPercent\": 100,\n    \"marginCallPercentMessages\": \"* Your agreement with Corpay indicates that you are required to place a 100.0000% deposit with each booked forward.\",\n    \"baseCurrency\": \"CAD\",\n    \"skipStep3\": false,\n    \"forwardAgreement\": {\n        \"hedgingAgreement\": true,\n        \"allowBook\": true,\n        \"forwardMasterAgreementWarning\": \"\"\n    },\n    \"maxDays\": \"365\",\n    \"forwardMaxOpenContractInterval\": 90\n}"
						}
					]
				},
				{
					"name": "View Regions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>",
								"description": "(Required) "
							}
						],
						"url": {
							"raw": "/partner/:partnerId/:clientCode/guides/regions?country=<string>",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"guides",
								"regions"
							],
							"query": [
								{
									"key": "country",
									"value": "<string>",
									"description": "(Required) "
								}
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>"
								},
								{
									"key": "clientCode",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "List of all regions, provinces, states based on {CountryISO2}"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/guide/regions?country=CA",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"guide",
										"regions"
									],
									"query": [
										{
											"key": "country",
											"value": "CA",
											"description": "(Required) "
										}
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}"
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 16:27:07 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "18049"
								},
								{
									"key": "Content-Length",
									"value": "1637"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"regions\": [\n        {\n            \"id\": \"ALBERTA\",\n            \"country\": \"CA\",\n            \"countryName\": \"Canada\",\n            \"name\": \"ALBERTA\"\n        },\n        {\n            \"id\": \"BRITISH COLUMBIA\",\n            \"country\": \"CA\",\n            \"countryName\": \"Canada\",\n            \"name\": \"BRITISH COLUMBIA\"\n        },\n        {\n            \"id\": \"MANITOBA\",\n            \"country\": \"CA\",\n            \"countryName\": \"Canada\",\n            \"name\": \"MANITOBA\"\n        },\n        {\n            \"id\": \"NEW BRUNSWICK\",\n            \"country\": \"CA\",\n            \"countryName\": \"Canada\",\n            \"name\": \"NEW BRUNSWICK\"\n        },\n        {\n            \"id\": \"NEWFOUNDLAND AND LABRADOR\",\n            \"country\": \"CA\",\n            \"countryName\": \"Canada\",\n            \"name\": \"NEWFOUNDLAND AND LABRADOR\"\n        },\n        {\n            \"id\": \"NORTHWEST TERRITORIES\",\n            \"country\": \"CA\",\n            \"countryName\": \"Canada\",\n            \"name\": \"NORTHWEST TERRITORIES\"\n        },\n        {\n            \"id\": \"NOVA SCOTIA\",\n            \"country\": \"CA\",\n            \"countryName\": \"Canada\",\n            \"name\": \"NOVA SCOTIA\"\n        },\n        {\n            \"id\": \"NUNAVUT\",\n            \"country\": \"CA\",\n            \"countryName\": \"Canada\",\n            \"name\": \"NUNAVUT\"\n        },\n        {\n            \"id\": \"ONTARIO\",\n            \"country\": \"CA\",\n            \"countryName\": \"Canada\",\n            \"name\": \"ONTARIO\"\n        },\n        {\n            \"id\": \"PRINCE EDWARD ISLAND\",\n            \"country\": \"CA\",\n            \"countryName\": \"Canada\",\n            \"name\": \"PRINCE EDWARD ISLAND\"\n        },\n        {\n            \"id\": \"QUEBEC\",\n            \"country\": \"CA\",\n            \"countryName\": \"Canada\",\n            \"name\": \"QUEBEC\"\n        },\n        {\n            \"id\": \"SASKATCHEWAN\",\n            \"country\": \"CA\",\n            \"countryName\": \"Canada\",\n            \"name\": \"SASKATCHEWAN\"\n        },\n        {\n            \"id\": \"YUKON\",\n            \"country\": \"CA\",\n            \"countryName\": \"Canada\",\n            \"name\": \"YUKON\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Validation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>",
								"description": "(Required) "
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"key\" :  \"iban\",\r\n  \"value\" : \"\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/partner/:partnerId/:clientCode/guides/validate",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"guides",
								"validate"
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "clientCode",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Validates the IBAN number submitted in the ‘Body’ of the request and returns the banking details parsed from the IBAN string.\r\n\r\nResponse provides two important data points:\r\n<ul>\r\n<li>Whether the IBAN  is valid. </li>\r\n<li>Bank information. This is not contingent on valid structure of the IBAN. </li>\r\n</ul>\r\n\r\n**Note:** IBAN can be invalid but bank information can still be extracted."
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"key\" :  \"IBAN\",\r\n  \"value\" : \"GR1601101250000000012300695\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/partner/:partnerId/:clientCode/guide/validate",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"guide",
										"validate"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 16:30:51 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "15021"
								},
								{
									"key": "Content-Length",
									"value": "611"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"iban\": \"GR1601101250000000012300695\",\n    \"branchCode\": \"0110040\",\n    \"routingNumber\": \"0110040\",\n    \"accountNumber\": \"GR1601101250000000012300695\",\n    \"swiftBIC\": \"ETHNGRAAXXX\",\n    \"bankName\": \"NATIONAL BANK OF GREECE S.A.\",\n    \"branchName\": \"NATIONAL BANK OF GREECE S.A.\",\n    \"bankAddress\": \"AIOLOU STREET 86\",\n    \"postalCode\": \"10232\",\n    \"bankCity\": \"ATHENS\",\n    \"country\": \"GREECE\",\n    \"validationMessages\": [\n        {\n            \"message\": \"The branch code cannot be found but we can find the bank so we returned the head office details.  Check the bank code with the user to ensure that it is valid. (01br)\"\n        }\n    ]\n}"
						},
						{
							"name": "404 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"key\" :  \"iban\",\r\n  \"value\" : \"\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/api/partner/:partnerId/:clientCode/guide/validate",
									"path": [
										"api",
										"partner",
										":partnerId",
										":clientCode",
										"guide",
										"validate"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 10 Nov 2020 16:15:07 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-correlation-id",
									"value": "52b1b256-c7ea-44b6-9b80-5eb24845a93a"
								},
								{
									"key": "X-CDN",
									"value": "Incapsula"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "X-Iinfo",
									"value": "12-245903240-245911280 SNYN RT(1605024824795 80464) q(0 0 0 -1) r(14 14) U6"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2020-11-10T16:15:06.971Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": \"Bad Request\",\n    \"errorCode\": \"400\",\n    \"errorType\": \"HTTP:BAD_REQUEST\",\n    \"description\": [\n        {\n            \"key\": \"IBAN\",\n            \"type\": \"input\",\n            \"message\": \"The IBAN field is required.\"\n        },\n        {\n            \"key\": \"ErrorID\",\n            \"type\": \"input\",\n            \"message\": \"\"\n        }\n    ],\n    \"errorClass\": \"org.mule.extension.http.api.request.validator.ResponseValidatorTypedException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"52b1b256-c7ea-44b6-9b80-5eb24845a93a\"\n}"
						}
					]
				}
			],
			"description": "These endpoints assist with the creation and lookup of beneficiary information.\r\nAdditions to that help include lists for cities, regions, currencies, and countries\r\n\r\n Validation is recommended for use in IBAN enabled countries, while Search Banks is for countries that do not support IBAN."
		},
		{
			"name": "Beneficiaries",
			"item": [
				{
					"name": "Bene Details",
					"item": [
						{
							"name": "Create/Edit Bene",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "<string>",
										"description": "(Required) "
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\n\n \t\"identifier\": \"testdemobeneINR2\",\n \t\"templateData\": {\n \t\t\"beneData\": {\n \t\t\t\"beneSpecific\": {\n \t\t\t\t\"accountHolderName\": \"john\",\n \t\t\t\t\"classification\": \"Individual\",\n \t\t\t\t\"accountNumber\": \"67385863631\",\n \t\t\t\t\"localAccountNumber\": \"\",\n \t\t\t\t\"phoneNumber\": \"\",\n \t\t\t\t\"emailAddress\": \"\"\n \t\t\t},\n \t\t\t\"address\": {\n \t\t\t\t\"country\": \"CA\",\n \t\t\t\t\"region\": \"ON\",\n \t\t\t\t\"city\": \"Toronto\",\n \t\t\t\t\"addressLine1\": \"234 king st\",\n \t\t\t\t\"addressLine2\": \"\",\n \t\t\t\t\"postalCode\": \"m5a2r4\"\n \t\t\t}\n \t\t},\n \t\t\"bankData\": {\n \t\t\t\"bankSpecific\": {\n \t\t\t\t\"name\": \"State Bank of India\",\n \t\t\t\t\"routingCode\": \"34356456987\",\n \t\t\t\t\"localRoutingCode\": \"SBIN0070706\",\n \t\t\t\t\"SWIFTBIC\": \"SBININBBXXX\"\n\n \t\t\t},\n \t\t\t\"address\": {\n \t\t\t\t\"country\": \"IN\",\n \t\t\t\t\"region\": \"Kerla\",\n \t\t\t\t\"city\": \"Kochi\",\n \t\t\t\t\"addressLine1\": \"No.37/2156 A5, Madathikunnel Buildi\",\n \t\t\t\t\"addressLine2\": \"\",\n \t\t\t\t\"postalCode\": \"682017\"\n\n \t\t\t},\n\n \t\t\t\"regulatoryData\": {\n \t\t\t\t\"regulatory\": {\n \t\t\t\t\t\"regulatorySpecific\": [{\n \t\t\t\t\t\t\"key\": \"BeneficiaryAccountType\",\n \t\t\t\t\t\t\"value\": \"CACC\"\n\n\n \t\t\t\t\t}]\n\n \t\t\t\t}\n \t\t\t}\n\n \t\t}\n\n \t},\n\n \t\"paymentData\": {\n \t\t\"paymentSpecific\": {\n \t\t\t\"paymentMethod\": [\"E\"],\n \t\t\t\"paymentCurrency\": \"INR\",\n \t\t\t\"sendPaytracker\": false,\n \t\t\t\"preferredMethod\": \"E\",\n \t\t\t\"paymentAlert\": \"\"\n \t\t}\n\n \t}\n\n\n\n }"
								},
								"url": {
									"raw": "/partner/:partnerId/:clientCode/beneficiaries/:beneId",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"beneficiaries",
										":beneId"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "<string>"
										},
										{
											"key": "clientCode",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "beneId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "The POST method is used here for better error handling due to the idempotency of POST requests. This results in a resource that can be updated multiple times with the same data and provide the same response.  \nThe ID value is a unique beneficiary ID that you can use in other endpoints. The first time it is provided, it creates a new resource, which is later used to reference that beneficiary.\n\nThe beneficiary ID must be unique as Corpay uses global values in this field. You can use [GUID](https://guidgenerator.com/) which has a very low chance of collision, your own hash, or some deterministic prefix to make it unique.\n\nThe 'id' appears in the URL as well as in the payload.\n\nChanging the 'id' creates a new beneficiary template.\n\nIn the following list, **Required** means that the field is required for *ALL* beneficiaries, regardless of destination. Some destinations require additional information.\n\n* * *\n\n#### Request Body\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>identifier<br><b>Required</b></td><td>The client-assigned template identifier. This value should match the 'beneId' in the URL. The value in this field is returned in the 'beneIdentifier' field when you run <b>GET</b> <a href=\"https://documenter.getpostman.com/view/5203630/UVR4PAbZ#9eba62f9-d534-4c07-99ab-01443efc8e38\">View Bene</a>.<br></td></tr><tr><td>templateData.beneData.beneSpecific.accountHolderName<br><b>Required</b></td><td>Full name of the account holder.</td></tr><tr><td>templateData.beneData.beneSpecific.classification<br><b>Required</b></td><td>Beneficiary classification = 'Individual' or 'Business'.</td></tr><tr><td>templateData.beneData.beneSpecific.accountNumber<br><b>Required ONLY</b> for Wires.</td><td>Bank account number.</td></tr><tr><td>templateData.beneData.beneSpecific.localAccountNumber<br><b>Required ONLY</b> for EFTs.</td><td>Bank account number.</td></tr><tr><td>templateData.beneData.beneSpecific.accountHolderPhoneNumber</td><td>The account holder's phone number.</td></tr><tr><td>templateData.beneData.beneSpecific.accountHolderEmail</td><td>Email address used if 'SendPayTracker' = 'true'.</td></tr><tr><td>templateData.beneData.address.accountHolderCountry<br><b>Required</b></td><td>The account holder's two-letter ISO country code.</td></tr><tr><td>templateData.beneData.address.accountHolderRegion<br><b>Required ONLY</b> only for Canada and the United States.</td><td>The account holder's province or state.</td></tr><tr><td>templateData.beneData.address.accountHolderCity<br><b>Required</b></td><td>The account holder's city.</td></tr><tr><td>templateData.beneData.address.accountHolderAddress1<br><b>Required</b></td><td>First line of the account holder's address.</td></tr><tr><td>templateData.beneData.address.accountHolderAddress2</td><td>Second line of the account holder's address.</td></tr><tr><td>templateData.beneData.address.accountHolderPostal</td><td>The account holder's postal or zip code.</td></tr><tr><td>templateData.bankData.bankSpecific.bankName<br><b>Required</b></td><td>Name of the financial institution.</td></tr><tr><td>templateData.bankData.bankSpecific.routingCode<br><b>Required ONLY</b> for Wires.</td><td>Bank routing code.</td></tr><tr><td>templateData.bankData.bankSpecific.localRoutingCode<br><b>RequiredD ONLY</b> for EFTs.</td><td>Bank routing code.</td></tr><tr><td>templateData.bankData.bankSpecific.swiftBicCode<br><b>Required ONLY</b> for Wires.</td><td>The unique identifier for the bank or financial institution.</td></tr><tr><td>templateData.bankData.address.country<br><b>Required</b></td><td>Two-digit ISO code for the country where the beneficiary's bank is located.</td></tr><tr><td>templateData.bankData.address.bankRegion</td><td>The bank's province or state.</td></tr><tr><td>templateData.bankData.address.bankCity<br><b>Required</b></td><td>The bank's city.</td></tr><tr><td>templateData.bankData.address.bankAddressLine1<br><b>Required</b></td><td>First line of the bank's address.</td></tr><tr><td>templateData.bankData.address.bankAddressLine2</td><td>Second line of the bank's address.</td></tr><tr><td>templateData.bankData.address.bankPostal</td><td>The bank's postal or zip code.</td></tr><tr><td>templateData.regulatoryData.regulatory.regulatorySpecific</td><td>The fields and corresponding values needed to satisfy regulatory requirements for the destination country.</td></tr><tr><td>templateData.paymentData.paymentSpecific.paymentMethods<br><b>Required</b></td><td>Methods of payment that can be used for this beneficiary = ['W' or 'E'].</td></tr><tr><td>templateData.paymentData.paymentSpecific.bankCurrency<br><b>Required</b></td><td>Three-digit ISO-4217 code for the bank account currency.</td></tr><tr><td>templateData.paymentData.paymentSpecific.preferredMethod<br><b>Required</b></td><td>Method of payment preferred by this beneficiary.</td></tr><tr><td>templateData.paymentData.paymentSpecific.sendPayTracker</td><td>Specifies whether to send an email alert to the beneficiary whenever a payment is released = ['true', 'false'].</td></tr><tr><td>templateData.paymentData.paymentSpecific.paymentAlert</td><td>Internal email addresses to notify when a payment is made to this beneficiary.</td></tr></tbody></table>\n\n* * *\n\n#### Response Body\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>templateId</td><td>The <i>id</i> that is used to reference the most recent iteration of a beneficiary template. Since the template is mutable, it generates a new <i>id</i> every time there is a change.</td></tr></tbody></table>\n\n* * *\n\n#### Bene Creation Errors\n\n<table><tbody><tr><th>Error Code</th><th>Description</th></tr><tr><td>400 \"Beneficiary Identifier {templateIdentifier} has already been assigned\"</td><td>This happens when you are trying to create a beneficiary with a Unique URL Identifier, but you are using a 'templateIdentifier' that already exists.</td></tr><tr><td>400 \"Form Not Valid\"</td><td>This error is generated when there is missing or invalid data in one of the beneficiary fields. For example: missing regulatory fields. Refer to the <b>GET</b> <a href=\"https://documenter.getpostman.com/view/5203630/UVR4PAbZ#cfd6c235-ec61-49b7-95c5-9686dafa57f3\">Beneficiary Guide</a> for the validation rules.</td></tr><tr><td>401 \"Authorization has been denied for this request\"</td><td>The URL contains an invalid 'clientCode'. This can be fixed by using the right 'clientCode'.</td></tr></tbody></table>\n\n* * *\n\n#### Error message contents\n\nThe contents of the error response returned for the **Create/Edit Bene** endpoint depend on the field that caused the error.\n\n**Option 1**\n\nWhen the error is in one of these fields:\n\n*   accountHolderName\n*   paymentMethods\n*   accountHolderAddress1\n*   accountHolderCity\n*   bankName\n*   bankCity\n*   bankAddressLine1\n*   accountNumber\n*   accountHolderRegion\n*   accountHolderPostal\n*   bankRegion\n*   bankPostal\n*   routingCode\n    \n\nThe error response looks like this:\n\n```\n{\n  \"timeStamp\": \"2021-05-19T13:21:39.961Z\",\n  \"flowStep\": \"error\", \n  \"rootCauseMessage\": \"Bad Request\", \n  \"errorCode\": 400,\n  \"errorType\": \"HTTP:BAD_REQUEST\",\n  \"description\": \"HTTP POST on resource 'https://beta.cambridgelink.com:443/api/252607/0/templates/f620c56d-7f3e- 4a6b-ab5b-5c912bd4e2b7' failed: bad request (400).\",\n  \"errorResponse\": { \n    \"content\": {\n  },\n  \"errors\": [\n    {\n      \"key\": \"ACCOUNTHOLDERNAME_REGEX_MISMATCH\",\n      \"type\": \"input\",\n      \"message\": \"The value provided for field \\\"accountHolderName\\\" doesn't match the following RegEx: \\\"^.{3,100}$\\\"\"\n    }\n  ],\n  \"links\": [\n    {\n      \"rel\": \"self\", \"uri\": \"https://beta.cambridgelink.com/api/252607/0/templates/f620c56d-7f3e-4a6b- ab5b-5c912bd4e2b7\",\n      \"method\": \"POST\"\n    }\n  ]\n}\n\n```\n\n**Option 2**\n\nWhen the error is in one of these fields:\n\n*   beneData/country\n*   paymentCurrency\n*   classification\n*   preferredMethod\n*   bankData/country\n*   accountNumber\n    \n\nThe error response looks like this:\n\n```\n{\n  \"timeStamp\": \"2021-05-19T13:58:49.438Z\",\n  \"flowStep\": \"error\", \n  \"rootCauseMessage\": null, \"errorCode\": \"400\",\n  \"errorType\": \"APIKIT:BAD_REQUEST\",\n  \"description\": \"/templateData/beneData/address/country string [DEST] does not match pattern ^[A-Z]{2}$ Location:    Position: Line 0, Column 0\",\n  \"errorResponse\": \"\",\n  \"errorClass\": \"org.mule.module.apikit.api.exception.BadRequestException\", \n  \"flowName\": \"handle-error\",\n  \"CID\": \"52e8f8cf-51b1-4a3c-986c-f0b46da4aebe\"\n}\n\n```"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n\n \t\"identifier\": \"testdemobeneINR2\",\n \t\"templateData\": {\n \t\t\"beneData\": {\n \t\t\t\"beneSpecific\": {\n \t\t\t\t\"accountHolderName\": \"john\",\n \t\t\t\t\"classification\": \"Individual\",\n \t\t\t\t\"accountNumber\": \"67385863631\",\n \t\t\t\t\"localAccountNumber\": \"\",\n \t\t\t\t\"phoneNumber\": \"\",\n \t\t\t\t\"emailAddress\": \"\"\n \t\t\t},\n \t\t\t\"address\": {\n \t\t\t\t\"country\": \"CA\",\n \t\t\t\t\"region\": \"ON\",\n \t\t\t\t\"city\": \"Toronto\",\n \t\t\t\t\"addressLine1\": \"234 king st\",\n \t\t\t\t\"addressLine2\": \"\",\n \t\t\t\t\"postalCode\": \"m5a2r4\"\n \t\t\t}\n \t\t},\n \t\t\"bankData\": {\n \t\t\t\"bankSpecific\": {\n \t\t\t\t\"name\": \"State Bank of India\",\n \t\t\t\t\"routingCode\": \"34356456987\",\n \t\t\t\t\"localRoutingCode\": \"SBIN0070706\",\n \t\t\t\t\"SWIFTBIC\": \"SBININBBXXX\"\n\n \t\t\t},\n \t\t\t\"address\": {\n \t\t\t\t\"country\": \"IN\",\n \t\t\t\t\"region\": \"Kerla\",\n \t\t\t\t\"city\": \"Kochi\",\n \t\t\t\t\"addressLine1\": \"No.37/2156 A5, Madathikunnel Buildi\",\n \t\t\t\t\"addressLine2\": \"\",\n \t\t\t\t\"postalCode\": \"682017\"\n\n \t\t\t},\n\n \t\t\t\"regulatoryData\": {\n \t\t\t\t\"regulatory\": {\n \t\t\t\t\t\"regulatorySpecific\": [{\n \t\t\t\t\t\t\"key\": \"BeneficiaryAccountType\",\n \t\t\t\t\t\t\"value\": \"CACC\"\n\n\n \t\t\t\t\t}]\n\n \t\t\t\t}\n \t\t\t}\n\n \t\t}\n\n \t},\n\n \t\"paymentData\": {\n \t\t\"paymentSpecific\": {\n \t\t\t\"paymentMethod\": [\"E\"],\n \t\t\t\"paymentCurrency\": \"INR\",\n \t\t\t\"sendPaytracker\": false,\n \t\t\t\"preferredMethod\": \"E\",\n \t\t\t\"paymentAlert\": \"\"\n \t\t}\n\n \t}\n\n }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "/partner/:partnerId/:clientCode/beneficiaries/:beneId",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"beneficiaries",
												":beneId"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}"
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												},
												{
													"key": "beneId",
													"value": "testdemobeneINR_example",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 16:38:49 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "17566"
										},
										{
											"key": "Content-Length",
											"value": "54"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"templateId\": \"c1342aa9fa554c1aa3a2039e720a9aaa\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n    \n    \"identifier\": \"testdemobeneINR2_example\",\n    \"templateData\": {\n        \"beneData\": {\n            \"beneSpecific\": {\n                \"accountHolderName\": \"john\",\n                \"classification\": \"Individual\",\n                \"accountNumber\": \"67385863631\",\n                \"localAccountNumber\": \"\",\n\t\t\t\t\"phoneNumber\": \"\",\n\t\t\t\t\"emailAddress\": \"\"\n            },\n            \"address\": {\n                \"country\": \"CA\",\n                \"region\": \"ON\",\n                \"city\": \"Toronto\",\n                \"addressLine1\": \"234 king st\",\n                \"addressLine2\": \"\",\n\t\t\t\t\"postalCode\" : \"m5a2r4\"\n\t\t\t}\t\n        },\n        \"bankData\": {\n            \"bankSpecific\": {\n                \"name\": \"State Bank of India\",\n                \"routingCode\": \"34356456987\",\n                \"localRoutingCode\": \"SBIN0070706\",\n                \"SWIFTBIC\": \"SBININBBXXX\"\n\n            },\n            \"address\": {\n                \"country\": \"IN\",\n                \"region\": \"Kerla\",\n                \"city\": \"Kochi\",\n                \"addressLine1\": \"No.37/2156 A5, Madathikunnel Buildi\",\n                \"addressLine2\": \"\",\n\t\t\t\t\"postalCode\" : \"682017\"\n\n            }\n        }\n        \n\t},\n            \"regulatoryData\":{\n\t\t       \"regulatory\": {  \n\t\t       \"regulatorySpecific\": [{   \n               \"key\": \"BeneficiaryAccountType\", \n               \"value\": \"CACC\"\n                \n\t\t\t\n\t\t    }]\n\t\t  \n\t  \t}\t\n\t},\n    \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\"E\"],\n\t\t\t\t\"paymentCurrency\": \"INR\",\n                \"sendPaytracker\": false,\n                \"preferredMethod\": \"E\",\n                \"paymentAlert\":\"\"\n                }\n\n    }\n        \n\n    \n}"
										},
										"url": {
											"raw": "/partner/:partnerId/:clientCode/beneficiaries/:beneId",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"beneficiaries",
												":beneId"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}"
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												},
												{
													"key": "beneId",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 16:39:18 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "6755"
										},
										{
											"key": "Content-Length",
											"value": "363"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timeStamp\": \"2020-10-15T16:39:18.492Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": null,\n    \"errorCode\": \"404\",\n    \"errorType\": \"APIKIT:NOT_FOUND\",\n    \"description\": \"/partner/erictest1/252497/beneficiaries/\",\n    \"errorClass\": \"org.mule.module.apikit.exception.NotFoundException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"f84995f0-0f04-11eb-898f-122027ceb96f\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\n    \n    \"identifier\": \"testdemobeneINR2_example\",\n    \"templateData\": {\n        \"beneData\": {\n            \"beneSpecific\": {\n                \"accountHolderName\": \"john\",\n                \"classification\": \"Individual\",\n                \"accountNumber\": \"67385863631\",\n                \"localAccountNumber\": \"\",\n\t\t\t\t\"phoneNumber\": \"\",\n\t\t\t\t\"emailAddress\": \"\"\n            },\n            \"address\": {\n                \"country\": \"CA\",\n                \"region\": \"ON\",\n                \"city\": \"Toronto\",\n                \"addressLine1\": \"234 king st\",\n                \"addressLine2\": \"\",\n\t\t\t\t\"postalCode\" : \"m5a2r4\"\n\t\t\t}\t\n        },\n        \"bankData\": {\n            \"bankSpecific\": {\n                \"name\": \"State Bank of India\",\n                \"routingCode\": \"34356456987\",\n                \"localRoutingCode\": \"SBIN0070706\",\n                \"SWIFTBIC\": \"SBININBBXXX\"\n\n            },\n            \"address\": {\n                \"country\": \"IN\",\n                \"region\": \"Kerla\",\n                \"city\": \"Kochi\",\n                \"addressLine1\": \"No.37/2156 A5, Madathikunnel Buildi\",\n                \"addressLine2\": \"\",\n\t\t\t\t\"postalCode\" : \"682017\"\n\n            }\n        }\n        \n\t},\n            \"regulatoryData\":{\n\t\t       \"regulatory\": {  \n\t\t       \"regulatorySpecific\": [{   \n               \"key\": \"BeneficiaryAccountType\", \n               \"value\": \"CACC\"\n                \n\t\t\t\n\t\t    }]\n\t\t  \n\t  \t}\t\n\t},\n    \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\"\"],\n\t\t\t\t\"paymentCurrency\": \"\",\n                \"sendPaytracker\": false,\n                \"preferredMethod\": \"E\",\n                \"paymentAlert\":\"\"\n                }\n\n    }\n        \n\n    \n}"
										},
										"url": {
											"raw": "/partner/:partnerId/:clientCode/beneficiaries/:beneId",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"beneficiaries",
												":beneId"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}"
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												},
												{
													"key": "beneId",
													"value": "testdemobeneINR_example",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 16:39:58 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "7152"
										},
										{
											"key": "Content-Length",
											"value": "574"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timeStamp\": \"2020-10-15T16:39:58.142Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": null,\n    \"errorCode\": \"400\",\n    \"errorType\": \"APIKIT:BAD_REQUEST\",\n    \"description\": \"/paymentData/paymentSpecific/paymentMethod/0  is not a valid enum value  Location:   Position: Line 0,  Column 0\\n/paymentData/paymentSpecific/paymentCurrency string [] does not match pattern ^[A-Z]{3}$  Location:   Position: Line 0,  Column 0\",\n    \"errorClass\": \"org.mule.module.apikit.api.exception.BadRequestException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"0fe3e9e0-0f05-11eb-898f-122027ceb96f\"\n}"
								}
							]
						},
						{
							"name": "View Bene",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "<string>",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/beneficiaries/:beneId",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"beneficiaries",
										":beneId"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "<string>"
										},
										{
											"key": "clientCode",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "beneId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "Retrieves complete template information for the specified beneficiary.\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>id</td><td>The 'id' is an auto-generated string that is regenerated every time there is a change to the beneficiary template. The only 'id' that remains constant with the template is the 'clientIntegrationId'.<br>Used when making a payment (via <b>POST</b> <a href=\"https://documenter.getpostman.com/view/5203630/UVR4PAbZ#12818ce6-1fc9-4333-8d48-86880b24890b\">Instruct Deal</a>)<br></td></tr></tbody></table>"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "/partner/:partnerId/:clientCode/beneficiaries/:beneId",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"beneficiaries",
												":beneId"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}"
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}"
												},
												{
													"key": "beneId",
													"value": "cillum aute ea"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "quis non Lorem amet",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"identifier\": \"cillum aute ea\",\n \"templateData\": {\n  \"beneData\": {\n   \"beneSpecific\": {\n    \"accountHolderName\": \"et non minim\",\n    \"classification\": \"Business\",\n    \"accountNumber\": \"IPHSZYM9BO2E2DB2K5RL119ILYXV09KV6KMY5TFVTU9\",\n    \"localAccountNumber\": \"aute esse sint\",\n    \"phoneNumber\": \"pariatur ea enim Duis\",\n    \"emailAddress\": \"esse fugiat veniam anim\"\n   },\n   \"address\": {\n    \"country\": \"BV\",\n    \"region\": \"amet mag\",\n    \"city\": \"enim ex magna\",\n    \"addressLine1\": \"et pr\",\n    \"addressLine2\": \"est id dolore ullamco magna\",\n    \"postalCode\": \"tempor ipsum mollit\"\n   }\n  },\n  \"bankData\": {\n   \"bankSpecific\": {\n    \"name\": \"aliquip nisi e\",\n    \"routingCode\": \"ut\",\n    \"localRoutingCode\": \"labore magna enim\",\n    \"SWIFTBIC\": \"est magna\"\n   },\n   \"address\": {\n    \"country\": \"SN\",\n    \"region\": \"aliquip incididunt\",\n    \"city\": \"officia laborum\",\n    \"addressLine1\": \"Lorem quis in deserunt\",\n    \"addressLine2\": \"in anim est\",\n    \"postalCode\": \"culpa occaecat eiusmod voluptate enim\"\n   }\n  }\n },\n \"regulatoryData\": {\n  \"regulatoryspecific\": [\n   {\n    \"regulatory\": {\n     \"key\": \"pariatur magna tempor\",\n     \"value\": \"ullamco mollit magna exercitation\"\n    }\n   },\n   {\n    \"regulatory\": {\n     \"key\": \"tempor aliquip\",\n     \"value\": \"non dolore culpa\"\n    }\n   }\n  ]\n },\n \"paymentData\": {\n  \"paymentSpecific\": {\n   \"paymentMethod\": [\n    \"W\",\n    \"W\"\n   ],\n   \"paymentCurrency\": \"YCS\",\n   \"sendPaytracker\": true,\n   \"preferredMethod\": \"W\",\n   \"paymentReference\": \"voluptate mollit sed\",\n   \"internalPaymentAlert\": \"est\",\n   \"externalPaymentAlert\": \"Lorem irure vo\"\n  }\n }\n}"
								},
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "client_id",
												"value": "252497",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "111111",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "/api/partner/:partnerId/:clientCode/beneficiaries/:beneId",
											"path": [
												"api",
												"partner",
												":partnerId",
												":clientCode",
												"beneficiaries",
												":beneId"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}"
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												},
												{
													"key": "beneId",
													"value": "ApiCADBene",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Oct 2020 21:06:02 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "3156"
										},
										{
											"key": "Content-Length",
											"value": "1315"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"identifier\": \"ApiCADBene\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"new testing bene\",\n                    \"accountNumber\": \"46565464777\",\n                    \"localAccountNumber\": \"\",\n                    \"classification\": \"Individual\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"region\": \"Alberta\",\n                    \"city\": \"ACME\",\n                    \"addressLine1\": \"testfdgf-update\",\n                    \"addressLine2\": \"\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"The Bank of Nova Scotia\",\n                    \"currency\": \"CAD\",\n                    \"routingCode\": \"000201339\",\n                    \"localRoutingCode\": \"\",\n                    \"SWIFTBIC\": \"NOSCCATTXXX\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"Region\": \"Alberta\",\n                    \"City\": \"CALGARY\",\n                    \"addressLine1\": \"2850 Sunridge Blvd, NE\",\n                    \"addressLine2\": \"\"\n                }\n            }\n        },\n        \"regulatoryData\": {\n            \"regulatoryFields\": {\n                \"regulatory\": {\n                    \"label\": null,\n                    \"values\": null\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": \"W\",\n                \"sendPaytracker\": \"false\",\n                \"preferredMethod\": \"W\",\n                \"paymentreference\": \"\",\n                \"externalPayment\": \"\"\n            }\n        }\n    }\n]"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "client_id",
												"value": "252497",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "111111",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "/partner/:partnerId/:clientCode/beneficiaries/:beneId",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"beneficiaries",
												":beneId"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}"
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												},
												{
													"key": "beneId",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Oct 2020 21:04:06 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "18346"
										},
										{
											"key": "Content-Length",
											"value": "456"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timeStamp\": \"2020-10-14T21:04:06.969Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": null,\n    \"errorCode\": \"400\",\n    \"errorType\": \"APIKIT:BAD_REQUEST\",\n    \"description\": \"\\\"Invalid value '<string>' for uri parameter beneId. cvc-elt.1.a: Cannot find the declaration of element 'string'.\\\"\",\n    \"errorClass\": \"org.mule.module.apikit.api.exception.InvalidUriParameterException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"cc1acd90-0e60-11eb-898f-122027ceb96f\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "client_id",
												"value": "252497",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "111111",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "/partner/:partnerId/:clientCode/beneficiaries/:beneId",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"beneficiaries",
												":beneId"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}"
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												},
												{
													"key": "beneId",
													"value": "testdemobeneINR2",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Wed, 14 Oct 2020 21:04:42 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "3355"
										},
										{
											"key": "Content-Length",
											"value": "363"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timeStamp\": \"2020-10-14T21:04:42.097Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": \"Not Found\",\n    \"errorCode\": \"404\",\n    \"errorType\": \"HTTP:NOT_FOUND\",\n    \"description\": [],\n    \"errorClass\": \"org.mule.extension.http.api.request.validator.ResponseValidatorTypedException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"e0f53e30-0e60-11eb-898f-122027ceb96f\"\n}"
								}
							]
						},
						{
							"name": "Delete Bene",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "<string>",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/beneficiaries/:beneId",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"beneficiaries",
										":beneId"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "<string>"
										},
										{
											"key": "clientCode",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "beneId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "This deletes the beneficiary.  \nProvide the {beneId} in the header."
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "/partner/:partnerId/:clientCode/beneficiaries/:beneId",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"beneficiaries",
												":beneId"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}"
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												},
												{
													"key": "beneId",
													"value": "testdemobeneINR_example",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 16:41:49 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "16611"
										},
										{
											"key": "Content-Length",
											"value": "21"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"advance\": null\n}"
								}
							]
						}
					],
					"description": "All endpoints that require the beneId to produce responses. \nThis includes the \nCreate,\nView (individual Bene templates) and\nDelete.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "List All Benes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>",
								"description": "(Required) "
							},
							{
								"key": "client_id",
								"value": "252497",
								"type": "text",
								"disabled": true
							},
							{
								"key": "client_secret",
								"value": "111111",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "/partner/:partnerId/:clientCode/beneficiaries",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"beneficiaries"
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "clientCode",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "This GET method retrieves all active beneficiaries on the account."
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "client_id",
										"value": "252497",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "111111",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "/api/partner/:partnerId/:clientCode/beneficiaries",
									"path": [
										"api",
										"partner",
										":partnerId",
										":clientCode",
										"beneficiaries"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Wed, 14 Oct 2020 19:41:31 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "15061"
								},
								{
									"key": "Content-Length",
									"value": "99885"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"identifier\": \"ApiGBPBene\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"new testing bene\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"ACME\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"The Bank of Nova Scotia\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"CALGARY\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"ApiEURBene\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"new testing bene\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"ACME\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"The Bank of Nova Scotia\",\n                    \"currency\": \"EUR\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"CALGARY\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"ApiUSDBene\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"new testing bene\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"ACME\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"The Bank of Nova Scotia\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"CALGARY\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"ApiCADBene\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"new testing bene\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"ACME\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"The Bank of Nova Scotia\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"CALGARY\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"testdemobeneINR7\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"john\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"State Bank of India\",\n                    \"currency\": \"INR\"\n                },\n                \"address\": {\n                    \"Country\": \"IN\",\n                    \"City\": \"Kochi\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"E\",\n                        \"text\": \"iACH\"\n                    }\n                ],\n                \"paymentreference\": \"\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"testdemobeneINR6\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Joe\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"State Bank of India\",\n                    \"currency\": \"INR\"\n                },\n                \"address\": {\n                    \"Country\": \"IN\",\n                    \"City\": \"Kochi\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"E\",\n                        \"text\": \"iACH\"\n                    }\n                ],\n                \"paymentreference\": \"\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Testing\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Testing\"\n                },\n                \"address\": {\n                    \"country\": \"AE\",\n                    \"city\": \"ABU DHABI\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"ARAB AFRICAN INTERNATIONAL BANK\",\n                    \"currency\": \"AED\"\n                },\n                \"address\": {\n                    \"Country\": \"AE\",\n                    \"City\": \"ABU DHABI\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"fake\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"fake\"\n                },\n                \"address\": {\n                    \"country\": \"SE\",\n                    \"city\": \"AHUS\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"\",\n                    \"currency\": \"SEK\"\n                },\n                \"address\": {\n                    \"Country\": \"SE\",\n                    \"City\": \"\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    },\n                    {\n                        \"id\": \"E\",\n                        \"text\": \"iACH\"\n                    }\n                ],\n                \"paymentreference\": \"\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"I\",\n                    \"text\": \"Incomplete\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"fake\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"fake\"\n                },\n                \"address\": {\n                    \"country\": \"GB\",\n                    \"city\": \"(NORTH EAST WALES GROUP)\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"GB\",\n                    \"City\": \"\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    },\n                    {\n                        \"id\": \"E\",\n                        \"text\": \"iACH\"\n                    }\n                ],\n                \"paymentreference\": \"\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"I\",\n                    \"text\": \"Incomplete\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"beneMiami\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"john\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"State Bank of India\",\n                    \"currency\": \"INR\"\n                },\n                \"address\": {\n                    \"Country\": \"IN\",\n                    \"City\": \"Kochi\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"E\",\n                        \"text\": \"iACH\"\n                    }\n                ],\n                \"paymentreference\": \"\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"testdemobeneINR5\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Joe\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"State Bank of India\",\n                    \"currency\": \"INR\"\n                },\n                \"address\": {\n                    \"Country\": \"IN\",\n                    \"City\": \"Kochi\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"E\",\n                        \"text\": \"iACH\"\n                    }\n                ],\n                \"paymentreference\": \"\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"f477fa509222480d8e2250bab3b58fec\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"john\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"State Bank of India\",\n                    \"currency\": \"INR\"\n                },\n                \"address\": {\n                    \"Country\": \"IN\",\n                    \"City\": \"Kochi\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"E\",\n                        \"text\": \"iACH\"\n                    }\n                ],\n                \"paymentreference\": \"\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene12\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene2\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"EUR\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"ID1234\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Eric Chan\"\n                },\n                \"address\": {\n                    \"country\": \"RU\",\n                    \"city\": \"MOSCOW\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"BASHINVESTBANK\",\n                    \"currency\": \"RUB\"\n                },\n                \"address\": {\n                    \"Country\": \"RU\",\n                    \"City\": \"MOSCOW\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"200041\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene2\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"EUR\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"202845515\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"FIRMA ALBERT COLLETT\"\n                },\n                \"address\": {\n                    \"country\": \"NO\",\n                    \"city\": \"BANGUSND\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"DANSKE BANK\",\n                    \"currency\": \"NOK\"\n                },\n                \"address\": {\n                    \"Country\": \"NO\",\n                    \"City\": \"-\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"E\",\n                        \"text\": \"iACH\"\n                    }\n                ],\n                \"paymentreference\": \"\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"I\",\n                    \"text\": \"Incomplete\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene11\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene1\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene13\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene3\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"EUR\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene14\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene5\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene15\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene6\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene16\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene7\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene17\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene8\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene18\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene9\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene19\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene10\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene20\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene5\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene21\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene6\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene22\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene7\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene23\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene8\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene24\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene9\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene25\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene10\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene26\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene5\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene27\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene6\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene28\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene7\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene29\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene8\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene30\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene9\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene31\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene10\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene32\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene5\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene33\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene6\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene34\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene7\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene35\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene8\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene36\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene9\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene37\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene10\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene38\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene5\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene39\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene6\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene40\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene7\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene41\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene8\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene42\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene9\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene43\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene10\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene44\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene5\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene45\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene6\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene46\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene7\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene47\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene8\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene48\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene9\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene49\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene10\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene50\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene5\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene51\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene6\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene52\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene7\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene53\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene8\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene54\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene9\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene55\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene10\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene56\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene5\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene57\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene6\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene58\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene7\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene59\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene8\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene60\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene9\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene61\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene10\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene62\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene5\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene63\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene6\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene64\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene7\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene65\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene8\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene66\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene9\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene67\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene10\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene68\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene5\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene69\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene6\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene70\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene7\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene71\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene8\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene72\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene9\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene73\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene10\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene74\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene5\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene75\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene6\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene76\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene7\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene77\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene8\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene78\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene9\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene79\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene10\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene80\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene5\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene81\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene6\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene82\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene7\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene83\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene8\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene84\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene9\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene85\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene10\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene86\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene5\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene87\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene6\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene88\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene7\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene89\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene8\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene90\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene9\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene91\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene10\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene92\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene5\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"USD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene93\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene6\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene94\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene7\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"GBP\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    },\n    {\n        \"identifier\": \"Test Bene95\",\n        \"templateData\": {\n            \"beneData\": {\n                \"beneSpecific\": {\n                    \"accountHolderName\": \"Test Bene8\"\n                },\n                \"address\": {\n                    \"country\": \"CA\",\n                    \"city\": \"Toronto\"\n                }\n            },\n            \"bankData\": {\n                \"bankSpecific\": {\n                    \"name\": \"Bene Bank\",\n                    \"currency\": \"CAD\"\n                },\n                \"address\": {\n                    \"Country\": \"CA\",\n                    \"City\": \"Toronto\"\n                }\n            }\n        },\n        \"paymentData\": {\n            \"paymentSpecific\": {\n                \"paymentMethod\": [\n                    {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    }\n                ],\n                \"paymentreference\": \"Default Reference sdasdasd asdasdasd asdasdasd asdasdasd dasdasd dasdasdas as asdasddasdasdasd asdasdasd dasdasdas dasdasdasd asdasdasd asdasdasd dasdasdasd asdasdasd a dasdasdasdasdasd dasdasdasasdasdasdcdasdsa dasdasdas dasd dasd a hfgjhgf jhgfhfgeytret\"\n            },\n            \"status\": [\n                {\n                    \"id\": \"A\",\n                    \"text\": \"Active\"\n                }\n            ]\n        }\n    }\n]"
						}
					]
				}
			],
			"description": "The endpoints in this section are used to create functional beneficiary templates that comply with all country-specific regulatory requirements.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Remitter",
			"item": [
				{
					"name": "View Remitter",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "/partner/:partnerId/:clientCode/remitters/:uniqueRemitterId",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"remitters",
								":uniqueRemitterId"
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "clientCode",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "uniqueRemitterId",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "This call retrieves the details of a remitter.\n\n**Note:** The URL is exactly the same as `PUT` [Create/Edit Remitter](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#5dacf4ec-dff0-4752-81da-68cf8e1b80e6), which creates or modifies a remitter, but this is a `GET` call rather than a `PUT`."
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}"
									},
									{
										"key": "client_id",
										"value": "252497",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "111111",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/remitter/:uniqueRemitterId",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"remitter",
										":uniqueRemitterId"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										},
										{
											"key": "uniqueRemitterId",
											"value": "00801OSCXZATTZNAZNC2",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Wed, 14 Oct 2020 21:09:38 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "6978"
								},
								{
									"key": "Content-Length",
									"value": "273"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"classification\": \"Corporation\",\n    \"name\": \"Pathways Travel Consultants\",\n    \"address\": {\n        \"addressLine1\": \"1810 Embarcadero Rd.\",\n        \"addressLine2\": \"Suite 100\",\n        \"city\": \"Palo Alto\",\n        \"province\": \"CA\",\n        \"countryISO2\": \"US\",\n        \"postalCode\": \"94303\"\n    }\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}"
									},
									{
										"key": "client_id",
										"value": "252497",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "111111",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/remitter/:uniqueRemitterId",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"remitter",
										":uniqueRemitterId"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										},
										{
											"key": "uniqueRemitterId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Wed, 14 Oct 2020 21:08:49 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "16053"
								},
								{
									"key": "Content-Length",
									"value": "466"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2020-10-14T21:08:49.208Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": null,\n    \"errorCode\": \"400\",\n    \"errorType\": \"APIKIT:BAD_REQUEST\",\n    \"description\": \"\\\"Invalid value '<string>' for uri parameter uniqueRemitterId. cvc-elt.1.a: Cannot find the declaration of element 'string'.\\\"\",\n    \"errorClass\": \"org.mule.module.apikit.api.exception.InvalidUriParameterException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"745d4be0-0e61-11eb-898f-122027ceb96f\"\n}"
						},
						{
							"name": "404 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}"
									},
									{
										"key": "client_id",
										"value": "252497",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "111111",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/remitter/:uniqueRemitterId",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"remitter",
										":uniqueRemitterId"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										},
										{
											"key": "uniqueRemitterId",
											"value": "32",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Wed, 14 Oct 2020 21:09:17 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "8490"
								},
								{
									"key": "Content-Length",
									"value": "363"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2020-10-14T21:09:17.037Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": \"Not Found\",\n    \"errorCode\": \"404\",\n    \"errorType\": \"HTTP:NOT_FOUND\",\n    \"description\": [],\n    \"errorClass\": \"org.mule.extension.http.api.request.validator.ResponseValidatorTypedException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"84cb1390-0e61-11eb-898f-122027ceb96f\"\n}"
						}
					]
				},
				{
					"name": "Create/Edit Remitter",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>",
								"description": "(Required) "
							}
						],
						"url": {
							"raw": "/partner/:partnerId/:clientCode/remitters/:uniqueRemitterId",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"remitters",
								":uniqueRemitterId"
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "clientCode",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "uniqueRemitterId",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "The PUT method is used for better error handling due to idempotency of PUT requests. The URL query string contains the Remitter ID, which must be unique. You can either use GUID as it has very low chance of collision, your own hash, or some deterministic prefix to make sure it is unique.\r\n\r\n##### REQUEST BODY\r\n\r\n\r\n<table style=\"width:100%\">\r\n  <tr>\r\n    <th align=\"left\">Parameter</th>\r\n    <th align=\"left\">Description</th>\r\n  </tr>\r\n  <tr>\r\n    <td>classification</td>\r\n    <td><b>string (required)</b><br />Can be 'individual' or 'corporation'.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>name</td>\r\n    <td><b>string (required)</b><br />The full name of the remitter.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>address.addressLine1</td>\r\n    <td><b>string (required)</b><br />The first line of the remitter's address.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>address.addressLine2</td>\r\n    <td><b>string (optional)</b><br />The second line of the remitter's address.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>address.city</td>\r\n    <td><b>string (required)</b><br />The remitter's city.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>address.province</td>\r\n    <td><b>string (required)</b><br />The remitter's province.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>address.countryISO2</td>\r\n    <td><b>string (required)</b><br />The remitter's two-letter ISO country code.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>address.postalCode</td>\r\n    <td><b>string (required for Canada or the United States)</b><br />The remitter's postal code.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>bankName</td>\r\n    <td><b>string (optional)</b><br />The remitter's bank name.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>bankCode</td>\r\n    <td><b>string (optional)</b><br />The remitter's bank code.</td>\r\n  </tr>\r\n</table>"
					},
					"response": [
						{
							"name": "201 response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"classification\" : \"individual\",\r\n  \"name\":\"john doe\",\r\n  \"address\" : {\r\n    \"addressLine1\":\"12321 st\",\r\n     \"addressLine2\":\"unit 56\",\r\n     \"city\":\"ottawa\",\r\n     \"province\":\"ontario\",\r\n    \"countryISO2\":\"CA\",\r\n    \"postalCode\":\"mt56u8\"\r\n  },\r\n  \"bankName\" : \"TestBank\",\r\n  \"bankCode\" : \"3324234234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/partner/:partnerId/:clientCode/remitter/:uniqueRemitterId",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"remitter",
										":uniqueRemitterId"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										},
										{
											"key": "uniqueRemitterId",
											"value": "remitter_exampleAPI",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 16:48:44 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "514"
								},
								{
									"key": "Content-Length",
									"value": "47"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"uniqueRemitterId\": \"remitter_exampleAPI\"\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"classification\" : \"individual\",\r\n  \"name\":\"\",\r\n  \"address\" : {\r\n    \"addressLine1\":\"12321 st\",\r\n     \"addressLine2\":\"unit 56\",\r\n     \"city\":\"ottawa\",\r\n     \"province\":\"ontario\",\r\n    \"countryISO2\":\"CA\",\r\n    \"postalCode\":\"mt56u8\"\r\n  },\r\n  \"bankName\" : \"TestBank\",\r\n  \"bankCode\" : \"3324234234\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/partner/:partnerId/:clientCode/remitter/:uniqueRemitterId",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"remitter",
										":uniqueRemitterId"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										},
										{
											"key": "uniqueRemitterId",
											"value": "remitter_exampleAPI",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 16:49:32 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "13020"
								},
								{
									"key": "Content-Length",
									"value": "471"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2020-10-15T16:49:32.296Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": \"Bad Request\",\n    \"errorCode\": \"400\",\n    \"errorType\": \"HTTP:BAD_REQUEST\",\n    \"description\": [\n        {\n            \"key\": \"NameRequired\",\n            \"type\": \"input\",\n            \"message\": \"Remitter name is required\"\n        }\n    ],\n    \"errorClass\": \"org.mule.extension.http.api.request.validator.ResponseValidatorTypedException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"661a4470-0f06-11eb-898f-122027ceb96f\"\n}"
						}
					]
				}
			],
			"description": "Remitters are used when a payment is initiated by a third party. This endpoint allows you to create the remitters that can then be attached to payments.\r\n\r\nSimilar to the POST Create/Edit Bene call, the PUT method is used for better error handling due to idempotency of PUT requests. The URL query string contains the Remitter ID, which must be unique. You can either use GUID as it has very low chance of collision, your own hash, or some deterministic prefix to make sure it is unique."
		},
		{
			"name": "Quote",
			"item": [
				{
					"name": "Quote Details",
					"item": [
						{
							"name": "View Quote",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "<string>",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/quotes/:quoteId",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"quotes",
										":quoteId"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "quoteId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "When you run the Spot Rate call `POST` [Spot Quote](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#46b2e579-fc60-458a-9a8e-d9c8c8714121), a resource is created that contains the conversion and quote information. This endpoint returns the resource details.\n\n* * *\n\n##### RESPONSE BODY\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>payment.currency</td><td>Currency of the payment.</td></tr><tr><td>payment.amount</td><td>Amount of the payment.</td></tr><tr></tr><tr><td>settlement.currency</td><td>Currency of the settlement.</td></tr><tr><td>settlement.amount</td><td>Amount of the settlement.</td></tr><tr><td>rate.value</td><td>The result of the 'lockside' amount and the operation 'type' (as either a <i>multiple</i> or a <i>quotient</i>).</td></tr><tr><td>rate.rateType</td><td>The currency pair used in the rate calculation.<br><b>Note:</b> The second currency in the pair is the more major of the two in Corpay's internal ranking.</td></tr></tbody></table>"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "/partner/:partnerId/:clientCode/quote/:quoteId",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"quote",
												":quoteId"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}",
													"description": "(Required) "
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												},
												{
													"key": "quoteId",
													"value": "633a17847f2643bd84174cd231b0fbf2",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 16:57:51 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "13827"
										},
										{
											"key": "Content-Length",
											"value": "163"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"paymentCurrency\": \"CAD\",\n    \"paymentAmount\": \"100\",\n    \"settlementCurrency\": \"USD\",\n    \"settlementAmount\": \"76.28\",\n    \"value\": \"1.3109\",\n    \"rateType\": \"USDCAD\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "/partner/:partnerId/:clientCode/quote/:quoteId",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"quote",
												":quoteId"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}",
													"description": "(Required) "
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												},
												{
													"key": "quoteId",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 16:56:45 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "19827"
										},
										{
											"key": "Content-Length",
											"value": "457"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timeStamp\": \"2020-10-15T16:56:45.431Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": null,\n    \"errorCode\": \"400\",\n    \"errorType\": \"APIKIT:BAD_REQUEST\",\n    \"description\": \"\\\"Invalid value '<string>' for uri parameter quoteId. cvc-elt.1.a: Cannot find the declaration of element 'string'.\\\"\",\n    \"errorClass\": \"org.mule.module.apikit.api.exception.InvalidUriParameterException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"684e4600-0f07-11eb-898f-122027ceb96f\"\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "/partner/:partnerId/:clientCode/quote/:quoteId",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"quote",
												":quoteId"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}",
													"description": "(Required) "
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												},
												{
													"key": "quoteId",
													"value": "12",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 16:57:20 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "4954"
										},
										{
											"key": "Content-Length",
											"value": "363"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timeStamp\": \"2020-10-15T16:57:20.452Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": \"Not Found\",\n    \"errorCode\": \"404\",\n    \"errorType\": \"HTTP:NOT_FOUND\",\n    \"description\": [],\n    \"errorClass\": \"org.mule.extension.http.api.request.validator.ResponseValidatorTypedException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"7d177890-0f07-11eb-898f-122027ceb96f\"\n}"
								}
							]
						}
					],
					"description": "These particular endpoints require the {quoteId}\n\n*   Post - will book the quote you requested in the `POST` \\[quote\\] endpoint\n*   Get - will retrieve a specific quote associated with that {quoteId}",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "List All Quotes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>",
								"description": "(Required) "
							}
						],
						"url": {
							"raw": "/partner/:partnerId/:clientCode/quotes",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"quotes"
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "clientCode",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "This call lists all the 'Get Rate' requests – `POST` [Spot Quote](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#46b2e579-fc60-458a-9a8e-d9c8c8714121) – in chronological order. Even though the retrieved quotes may not have been booked, they still appear in this list."
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "client_id",
										"value": "252497",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "111111",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/quote",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"quote"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Wed, 14 Oct 2020 21:12:04 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "1621"
								},
								{
									"key": "Content-Length",
									"value": "3774"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"paymentCurrency\": \"USD\",\n        \"paymentAmount\": \"8999\",\n        \"settlementCurrency\": \"CAD\",\n        \"settlementAmount\": \"12294.4300\",\n        \"value\": \"1.3662\",\n        \"rateType\": \"USDCAD\"\n    },\n    {\n        \"paymentCurrency\": \"USD\",\n        \"paymentAmount\": \"2000\",\n        \"settlementCurrency\": \"CAD\",\n        \"settlementAmount\": \"2732.4000\",\n        \"value\": \"1.3662\",\n        \"rateType\": \"USDCAD\"\n    },\n    {\n        \"paymentCurrency\": \"USD\",\n        \"paymentAmount\": \"1000\",\n        \"settlementCurrency\": \"CAD\",\n        \"settlementAmount\": \"1366.3400\",\n        \"value\": \"1.36634\",\n        \"rateType\": \"USDCAD\"\n    },\n    {\n        \"paymentCurrency\": \"USD\",\n        \"paymentAmount\": \"1000\",\n        \"settlementCurrency\": \"CAD\",\n        \"settlementAmount\": \"1366.3400\",\n        \"value\": \"1.36634\",\n        \"rateType\": \"USDCAD\"\n    },\n    {\n        \"paymentCurrency\": \"USD\",\n        \"paymentAmount\": \"1000\",\n        \"settlementCurrency\": \"CAD\",\n        \"settlementAmount\": \"1366.3400\",\n        \"value\": \"1.36634\",\n        \"rateType\": \"USDCAD\"\n    },\n    {\n        \"paymentCurrency\": \"USD\",\n        \"paymentAmount\": \"1000\",\n        \"settlementCurrency\": \"CAD\",\n        \"settlementAmount\": \"1366.3400\",\n        \"value\": \"1.36634\",\n        \"rateType\": \"USDCAD\"\n    },\n    {\n        \"paymentCurrency\": \"GBP\",\n        \"paymentAmount\": \"10000\",\n        \"settlementCurrency\": \"CAD\",\n        \"settlementAmount\": \"17431.4000\",\n        \"value\": \"1.74314\",\n        \"rateType\": \"GBPCAD\"\n    },\n    {\n        \"paymentCurrency\": \"USD\",\n        \"paymentAmount\": \"1000\",\n        \"settlementCurrency\": \"CAD\",\n        \"settlementAmount\": \"1366.3400\",\n        \"value\": \"1.36634\",\n        \"rateType\": \"USDCAD\"\n    },\n    {\n        \"paymentCurrency\": \"USD\",\n        \"paymentAmount\": \"1000\",\n        \"settlementCurrency\": \"CAD\",\n        \"settlementAmount\": \"1366.2000\",\n        \"value\": \"1.3662\",\n        \"rateType\": \"USDCAD\"\n    },\n    {\n        \"paymentCurrency\": \"EUR\",\n        \"paymentAmount\": \"34371.3600\",\n        \"settlementCurrency\": \"USD\",\n        \"settlementAmount\": \"40794.6800\",\n        \"value\": \"1.18688\",\n        \"rateType\": \"EURUSD\"\n    },\n    {\n        \"paymentCurrency\": \"EUR\",\n        \"paymentAmount\": \"34371.3600\",\n        \"settlementCurrency\": \"USD\",\n        \"settlementAmount\": \"40794.6800\",\n        \"value\": \"1.18688\",\n        \"rateType\": \"EURUSD\"\n    },\n    {\n        \"paymentCurrency\": \"EUR\",\n        \"paymentAmount\": \"34371.3600\",\n        \"settlementCurrency\": \"USD\",\n        \"settlementAmount\": \"40794.6800\",\n        \"value\": \"1.18688\",\n        \"rateType\": \"EURUSD\"\n    },\n    {\n        \"paymentCurrency\": \"CAD\",\n        \"paymentAmount\": \"1000\",\n        \"settlementCurrency\": \"USD\",\n        \"settlementAmount\": \"762.8300\",\n        \"value\": \"1.3109\",\n        \"rateType\": \"USDCAD\"\n    },\n    {\n        \"paymentCurrency\": \"CAD\",\n        \"paymentAmount\": \"1000\",\n        \"settlementCurrency\": \"USD\",\n        \"settlementAmount\": \"762.8300\",\n        \"value\": \"1.3109\",\n        \"rateType\": \"USDCAD\"\n    },\n    {\n        \"paymentCurrency\": \"CAD\",\n        \"paymentAmount\": \"1000\",\n        \"settlementCurrency\": \"USD\",\n        \"settlementAmount\": \"762.8300\",\n        \"value\": \"1.3109\",\n        \"rateType\": \"USDCAD\"\n    },\n    {\n        \"paymentCurrency\": \"CAD\",\n        \"paymentAmount\": \"1000\",\n        \"settlementCurrency\": \"USD\",\n        \"settlementAmount\": \"762.8300\",\n        \"value\": \"1.3109\",\n        \"rateType\": \"USDCAD\"\n    },\n    {\n        \"paymentCurrency\": \"EUR\",\n        \"paymentAmount\": \"44371.3600\",\n        \"settlementCurrency\": \"USD\",\n        \"settlementAmount\": \"52663.4800\",\n        \"value\": \"1.18688\",\n        \"rateType\": \"EURUSD\"\n    },\n    {\n        \"paymentCurrency\": \"EUR\",\n        \"paymentAmount\": \"44371.3600\",\n        \"settlementCurrency\": \"USD\",\n        \"settlementAmount\": \"52663.4800\",\n        \"value\": \"1.18688\",\n        \"rateType\": \"EURUSD\"\n    },\n    {\n        \"paymentCurrency\": \"EUR\",\n        \"paymentAmount\": \"44371.3600\",\n        \"settlementCurrency\": \"USD\",\n        \"settlementAmount\": \"52663.4800\",\n        \"value\": \"1.18688\",\n        \"rateType\": \"EURUSD\"\n    },\n    {\n        \"paymentCurrency\": \"CAD\",\n        \"paymentAmount\": \"1000\",\n        \"settlementCurrency\": \"USD\",\n        \"settlementAmount\": \"762.8300\",\n        \"value\": \"1.3109\",\n        \"rateType\": \"USDCAD\"\n    }\n]"
						}
					]
				}
			],
			"description": "This set of endpoints deals with the exchange of a currency pair. The Post endpoints allow you to fetch a rate and buy the rate by booking the currency exchange.\n\n*   Quote Rate\n*   Book Deal\n    \n\nThe other two endpoints are used to fetch rate and quote information:\n\n*   Rate Resource\n*   Quotes"
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Cancel",
					"item": [
						{
							"name": "Book Cancel Quote",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "<string>",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/orders/:ordNum/cancel/book",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"orders",
										":ordNum",
										"cancel",
										"book"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "ordNum",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "The link for Book Cancellation is provided in the response body of `POST` [Cancel Quote](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#1a41eacb-1e63-41c0-854f-af4f4cfc0094). If this endpoint is successful, an order number is granted."
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "/partner/:partnerId/:clientCode/orders/:ordNum/cancel/book",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"orders",
												":ordNum",
												"cancel",
												"book"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}",
													"description": "(Required) "
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												},
												{
													"key": "ordNum",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": "{\r\n    \"ordNum\": null\r\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "/partner/:partnerId/:clientCode/orders/:ordNum/cancel/book",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"orders",
												":ordNum",
												"cancel",
												"book"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{id}}",
													"description": "(Required) "
												},
												{
													"key": "clientCode",
													"value": "{{code}}",
													"description": "(Required) "
												},
												{
													"key": "ordNum",
													"value": "{{ordNum}}",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 17:10:28 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "16553"
										},
										{
											"key": "Content-Length",
											"value": "363"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timeStamp\": \"2020-10-15T17:10:28.923Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": \"Not Found\",\n    \"errorCode\": \"404\",\n    \"errorType\": \"HTTP:NOT_FOUND\",\n    \"description\": [],\n    \"errorClass\": \"org.mule.extension.http.api.request.validator.ResponseValidatorTypedException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"5303eaa0-0f09-11eb-898f-122027ceb96f\"\n}"
								}
							]
						},
						{
							"name": "Cancel Quote",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "<string>",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/orders/:ordNum/cancel/quotes",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"orders",
										":ordNum",
										"cancel",
										"quotes"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "ordNum",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "To use this call, you need to have an 'orderNumber', that is, you need to have booked a quote.\n\nThe endpoint uses the order number in the URL to identify the currencies and amounts of the order you want to cancel. Unlike `POST` [Spot Quote](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#46b2e579-fc60-458a-9a8e-d9c8c8714121), there is no quote resource created by calling this endpoint. This is because it uses the rate of the initial transaction.\n\nThe response contains the link to the `POST` [Book Cancel Quote](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#d8c2b8bf-3936-4edb-bb90-28b6ceff03ab).\n\n**Note:** If the client is subject to the Regulation E remittance transfer rule as required by the Dodd-Frank Wall Street Reform and Consumer Protection Act (commonly referred to as Dodd-Frank), the entire order can be cancelled without any charges if the following conditions are met:\n\n*   There is at least one payment instruction in the deal with a remitter whose classification is 'Individual'.\n*   The payment is cancelled within 30 minutes of it being booked or instructed.\n    \n\n* * *\n\n##### RESPONSE BODY\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>content.trades.originalTrade.buyAmount</td><td>Amount of the buy-side currency.</td></tr><tr><td>content.trades.originalTrade.buyCurrency</td><td>ISO currency code of the buy-side currency.</td></tr><tr><td>content.trades.originalTrade.costAmount</td><td>Amount of the sell-side currency.</td></tr><tr><td>content.trades.originalTrade.costCurrency</td><td>ISO currency code of the sell-side currency.</td></tr><tr><td>content.trades.charge.amount</td><td>The amount that is charged for carrying out the cancellation transaction (if applicable).</td></tr><tr><td>content.trades.charge.currency</td><td>The currency of the charge levied on the cancellation. The currency is the settlement currency.<br>Amount of the sell-side currency.</td></tr><tr><td>content.trades.cancelRate.value</td><td>The value of the cancellation rate.</td></tr><tr><td>content.trades.cancelRate.rateType</td><td>The currency pair used in the rate calculation.<br><b>Note:</b> The second currency in the pair is the more major of the two in Corpay's internal ranking.</td></tr></tbody></table>"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											}
										],
										"url": {
											"raw": "/partner/:partnerId/:clientCode/orders/:ordNum/cancel/quotes",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"orders",
												":ordNum",
												"cancel",
												"quotes"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}",
													"description": "(Required) "
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												},
												{
													"key": "ordNum",
													"value": "10311457",
													"description": "(Required) "
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [],
									"cookie": [],
									"body": "{\n    \"trades\": [\n        {\n            \"buyAmount\": \"1000\",\n            \"buyCurrency\": \"CAD\",\n            \"costAmount\": \"806.48\",\n            \"costCurrency\": \"USD\",\n            \"charge\": {\n                \"amount\": \"0\",\n                \"currency\": \"USD\"\n            },\n            \"cancelRate\": {\n                \"value\": \"1.23996\"\n            }\n        }\n    ],\n    \"id\": \"CR77E6553046C540CD814141572C53F296\",\n    \"expiry\": \"10\",\n    \"expiryTimestamp\": \"2021-08-19T11:56:12.7724177-04:00\"\n}"
								},
								{
									"name": "400 response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "/partner/:partnerId/:clientCode/orders/:ordNum/cancel/rate",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"orders",
												":ordNum",
												"cancel",
												"rate"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{id}}",
													"description": "(Required) "
												},
												{
													"key": "clientCode",
													"value": "{{code}}",
													"description": "(Required) "
												},
												{
													"key": "ordNum",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 17:08:22 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "2269"
										},
										{
											"key": "Content-Length",
											"value": "456"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timeStamp\": \"2020-10-15T17:08:22.991Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": null,\n    \"errorCode\": \"400\",\n    \"errorType\": \"APIKIT:BAD_REQUEST\",\n    \"description\": \"\\\"Invalid value '<string>' for uri parameter ordNum. cvc-elt.1.a: Cannot find the declaration of element 'string'.\\\"\",\n    \"errorClass\": \"org.mule.module.apikit.api.exception.InvalidUriParameterException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"08152d60-0f09-11eb-898f-122027ceb96f\"\n}"
								}
							]
						}
					],
					"description": "The cancellation workflow creates a ‘mirror-reverse’ transaction for the deal you are cancelling. For example, the cancellation of a USD/CAD spot deal is a CAD/USD transaction. When you provide the order number of the original Spot, the rest of the information is invoked (such as amounts and currencies).\n\nOrders created via Spot and Forward workflows can be cancelled.\n\nJust as the `POST` [Spot Quote](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#46b2e579-fc60-458a-9a8e-d9c8c8714121) and `POST` [Book Quote](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#9da78ce7-c373-4621-bc6c-1bd3c54f6d87) workflow has a timer, `Request Cancellation` and `Book Cancellation` also has an allotted window of time (the default is 10 seconds).\n\n**Note:** There is no timer between when you book a deal and when you can cancel it, however, we recommend that you request the cancellation within a reasonable time, taking into account currency fluctuations."
				},
				{
					"name": "View Orders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>",
								"description": "(Required) "
							}
						],
						"url": {
							"raw": "/partner/:partnerId/:clientCode/orders/:ordNum",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"orders",
								":ordNum"
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "clientCode",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "ordNum",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Allows you to view the following information for a specific order:\n\n*   'payments' - beneficiary details\n*   'settlements' - settlement details\n*   'orderDetails' - rates, amounts, trade details, etc.\n     \n***\n   \n##### RESPONSE BODY\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>quoteDetail.paymentCurrency</td><td>The currency in which the beneficiary will receive the payment.</td></tr><tr><td>quoteDetail.paymentAmount</td><td>The amount paid to the beneficiary.</td></tr><tr></tr><tr><td>quoteDetail.settlementCurrency</td><td>ISO 3 currency code of the sell-side currency.</td></tr><tr></tr><tr><td>quoteDetail.settlementAmount</td><td>Amount of the sell-side currency.</td></tr><tr><td>quoteDetail.value</td><td>The quoted amount’s all-in rate as part of the spot transaction.</td></tr><tr><td>content.rate.rateType</td><td>The currency pair used in the rate calculation.<br><b>Note:</b> The second currency in the pair is the more major of the two in Corpay's internal ranking.</td></tr><tr><td>orderDetail.valueDate</td><td>Timestamp of the deal.</td></tr><tr><td>orderDetail.paymentDetail</td><td>List of all details relating to payments: beneId, method, account</td></tr><tr><td>orderDetail.settlementDetail</td><td>List of all details relating to settlement: accountId used, method</td></tr></tbody></table>"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "<string>",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/orders/:ordNum",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"orders",
										":ordNum"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "ordNum",
											"value": "10311450",
											"description": "(Required) "
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"regEDisclosure\": {},\n    \"quoteDetail\": {\n        \"paymentCurrency\": \"GBP\",\n        \"paymentAmount\": \"332.8500\",\n        \"settlementCurrency\": \"USD\",\n        \"settlementAmount\": \"420\",\n        \"value\": \"1.2618296529968454\",\n        \"ourAction\": \"SELL\",\n        \"rateType\": \"GBPUSD\"\n    },\n    \"orderDetail\": {\n        \"valueDate\": \"2021-08-19T00:00:00\",\n        \"ordNum\": \"10311450\",\n        \"paymentDetail\": [\n            {\n                \"paymentInstructionId\": 2486209,\n                \"availableDate\": \"2021-08-23T00:00:00\",\n                \"beneId\": \"bbab5543396b460b961ea458acb655e3\",\n                \"reference\": \"34536\",\n                \"method\": \"W\",\n                \"payeeName\": \"ADP\",\n                \"payeeAccount\": \"\",\n                \"amount\": 420,\n                \"feeAmount\": 15,\n                \"feeCurrency\": \"USD\"\n            }\n        ],\n        \"settlementDetail\": [\n            {\n                \"settlementAccountId\": \"500_CHK_GBP\",\n                \"settlementMethod\": \"WIRE\",\n                \"amount\": 332.85,\n                \"currency\": \"GBP\",\n                \"accountType\": \"settlement\"\n            },\n            {\n                \"settlementAccountId\": \"INCOMING-TEST-USD\",\n                \"settlementMethod\": \"WIRE\",\n                \"amount\": 15,\n                \"currency\": \"USD\",\n                \"accountType\": \"settlement\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "200 response - with REG-E",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "<string>",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/orders/:ordNum",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"orders",
										":ordNum"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "ordNum",
											"value": "10311450",
											"description": "(Required) "
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"regEDisclosure\": {\n        \"regulatoryAgencyName\": \"\",\n        \"transferFees\": 0,\n        \"transferFeesCurr\": \"USD\",\n        \"regulatoryPhone\": null,\n        \"regulatoryEmail\": null,\n        \"regulatoryWebsite\": null,\n        \"regulatedBy\": \"State\",\n        \"regulatedState\": \"KS\",\n        \"regulatedStatePhone\": \"(785) 296-2266\",\n        \"regulatedStateEmail\": \"\",\n        \"regulatedStateWebsite\": \"http://www.osbckansas.org/banking/\",\n        \"regulatedStateAddressLine1\": \"Office of the State Bank Commissioner\",\n        \"regulatedStateAddressLine2\": \"Division of Banking\",\n        \"regulatedStateAddressLine3\": \"700 SW Jackson Street, Suite 300\",\n        \"regulatedStateAddressLine4\": \"Topeka, KS 66603\"\n    },\n    \"quoteDetail\": {\n        \"paymentCurrency\": \"GBP\",\n        \"paymentAmount\": \"332.8500\",\n        \"settlementCurrency\": \"USD\",\n        \"settlementAmount\": \"420\",\n        \"value\": \"1.2618296529968454\",\n        \"ourAction\": \"SELL\",\n        \"rateType\": \"GBPUSD\"\n    },\n    \"orderDetail\": {\n        \"valueDate\": \"2021-08-19T00:00:00\",\n        \"ordNum\": \"10311450\",\n        \"paymentDetail\": [\n            {\n                \"paymentInstructionId\": 2486209,\n                \"availableDate\": \"2021-08-23T00:00:00\",\n                \"beneId\": \"bbab5543396b460b961ea458acb655e3\",\n                \"reference\": \"34536\",\n                \"method\": \"W\",\n                \"payeeName\": \"ADP\",\n                \"payeeAccount\": \"\",\n                \"amount\": 420,\n                \"feeAmount\": 15,\n                \"feeCurrency\": \"USD\"\n            }\n        ],\n        \"settlementDetail\": [\n            {\n                \"settlementAccountId\": \"500_CHK_GBP\",\n                \"settlementMethod\": \"WIRE\",\n                \"amount\": 332.85,\n                \"currency\": \"GBP\",\n                \"accountType\": \"settlement\"\n            },\n            {\n                \"settlementAccountId\": \"INCOMING-TEST-USD\",\n                \"settlementMethod\": \"WIRE\",\n                \"amount\": 15,\n                \"currency\": \"USD\",\n                \"accountType\": \"settlement\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "400 response ",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "client_id",
										"value": "252497",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "111111",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/orders/:ordNum",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"orders",
										":ordNum"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										},
										{
											"key": "ordNum",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 14:46:49 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "15739"
								},
								{
									"key": "Content-Length",
									"value": "456"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2020-10-15T14:46:49.551Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": null,\n    \"errorCode\": \"400\",\n    \"errorType\": \"APIKIT:BAD_REQUEST\",\n    \"description\": \"\\\"Invalid value '<string>' for uri parameter ordNum. cvc-elt.1.a: Cannot find the declaration of element 'string'.\\\"\",\n    \"errorClass\": \"org.mule.module.apikit.api.exception.InvalidUriParameterException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"41948180-0ef5-11eb-898f-122027ceb96f\"\n}"
						}
					]
				},
				{
					"name": "Spot Quote",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>",
								"description": "(Required) "
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"paymentCurrency\": \"<string>\",\n    \"settlementCurrency\": \"<string>\",\n    \"amount\": \"<float>\",\n    \"lockSide\": \"<string>\"\n}"
						},
						"url": {
							"raw": "/partner/:partnerId/:clientCode/quotes",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"quotes"
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "clientCode",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "This is the first of two calls that are used to book a live rate as part of a Spot transaction. This call creates an impermanent resource based on a live exchange rate (between a currency pair). In order to secure the rate, you must book the deal (`POST` [Book Quote](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#9da78ce7-c373-4621-bc6c-1bd3c54f6d87)).\n\nThe lockside determines which side of the pair will carry the base amount. For example, for a CAD/USD spot deal, if lockside is set to the 'payment' currency (which in this case is USD), then the quoted amount will be the 'settlement' currency (or CAD in this case).\n\nAs market rates are in flux, this quote may expire before you book the deal. By default, the rate expires in 10 seconds.\n\nThe quote resource is in the response header under 'Location'. This URL is the precursor to executing the `POST` [Book Quote](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#9da78ce7-c373-4621-bc6c-1bd3c54f6d87) endpoint.\n\n* * *\n\n##### REQUEST BODY\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>paymentCurrency</td><td><b>string (required)</b><br>The three-letter ISO code for the payment currency.</td></tr><tr><td>settlementCurrency</td><td><b>string (required)</b><br>The three-letter ISO code for the settlement currency.</td></tr><tr><td>amount</td><td><b>number (required)</b><br>The amount on which to base the quote.</td></tr><tr><td>lockSide</td><td><b>string (required)</b><br>Indicates which currency to lock when the rate calculation is performed = ['Payment', 'Settlement'].</td></tr></tbody></table>\n\n##### RESPONSE BODY\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>quoteId</td><td>The unique ID assigned to the quote.</td></tr><tr><td>payment.paymentCcurrency</td><td>The three-letter ISO code for the payment currency.</td></tr><tr><td>payment.paymentAmount</td><td>Payment amount.</td></tr><tr><td>settlement.settlementCurrency</td><td>The three-letter ISO code for the settlement currency.</td></tr><tr><td>settlement.settlementAmount</td><td>Amount of the settlement.</td></tr><tr><td>rate.value</td><td>The result of applying the 'operation' type to the 'lockside' amount.</td></tr><tr><td>rate.rateType</td><td>The currency pair used in the rate calculation.<br><b>Note:</b> The second currency in the pair is the more major of the two in Corpay's internal ranking.</td></tr></tbody></table>\n\n##### IMPLEMENTATION NOTES:\n\nConsider the rate to be available for 8 seconds, and 2 for latency and other network effects. Refresh after that period of time, or there will be time out error.\n\n* * *\n\n##### SPOT RATE ERRORS\n\n<table><tbody><tr><th>Error Code</th><th>Description</th></tr><tr><td>400 Bad Request - Amount exceeds limit</td><td>This reflects the per-client threshold on allowed Spot transactions.</td></tr><tr><td>400 Bad Request - Unexpected exception</td><td>Inputting an invalid currency code will return this error.</td></tr></tbody></table>"
					},
					"response": [
						{
							"name": "201 response ",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"paymentCurrency\" : \"CAD\",\n  \"settlementCurrency\" : \"USD\",\n  \"amount\" : 100,\n  \"lockSide\" : \"Payment\",\n  \"instrument\" : \"Spot\"\n}"
								},
								"url": {
									"raw": "/partner/:partnerId/:clientCode/quote",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"quote"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 16:54:46 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "19355"
								},
								{
									"key": "Content-Length",
									"value": "305"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"quoteId\": \"633a17847f2643bd84174cd231b0fbf2\",\n    \"payment\": {\n        \"paymentCurrency\": \"CAD\",\n        \"paymentAmount\": \"100\"\n    },\n    \"settlement\": {\n        \"settlementCurrency\": \"USD\",\n        \"settlementAmount\": \"76.28\"\n    },\n    \"rate\": {\n        \"value\": \"1.3109\",\n        \"rateType\": \"USDCAD\"\n    }\n}"
						},
						{
							"name": "401 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"paymentCurrency\" : \"CAD\",\n  \"settlementCurrency\" : \"USD\",\n  \"amount\" : 100,\n  \"lockSide\" : \"Payment\",\n  \"instrument\" : \"Spot\"\n}"
								},
								"url": {
									"raw": "/partner/:partnerId/:clientCode/quote",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"quote"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 16:59:51 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "14080"
								},
								{
									"key": "Content-Length",
									"value": "471"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2020-10-15T16:59:51.269Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": \"Unauthorized\",\n    \"errorCode\": null,\n    \"errorType\": \"HTTP:UNAUTHORIZED\",\n    \"description\": \"HTTP POST on resource 'https://beta.cambridgelink.com:443/api/252497/0/quotes/spot' failed: unauthorized (401).\",\n    \"errorClass\": \"org.mule.extension.http.api.request.validator.ResponseValidatorTypedException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"d7050430-0f07-11eb-898f-122027ceb96f\"\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"paymentCurrency\" : \"CAD\",\n  \"settlementCurrency\" : \"USD\",\n  \"amount\" : 100,\n  \"lockSide\" : \"P\",\n  \"instrument\" : \"Spot\"\n}"
								},
								"url": {
									"raw": "/partner/:partnerId/:clientCode/quote",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"quote"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 16:55:27 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "17965"
								},
								{
									"key": "Content-Length",
									"value": "409"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2020-10-15T16:55:27.286Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": null,\n    \"errorCode\": \"400\",\n    \"errorType\": \"APIKIT:BAD_REQUEST\",\n    \"description\": \"/lockSide P is not a valid enum value  Location:   Position: Line 0,  Column 0\",\n    \"errorClass\": \"org.mule.module.apikit.api.exception.BadRequestException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"39bb5c60-0f07-11eb-898f-122027ceb96f\"\n}"
						}
					]
				},
				{
					"name": "Book Quote",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>",
								"description": "(Required) "
							}
						],
						"url": {
							"raw": "/partner/:partnerId/:clientCode/quotes/:quoteId/book",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"quotes",
								":quoteId",
								"book"
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "clientCode",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "quoteId",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "This is the second of two calls that are used to book a live rate as part of a Spot transaction. This call uses the 'quoteId' returned by the `POST` [Spot Quote](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#46b2e579-fc60-458a-9a8e-d9c8c8714121) call to book a deal using the quoted rate.\n\n**Important:** The quote obtained from `POST` [Spot Quote](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#46b2e579-fc60-458a-9a8e-d9c8c8714121) is valid for 10 seconds, after which it expires. If you do not book the deal before the rate expires, the response status will be '410 (Gone)', and you will need to generate a new quote.  \n  \n\n* * *\n\n##### IMPLEMENTATION NOTES:\n\nMake sure to append the `/book` at the end of the resource.\n\n* * *\n\n##### BOOK DEAL ERRORS\n\n<table><tbody><tr><th>Error Code</th><th>Description</th></tr><tr><td>200 OK - Previously booked URL</td><td>The quoteID has already been booked so it can't be booked again. Returns: \"token\": \"00000000-0000-0000-0000-000000000000\"</td></tr><tr><td>404 Not Found Invalid URL invoked</td><td>The 'Rate Resource' URL is incorrect. Either it has already been booked or it does not exist. This is the format: {{Rate Resource URL}}/book</td></tr><tr><td>410 Gone - Call sent after rate expired</td><td>The rate generated by the <b>POST</b> request expires after 10 seconds.</td></tr></tbody></table>"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "client_id",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/quote/:quoteId/book",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"quote",
										":quoteId",
										"book"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										},
										{
											"key": "quoteId",
											"value": "88210608e7384af79a57d3996dbc3f33",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 17:02:59 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "0"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "5884"
								},
								{
									"key": "Content-Length",
									"value": "26"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"ordNum\": \"10056056\"\n}"
						},
						{
							"name": "404 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "client_id",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/quote/:quoteId/book",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"quote",
										":quoteId",
										"book"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										},
										{
											"key": "quoteId",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 17:01:29 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "16222"
								},
								{
									"key": "Content-Length",
									"value": "360"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2020-10-15T17:01:29.024Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": null,\n    \"errorCode\": \"404\",\n    \"errorType\": \"APIKIT:NOT_FOUND\",\n    \"description\": \"/partner/erictest1/252497/quote//book\",\n    \"errorClass\": \"org.mule.module.apikit.exception.NotFoundException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"1158f650-0f08-11eb-898f-122027ceb96f\"\n}"
						}
					]
				},
				{
					"name": "Instruct",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>",
								"description": "(Required) "
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\r\n----spot instruct POST----\r\n{\r\n    \"orders\": [ \r\n        {\r\n        \"ordNum\": \"10041836\",\r\n\t\t\"amount\" : 100\r\n        }\r\n\t],\t\r\n        \"payments\": [\r\n           {\r\n                \"beneficiaryId\": \"testtestv5\",\r\n\t\t\t\t\"amount\": 100,\r\n\t\t\t\t\"currency\": \"INR\",\r\n\t\t\t\t\"method\": \"W\",\r\n                \"purposeOfPayment\":\"fxvx\",\r\n\t\t\t\t\"remitterId\": \"00801OSCXZATTZNAZNC2\"\r\n\r\n            }\r\n\t\t],\r\n        \"settlements\":[\r\n\t\t\t{\r\n\t\t\t    \"accountId\":\"INCOMING-TEST-USD\" ,\r\n                \"method\":\"W\",\r\n                \"currency\":\"USD\",\r\n                \"purpose\" : \"Spot\"\r\n\t        }  \r\n\t\t\t\t\r\n\t\t\t    \r\n\t\t]\t\r\n    \r\n}   ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/partner/:partnerId/:clientCode/orders/:ordNum/instruct",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"orders",
								":ordNum",
								"instruct"
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "clientCode",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "ordNum",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Once the Spot Transaction has been booked, you can instruct the funds to a beneficiary or to an internal holding balance (this is specified in the 'payment' portion of this payload).\n\nThe settlement funds (the 'settlement' portion) can come from a bank account or from a holding balance. This call also specifies which settlement account to use for fees. In most cases, the account designated for fees contains the base currency (for example, if you are located in Canada, your fee settlement account will be a CAD account).\n\nThe total instructed amount does not have to equal the amount exchanged during the Spot Transaction, but it cannot exceed that amount.\n\n---\n\n##### REQUEST BODY\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>orders.orderNum</td><td><b>string (required)</b><br>Number of the deal to which the payment and settlement instructions should be applied.</td></tr><tr><td>orders.amount</td><td><b>number (required)</b><br>Payment amount.</td></tr><tr><td>payments.beneficiaryId</td><td><b>string (required)</b><br>Identifier of the beneficiary/FXBalance where the payment will be sent. Value can be either 'clientIntegrationId' or 'id' (which is returned by <b>GET</b><a href=\"https://documenter.getpostman.com/view/5203630/UVR4PAbZ#9eba62f9-d534-4c07-99ab-01443efc8e38\">View Bene</a>.</td></tr><tr><td>payments.amount</td><td><b>number (required)</b><br>Payment amount. This number must match the value in orders.amount.</td></tr><tr><td>payments.currency</td><td><b>string (required)</b><br>Three-letter ISO code for the payment currency.</td></tr><tr><td>payments.method</td><td><p><b>string (required)</b><br>Method to use to send the payment = ['W', 'E', 'C'].<br></p><ul><li><p>'W' = Wire</p></li><li><p>'E' = EFT</p></li><li><p>'C' = FXBalance</p></li></ul></td></tr><tr><td>payments.purposeOfPayment</td><td><b>string (required)</b><br>The purpose of payment.</td></tr><tr><td>payments.Reference</td><td><b>string (optional)</b><br>Reference to be included with the payment, for example, purchase order number or invoice number.</td></tr><tr><td>payments.remitterId</td><td><b>string (optional)</b><br>Identifier of the remitter on whose behalf the payment is being made.</td></tr><tr><td>settlements.accountId</td><td><b>string (required)</b><br>Settlement account identifier.</td></tr><tr><td>settlements.method</td><td><p><b>string (required)</b><br>Method to use to settle the deal = ['W', 'E', 'C'].<br></p><ul><li><p>'W' = Wire</p></li><li><p>'E' = EFT</p></li><li><p>'C' = FXBalance</p></li></ul></td></tr><tr><td>settlements.currency</td><td><b>string (required)</b><br>Three-letter ISO code for the settlement account currency.</td></tr><tr><td>settlements.purpose</td><td><b>string (required)</b><br>The reason for the settlement = ['All', 'Allocation', 'Fee', 'Spot', 'SpotTrade', 'Drawdown'].</td></tr></tbody></table>\n\n##### RESPONSE BODY\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>valueDate</td><td>Order value date.</td></tr><tr></tr><tr><td>payments.availableDate</td><td>The date when the payment will be received by the beneficiary.</td></tr><tr><td>payments.feeAmount</td><td>The amount of the fee levied on the payment.</td></tr><tr><td>payments.feeCurrency</td><td>Currency of the fee.</td></tr><tr><td>payments.estimateCostAmount</td><td>The cost of the settlement currency.</td></tr><tr><td>payments.method</td><td><p>Method to use to send the payment. Possible values returned = ['W', 'E', 'C'].</p><ul><li><p>'W' = Wire</p></li><li><p>'E' = EFT</p></li><li><p>'C' = FXBalance</p></li></ul></td></tr><tr><td>payments.payeeName</td><td>The name of the beneficiary/account where the payment will be sent.</td></tr><tr><td>payments.amount</td><td>The amount paid to the beneficiary.</td></tr><tr><td>payments.currency</td><td>The currency in which the beneficiary will receive the payment.</td></tr><tr><td>payments.paymentInstructionId</td><td>Internal Identifier of the Payment Instruction. Different from the Deal and/or Order Numbers.</td></tr><tr><td>payments.beneId</td><td>The beneficiary's 'id' found in the <b>GET</b><a href=\"https://documenter.getpostman.com/view/5203630/UVR4PAbZ#9eba62f9-d534-4c07-99ab-01443efc8e38\">View Bene</a>endpoint.</td></tr><tr><td>payments.reference</td><td>Payment references carried on from the 'Reference' field</td></tr><tr><td>orderDetail.entryDate</td><td>The date of transaction entry</td></tr><tr><td>orderDetail.ordNum</td><td>The unique Number associated with the transaction</td></tr><tr><td>orderDetail.buy</td><td>The buy-side currency.</td></tr><tr><td>orderDetail.buyAmount</td><td>Amount of the buy-side</td></tr><tr><td>orderDetail.sell</td><td>The sell-side currency.</td></tr><tr><td>orderDetail.sellAmount</td><td>Amount of the sell-side</td></tr><tr><td>orderDetail.exchange</td><td>The quoted amount’s all-in rate as part of the spot transaction.</td></tr></tbody></table>\n\n##### INSTRUCT DEAL ERRORS\n\n<table><tbody><tr><th>Error Code</th><th>Description</th></tr><tr><td>400 Bad Request - Improper settlement account / wrong 'deliveryMethod'</td><td>Either the client does not have permission to settle with this account type, or the account identifier invoked is incorrect.</td></tr><tr><td>400 Bad Request - Improper bene / wrong 'deliveryMethod'</td><td><p>Could be one of the following:</p><ul><li><p>The identifier of the beneficiary invoked is incorrect (the 'clientIntegrationId' or 'id').</p></li><li><p>The bene does not exist (therefore the 'id' or 'clientIntegrationId' that you are using is invalid).</p></li></ul></td></tr><tr><td>400 Bad Request - Invalid / already-instructed Order Number</td><td>The order number has already been instructed or it doesn't belong to your account.</td></tr><tr><td>400 Bad Request - Amount exceeds Spot balance</td><td>The order does not contain the funds available to pay the beneficiary. A top-up is not possible.</td></tr></tbody></table>"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"orders\": [ \r\n        {\r\n        \"ordNum\": \"10718352\",\r\n        \"amount\" : 1000\r\n        }\r\n    ],  \r\n        \"payments\": [\r\n           {\r\n                \"beneficiaryId\": \"Vendor CA\",\r\n                \"amount\": 1000,\r\n                \"currency\": \"CAD\",\r\n                \"method\": \"W\",\r\n                \"purposeOfPayment\":\"Purchase of Good(s)\",\r\n                \"Reference\":\"Invoice 001\",\r\n                \"remitterId\": \"\"\r\n            }\r\n        ],\r\n        \"settlements\":[\r\n            {\r\n                \"accountId\":\"INCOMINGUSD\" ,\r\n                \"method\":\"W\",\r\n                \"currency\":\"USD\",\r\n                \"purpose\" : \"Spot\"\r\n            }\r\n        ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/partner/:partnerId/:clientCode/orders/:ordNum/instruct",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"orders",
										":ordNum",
										"instruct"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										},
										{
											"key": "ordNum",
											"value": "10056061",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 17:27:24 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "2350"
								},
								{
									"key": "Content-Length",
									"value": "462"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"valueDate\": \"2022-10-04T00:00:00\",\n    \"payments\": [\n        {\n            \"availableDate\": \"2022-10-05T00:00:00\",\n            \"feeAmount\": \"0\",\n            \"feeCurrency\": \"\",\n            \"estimateCostAmount\": \"0\",\n            \"method\": \"W\",\n            \"payeeName\": \"Vendor Canada\",\n            \"amount\": 1000.0000,\n            \"currency\": \"CAD\",\n            \"paymentInstructionId\": 2927127,\n            \"beneId\": \"a2c043c1b01041a5b8f7a23bfd08ed05\",\n            \"reference\": \"Invoice 001\"\n        }\n    ],\n    \"orderDetail\": {\n        \"entryDate\": \"2022-10-03T14:42:26.94\",\n        \"ordNum\": \"10718352\",\n        \"buy\": \"USD\",\n        \"buyAmount\": \"775.0600\",\n        \"sell\": \"CAD\",\n        \"sellAmount\": \"1000\",\n        \"exchange\": \"1.29022\"\n    }\n}"
						},
						{
							"name": "404 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"orders\": [ \r\n        {\r\n        \"ordNum\": \"10056061\",\r\n\t\t\"amount\" : 10000\r\n        }\r\n\t],\t\r\n        \"payments\": [\r\n           {\r\n                \"beneficiaryId\": \"testtestv5\",\r\n\t\t\t\t\"amount\": 10000,\r\n\t\t\t\t\"currency\": \"INR\",\r\n\t\t\t\t\"method\": \"W\",\r\n                \"purposeOfPayment\":\"fxvx\",\r\n\t\t\t\t\"remitterId\": \"00801OSCXZATTZNAZNC2\"\r\n\r\n            }\r\n\t\t],\r\n        \"settlements\":[\r\n\t\t\t{\r\n\t\t\t    \"accountId\":\"INCOMING-TEST-USD\" ,\r\n                \"method\":\"W\",\r\n                \"currency\":\"USD\",\r\n                \"purpose\" : \"Spot\"\r\n\t        }  \r\n\t\t\t\t\r\n\t\t\t    \r\n\t\t]\t\r\n    \r\n}         ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/partner/:partnerId/:clientCode/orders/:ordNum/instruct",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"orders",
										":ordNum",
										"instruct"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										},
										{
											"key": "ordNum",
											"value": "",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 17:26:04 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "291"
								},
								{
									"key": "Content-Length",
									"value": "362"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2020-10-15T17:26:04.955Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": null,\n    \"errorCode\": \"404\",\n    \"errorType\": \"APIKIT:NOT_FOUND\",\n    \"description\": \"/partner/252497/252497/orders//instruct\",\n    \"errorClass\": \"org.mule.module.apikit.exception.NotFoundException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"81122900-0f0b-11eb-898f-122027ceb96f\"\n}"
						},
						{
							"name": "403 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"orders\": [ \r\n        {\r\n        \"ordNum\": \"10056061\",\r\n\t\t\"amount\" : 10000\r\n        }\r\n\t],\t\r\n        \"payments\": [\r\n           {\r\n                \"beneficiaryId\": \"\",\r\n\t\t\t\t\"amount\": 10000,\r\n\t\t\t\t\"currency\": \"INR\",\r\n\t\t\t\t\"method\": \"W\",\r\n                \"purposeOfPayment\":\"fxvx\",\r\n\t\t\t\t\"remitterId\": \"00801OSCXZATTZNAZNC2\"\r\n\r\n            }\r\n\t\t],\r\n        \"settlements\":[\r\n\t\t\t{\r\n\t\t\t    \"accountId\":\"INCOMING-TEST-USD\" ,\r\n                \"method\":\"W\",\r\n                \"currency\":\"USD\",\r\n                \"purpose\" : \"Spot\"\r\n\t        }  \r\n\t\t\t\t\r\n\t\t\t    \r\n\t\t]\t\r\n    \r\n}         ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/partner/:partnerId/:clientCode/orders/:ordNum/instruct",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"orders",
										":ordNum",
										"instruct"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										},
										{
											"key": "ordNum",
											"value": "10056061",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 17:27:03 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "2267"
								},
								{
									"key": "Content-Length",
									"value": "577"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2020-10-15T17:27:03.042Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": \"Forbidden\",\n    \"errorCode\": null,\n    \"errorType\": \"HTTP:FORBIDDEN\",\n    \"description\": [\n        {\n            \"key\": \"permission\",\n            \"type\": \"system\",\n            \"message\": \"User [30553] does not have permission [CanPayThisBene {}]\"\n        },\n        {\n            \"key\": \"ErrorID\",\n            \"type\": \"input\",\n            \"message\": \"\"\n        }\n    ],\n    \"errorClass\": \"org.mule.extension.http.api.request.validator.ResponseValidatorTypedException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"a3a7eb80-0f0b-11eb-898f-122027ceb96f\"\n}"
						},
						{
							"name": "500 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"orders\": [ \r\n        {\r\n        \"ordNum\": \"10056061\",\r\n\t\t\"amount\" : 100\r\n        }\r\n\t],\t\r\n        \"payments\": [\r\n           {\r\n                \"beneficiaryId\": \"testtestv5\",\r\n\t\t\t\t\"amount\": 10000,\r\n\t\t\t\t\"currency\": \"INR\",\r\n\t\t\t\t\"method\": \"W\",\r\n                \"purposeOfPayment\":\"fxvx\",\r\n\t\t\t\t\"remitterId\": \"00801OSCXZATTZNAZNC2\"\r\n\r\n            }\r\n\t\t],\r\n        \"settlements\":[\r\n\t\t\t{\r\n\t\t\t    \"accountId\":\"INCOMING-TEST-USD\" ,\r\n                \"method\":\"W\",\r\n                \"currency\":\"USD\",\r\n                \"purpose\" : \"Spot\"\r\n\t        }  \r\n\t\t\t\t\r\n\t\t\t    \r\n\t\t]\t\r\n    \r\n}         ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/partner/:partnerId/:clientCode/orders/:ordNum/instruct",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"orders",
										":ordNum",
										"instruct"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										},
										{
											"key": "ordNum",
											"value": "10056061",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 17:26:33 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "12113"
								},
								{
									"key": "Content-Length",
									"value": "609"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2020-10-15T17:26:33.551Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": \"Internal Server Error\",\n    \"errorCode\": 500,\n    \"errorType\": \"HTTP:INTERNAL_SERVER_ERROR\",\n    \"description\": [\n        {\n            \"key\": \"OPERATION_FAILED\",\n            \"type\": \"input\",\n            \"message\": \"Unexpected exception\"\n        },\n        {\n            \"key\": \"ErrorID\",\n            \"type\": \"input\",\n            \"message\": \"2021-a028ef1b-9f2f-4ed4-9a42-55a40eb57bbf\"\n        }\n    ],\n    \"errorClass\": \"org.mule.extension.http.api.request.validator.ResponseValidatorTypedException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"91ddc820-0f0b-11eb-898f-122027ceb96f\"\n}"
						}
					]
				}
			],
			"description": "These set of endpoints are specific to the transmission of that exchanged currency to a beneficiary or a holding balance.  \nPost endpoint is the instruction of the booked order  \nGet endpoint\n\nLookup Orders\n\nThe other set of endpoints are specific to cancelling a booked order\n\nThe cancellation workflow creates a ‘mirror-reverse’ transaction for the deal you are cancelling. For example, the cancellation of a USD/CAD spot deal is a CAD/USD transaction. When you provide the order number of the original Spot, the rest of the information is invoked (such as amounts and currencies).\n\nOrders created via Spot and Forward workflows can be cancelled.\n\nJust as the POST Spot Rate and POST Book Deal workflow has a timer, Request Cancellation and Book Cancellation also has an allotted window of time (the default is 10 seconds).\n\n**Note:** There is no timer between when you book a deal and when you can cancel it; however, we recommend that you request the cancellation within a reasonable time, taking into account currency fluctuations."
		},
		{
			"name": "Forwards",
			"item": [
				{
					"name": "Forward Details",
					"item": [
						{
							"name": "View Forward Quote",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "<string>",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/forwardQuote/:quoteId",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"forwardQuote",
										":quoteId"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "quoteId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "This call returns details about the forward quote requested in the previous call `POST` [Forward Quote](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#32b729a0-88a3-42b5-86d7-64f77b6ce387).  \nIf the Response is empty and the status code is '410 Gone', this means that the quote has expired.\n\n* * *\n\n##### RESPONSE BODY\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>payment.currency</td><td>Currency of the payment.</td></tr><tr><td>payment.amount</td><td>Amount of the payment.</td></tr><tr></tr><tr><td>settlement.currency</td><td>Currency of the settlement.</td></tr><tr><td>settlement.amount</td><td>Amount of the settlement.</td></tr><tr><td>rate.value</td><td>The result of the 'lockside' amount and the operation 'type' (as either a <i>multiple</i> or a <i>quotient</i>).</td></tr><tr><td>rate.rateType</td><td>The currency pair used in the rate calculation.<br><b>Note:</b> The second currency in the pair is the more major of the two in Corpay's internal ranking.</td></tr></tbody></table>"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "/partner/:partnerId/:clientCode/forwardQuote/:quoteId",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"forwardQuote",
												":quoteId"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}",
													"description": "(Required) "
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												},
												{
													"key": "quoteId",
													"value": "e20a4cd8acd9441a9b999d3159208fb3",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 21:10:15 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "9719"
										},
										{
											"key": "Content-Length",
											"value": "161"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"paymentCurrency\": \"CAD\",\n    \"paymentAmount\": \"1000\",\n    \"settlementCurrency\": \"USD\",\n    \"settlementAmount\": \"763.07\",\n    \"value\": \"1.310491\",\n    \"rateType\": \"\"\n}"
								}
							]
						}
					],
					"description": "The ordNum is the alpha-numeric transaction identifier. It is same as the deal number except that it is prefixed with 'OFD' (i.e. ‘OFD40123456’). The forwardId/paymentInstructionId is the numeric forward identifier (i.e. ‘1386511’). The quoteId is the identifier of the forward quote rate resource (i.e. 'cc2999ba7eb84e19a158a8bf0f21296e')"
				},
				{
					"name": "Forward Quote",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>",
								"description": "(Required) "
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"quoteRequest\": {\n        \"paymentCurrency\": \"<string>\",\n        \"settlementCurrency\": \"<string>\",\n        \"amount\": \"<float>\",\n        \"lockSide\": \"<string>\"\n    },\n    \"forwardRequest\": {\n        \"forwardType\": \"<string>\",\n        \"maturityDate\": \"<string>\",\n        \"openDateFrom\": \"<string>\"\n    }\n}"
						},
						"url": {
							"raw": "/partner/:partnerId/:clientCode/forwardQuotes",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"forwardQuotes"
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "clientCode",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "This endpoint and the following two calls must be submitted in quick succession within the allotted time (default, but adjustable, 10 second window).\n\n* * *\n\n##### REQUEST BODY\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>quote.paymentCurrency</td><td><b>string (required)</b><br>Three-letter ISO code for the currency being bought.</td></tr><tr><td>quote.settelementCurrency</td><td><b>string (required)</b><br>Three-letter ISO code for the settlement-side currency.</td></tr><tr><td>quote.amount</td><td><b>number (required)</b><br>The amount of currency locked into the forward agreement.</td></tr><tr><td>quote.lockSide</td><td><b>string (required)</b><br>Indicates which currency should be locked when the rate calculation is performed = ['payment', 'settlement'].</td></tr><tr><td>forwardDetails.forwardType</td><td><b>string (required)</b><br>Contract type is determined according to business needs. Possible values = ['C', closed contract; 'O', open contract].</td></tr><tr><td>forwardDetails.maturityDate</td><td><b>string (required)</b><br>The date of forward maturity, formatted as <i>yyyy-mm-dd</i>.</td></tr><tr><td>forwardDetails.OpenDateFrom</td><td><b>string (required if 'forwardType': 'O')</b><br>Applies only to Open Forwards.</td></tr></tbody></table>\n\n##### RESPONSE BODY\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>quoteId</td><td>The unique ID assigned to the quote.</td></tr><tr><td>payment.paymentCcurrency</td><td>The three-letter ISO code for the payment currency.</td></tr><tr><td>payment.paymentAmount</td><td>Payment amount.</td></tr><tr><td>settlement.settlementCurrency</td><td>The three-letter ISO code for the settlement currency.</td></tr><tr><td>settlement.settlementAmount</td><td>Amount of the settlement.</td></tr><tr><td>rate.value</td><td>The result of applying the 'operation' type to the 'lockside' amount.</td></tr><tr><td>rate.rateType</td><td>The currency pair used in the rate calculation.<br><b>Note:</b> The second currency in the pair is the more major of the two in Corpay's internal ranking.</td></tr></tbody></table>\n\n##### REQUEST FORWARD QUOTE ERRORS\n\n<table><tbody><tr><th>Error Code</th><th>Description</th></tr><tr><td>400 Bad Request - Inputted Buy Currency is not available</td><td>\"buyCurrency\" is not available as a Corpay-offered currency.</td></tr></tbody></table>"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"quote\" : {\n    \"paymentCurrency\" : \"CAD\",\n    \"settlementCurrency\" : \"USD\",\n    \"amount\" : 1000,\n    \"lockSide\" : \"Payment\"\n  },\n  \"forwardDetails\" : {\n    \"forwardType\" : \"O\",\n    \"maturityDate\" : \"2020-11-02\",\n    \"openDateFrom\" : \"2020-10-15\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/partner/:partnerId/:clientCode/forwardQuote",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"forwardQuote"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 17:55:04 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "478"
								},
								{
									"key": "Content-Length",
									"value": "311"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"quoteId\": \"7bdca495905a4e5d8997c1964190b82b\",\n    \"payment\": {\n        \"paymentCurrency\": \"CAD\",\n        \"paymentAmount\": \"1000.0\"\n    },\n    \"settlement\": {\n        \"settlementCurrency\": \"USD\",\n        \"settlementAmount\": \"763.07\"\n    },\n    \"rate\": {\n        \"value\": \"1.310491\",\n        \"rateType\": \"USDCAD\"\n    }\n}"
						},
						{
							"name": "400 response - holiday check",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"quoteRequest\" : {\n    \"paymentCurrency\" : \"CAD\",\n    \"settlementCurrency\" : \"USD\",\n    \"amount\" : 1000,\n    \"lockSide\" : \"Payment\"\n  },\n  \"forwardRequest\" : {\n    \"forwardType\" : \"O\",\n    \"maturityDate\" : \"2020-10-31\",\n    \"openDateFrom\" : \"2020-10-15\"\n  }\n}"
								},
								"url": {
									"raw": "/partner/:partnerId/:clientCode/forwardQuote",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"forwardQuote"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 17:53:21 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "3599"
								},
								{
									"key": "Content-Length",
									"value": "598"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2020-10-15T17:53:21.754Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": \"Bad Request\",\n    \"errorCode\": \"400\",\n    \"errorType\": \"HTTP:BAD_REQUEST\",\n    \"description\": [\n        {\n            \"key\": \"WeekendHolidayCheck\",\n            \"type\": \"input\",\n            \"message\": \"The maturity date is not valid. The next valid date is 2020-11-02\"\n        },\n        {\n            \"key\": \"ErrorID\",\n            \"type\": \"input\",\n            \"message\": \"\"\n        }\n    ],\n    \"errorClass\": \"org.mule.extension.http.api.request.validator.ResponseValidatorTypedException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"509d8a40-0f0f-11eb-898f-122027ceb96f\"\n}"
						},
						{
							"name": "401 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"quote\" : {\n    \"paymentCurrency\" : \"CAD\",\n    \"settlementCurrency\" : \"USD\",\n    \"amount\" : 1000,\n    \"lockSide\" : \"Payment\"\n  },\n  \"forwardDetails\" : {\n    \"forwardType\" : \"\",\n    \"maturityDate\" : \"2020-08-05\",\n    \"openDateFrom\" : \"2020-07-05\"\n  }\n}"
								},
								"url": {
									"raw": "/partner/:partnerId/:clientCode/forwardQuote",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"forwardQuote"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 17:33:18 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "6471"
								},
								{
									"key": "Content-Length",
									"value": "474"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2020-10-15T17:33:18.955Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": \"Unauthorized\",\n    \"errorCode\": null,\n    \"errorType\": \"HTTP:UNAUTHORIZED\",\n    \"description\": \"HTTP POST on resource 'https://beta.cambridgelink.com:443/api/252497/0/quotes/forward' failed: unauthorized (401).\",\n    \"errorClass\": \"org.mule.extension.http.api.request.validator.ResponseValidatorTypedException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"83a588a0-0f0c-11eb-898f-122027ceb96f\"\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"quoteRequest\" : {\n    \"paymentCurrency\" : \"CAD\",\n    \"settlementCurrency\" : \"USD\",\n    \"amount\" : 1000,\n    \"lockSide\" : \"Payment\"\n  },\n  \"forwardDetails\" : {\n    \"forwardType\" : \"\",\n    \"maturityDate\" : \"2020-08-05\",\n    \"openDateFrom\" : \"2020-07-05\"\n  }\n}"
								},
								"url": {
									"raw": "/partner/:partnerId/:clientCode/forwardQuote",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"forwardQuote"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 17:34:23 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "1708"
								},
								{
									"key": "Content-Length",
									"value": "679"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2020-10-15T17:34:23.612Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": \"Bad Request\",\n    \"errorCode\": \"400\",\n    \"errorType\": \"HTTP:BAD_REQUEST\",\n    \"description\": [\n        {\n            \"key\": \"MaturityDate\",\n            \"type\": \"input\",\n            \"message\": \"The MaturityDate field is required.\"\n        },\n        {\n            \"key\": \"ForwardType\",\n            \"type\": \"input\",\n            \"message\": \"The ForwardType field is required.\"\n        },\n        {\n            \"key\": \"ErrorID\",\n            \"type\": \"input\",\n            \"message\": \"\"\n        }\n    ],\n    \"errorClass\": \"org.mule.extension.http.api.request.validator.ResponseValidatorTypedException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"aa3fe370-0f0c-11eb-898f-122027ceb96f\"\n}"
						}
					]
				},
				{
					"name": "Book Forward Quote",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>"
							}
						],
						"url": {
							"raw": "/partner/:partnerId/:clientCode/forwardQuotes/:quoteId/book",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"forwardQuotes",
								":quoteId",
								"book"
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "clientCode",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "quoteId",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "This is the final of three endpoints that books the rate and amount in question. \r\nIf the content in the Response is empty and the status code is '410 Gone', this means that the quote has expired.\r\nThe Response – if successful – includes the 'orderNumber'."
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}"
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/forwardQuote/:quoteId/book",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"forwardQuote",
										":quoteId",
										"book"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										},
										{
											"key": "quoteId",
											"value": "e20a4cd8acd9441a9b999d3159208fb3",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 21:08:47 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "17516"
								},
								{
									"key": "Content-Length",
									"value": "53"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"ordNum\": \"OFD10056079\",\n    \"forwardId\": \"28422\"\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}"
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/forwardQuote/:quoteId/book",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"forwardQuote",
										":quoteId",
										"book"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										},
										{
											"key": "quoteId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 21:07:55 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "9550"
								},
								{
									"key": "Content-Length",
									"value": "457"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2020-10-15T21:07:55.726Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": null,\n    \"errorCode\": \"400\",\n    \"errorType\": \"APIKIT:BAD_REQUEST\",\n    \"description\": \"\\\"Invalid value '<string>' for uri parameter quoteId. cvc-elt.1.a: Cannot find the declaration of element 'string'.\\\"\",\n    \"errorClass\": \"org.mule.module.apikit.api.exception.InvalidUriParameterException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"7ee3e640-0f2a-11eb-898f-122027ceb96f\"\n}"
						}
					]
				},
				{
					"name": "Complete Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>",
								"description": "(Required) "
							}
						],
						"url": {
							"raw": "/partner/:partnerId/:clientCode/forwards/:forwardID/completeOrder",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"forwards",
								":forwardID",
								"completeOrder"
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "clientCode",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "forwardID",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "This is the final step of the forward process and it completes the order. \r\n<br />\r\n\r\n----\r\n<br />\r\n\r\n##### REQUEST BODY\r\n\r\n<table style=\"width:100%\">\r\n  <tr>\r\n    <th align=\"left\">Parameter</th>\r\n    <th align=\"left\">Description</th>\r\n  </tr>\r\n  <tr>\r\n    <td>settlementAccount</td>\r\n    <td><b>string (required)</b><br />The settlement account.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>forwardReference</td>\r\n    <td><b>string (optional)</b><br />Any comments or reference information related to the forward.</td>\r\n  </tr>\r\n</table>"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"settlementAccount\": \"INCOMING-TEST-USD\",\r\n \"reference\":\"dfasdf\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/partner/:partnerId/:clientCode/forwards/:forwardID/completeOrder",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"forwards",
										":forwardID",
										"completeOrder"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										},
										{
											"key": "forwardID",
											"value": "28422",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 21:15:21 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "0"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "3715"
								},
								{
									"key": "Content-Length",
									"value": "53"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"forwardId\": \"28422\",\n    \"ordNum\": \"OFD10056079\"\n}"
						},
						{
							"name": "404 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"description": "(Required) "
									},
									{
										"key": "client_id",
										"value": "{{id}}",
										"type": "text",
										"disabled": true
									},
									{
										"key": "client_secret",
										"value": "{{secret}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n \"settlementAccount\": \"INCOMING-TEST-USD\",\r\n \"reference\":\"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/partner/:partnerId/:clientCode/forwards/:forwardID/completeOrder",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"forwards",
										":forwardID",
										"completeOrder"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}",
											"description": "(Required) "
										},
										{
											"key": "forwardID",
											"value": "28422",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Date",
									"value": "Thu, 15 Oct 2020 21:16:06 GMT"
								},
								{
									"key": "Server",
									"value": "nginx"
								},
								{
									"key": "x-ratelimit-limit",
									"value": "2"
								},
								{
									"key": "x-ratelimit-remaining",
									"value": "1"
								},
								{
									"key": "x-ratelimit-reset",
									"value": "18928"
								},
								{
									"key": "Content-Length",
									"value": "363"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2020-10-15T21:16:06.448Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": \"Not Found\",\n    \"errorCode\": \"404\",\n    \"errorType\": \"HTTP:NOT_FOUND\",\n    \"description\": [],\n    \"errorClass\": \"org.mule.extension.http.api.request.validator.ResponseValidatorTypedException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"a3530730-0f2b-11eb-898f-122027ceb96f\"\n}"
						}
					]
				}
			],
			"description": "Forward trades allow you to lock into a specific exchange rate. You can then draw down against the forward to make payments at a future date.\n\nForward Contracts are an effective way to hedge against foreign exchange fluctuations by locking in the current FX rate, and then settling that rate and amount at a future date. There are two types of forward agreements: Closed Forwards and Open Forwards.\n\nA Closed Forward lets you lock in the current exchange rate and receive foreign currency funds on a specified future date (also known as the maturity date). This type of contract requires you to complete the transaction on the date it expires (the Maturity Date) at the agreed rate of exchange. A Closed Forward is settled in its entirety on the maturity date. With an Open Forward, you also lock in the current exchange rate for a future date value and settlement, but unlike a Closed Forward, you can draw down the funds at any time within the specified period. You do not need to wait until the maturity date. All the drawdowns are processed at the agreed upon rate. The trade can be settled either in full or in part as long as the full amount has been paid by the maturity date."
		},
		{
			"name": "Forward Orders/Drawdowns",
			"item": [
				{
					"name": "Drawdowns",
					"item": [
						{
							"name": "View Drawdown",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/forwards/drawdowns",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"forwards",
										"drawdowns"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "This endpoint returns information about all your forwards. It displays forwards that are available now, those that will be available at a future date, and those that are incomplete. You can draw down funds from any of the forwards that have the status 'Available'.\r\n<br />\r\n\r\n----\r\n<br />\r\n\r\n##### RESPONSE BODY\r\n\r\n\r\n<table style=\"width:100%\">\r\n  <tr>\r\n    <th align=\"left\">Parameter</th>\r\n    <th align=\"left\">Description</th>\r\n  </tr>\r\n  <tr>\r\n    <td>data.rows.forwardId</td>\r\n    <td>An ID assigned to the forward when it was booked.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>data.rows.currency</td>\r\n    <td>The currency that you purchased.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>data.rows.ordNum</td>\r\n    <td>The system assigned deal number.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>data.rows.statusDesc</td>\r\n    <td>Indicates whether the forward can be drawn down.<ul><li>Available = The funds are available and you can use the funds to create payments.</li><li>Available in <i>x</i> days = The funds will be available in the specified number of days.</li><li>Incomplete = The forward in not complete. Usually this means that all of the required information has not been submitted.</li></ul></td>\r\n  </tr>\r\n  <tr>\r\n    <td>data.rows.dealDate</td>\r\n    <td>The date you booked the forward.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>data.rows.openFrom</td>\r\n    <td>The first date that you can start drawing down against the booked forward.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>data.rows.maturityDate</td>\r\n    <td>For open forwards, this is the last date when you draw down funds. For closed forwards, this is the date when the funds become available for use.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>data.rows.availableBalance</td>\r\n    <td>This is the amount of the forward that is available to use. If you have already drawn down funds against this forward, this is the remailing balance.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>data.rows.rate</td>\r\n    <td>The rate of exchange at which the forward was booked.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>data.rows.costCurrency</td>\r\n    <td>The currency with which the forward was settled. </td>\r\n  </tr>\r\n  <tr>\r\n    <td>data.rows.costAmount</td>\r\n    <td>The amount that was required to settle the forward.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>data.rows.createdBy</td>\r\n    <td>The name of the person who created the forward.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>data.rows.amount</td>\r\n    <td>The amount of the forward.</td>\r\n  </tr>\r\n</table>"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}"
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "/partner/:partnerId/:clientCode/forwards/drawdowns",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"forwards",
												"drawdowns"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}",
													"description": "(Required) "
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 16:36:14 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "11624"
										},
										{
											"key": "Content-Length",
											"value": "44458"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"forwardId\": \"28313\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10055005\",\n        \"statusDesc\": \"Unavailable\",\n        \"dealDate\": \"2020-10-01T00:00:00\",\n        \"openFrom\": \"2020-12-11T00:00:00\",\n        \"maturityDate\": \"2021-01-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.308712\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"764.1100\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28339\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10055406\",\n        \"statusDesc\": \"Available in 5 day(s)\",\n        \"dealDate\": \"2020-10-06T00:00:00\",\n        \"openFrom\": \"2020-10-20T00:00:00\",\n        \"maturityDate\": \"2020-11-27T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.30975\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"763.5000\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28372\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10055479\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-10-06T15:29:01.247\",\n        \"openFrom\": \"2020-10-20T00:00:00\",\n        \"maturityDate\": \"2020-11-27T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.30975\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"763.5000\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28315\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10055009\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-10-01T17:48:46.237\",\n        \"openFrom\": \"2020-10-01T00:00:00\",\n        \"maturityDate\": \"2020-11-27T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.309646\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"763.5700\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28314\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10055008\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-10-01T17:34:59.64\",\n        \"openFrom\": \"2020-10-01T00:00:00\",\n        \"maturityDate\": \"2020-11-27T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.309646\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"763.5700\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28395\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10055744\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-10-12T00:00:00\",\n        \"openFrom\": \"2020-10-12T00:00:00\",\n        \"maturityDate\": \"2020-10-26T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.366325\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1366.3200\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28396\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10055748\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-10-12T00:00:00\",\n        \"openFrom\": \"2020-10-12T00:00:00\",\n        \"maturityDate\": \"2020-10-26T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.366325\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1366.3200\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28399\",\n        \"currency\": \"EUR\",\n        \"ordNum\": \"OFD10055839\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-10-13T00:00:00\",\n        \"openFrom\": \"2020-10-13T00:00:00\",\n        \"maturityDate\": \"2020-10-22T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.590599\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1590.6000\",\n        \"createdBy\": \"Sanjeev Jain\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28400\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10055841\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-10-13T00:00:00\",\n        \"openFrom\": \"2020-10-13T00:00:00\",\n        \"maturityDate\": \"2020-10-22T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.366325\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1366.3200\",\n        \"createdBy\": \"Sanjeev Jain\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28401\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10055843\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-10-13T15:30:10.147\",\n        \"openFrom\": \"2020-10-22T00:00:00\",\n        \"maturityDate\": \"2020-10-22T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.366151\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1366.1500\",\n        \"createdBy\": \"Sanjeev Jain\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28375\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10055523\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-10-07T00:00:00\",\n        \"openFrom\": \"2020-10-07T00:00:00\",\n        \"maturityDate\": \"2020-10-20T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.366325\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1366.3200\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28376\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10055527\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-10-07T00:00:00\",\n        \"openFrom\": \"2020-10-07T00:00:00\",\n        \"maturityDate\": \"2020-10-20T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.366325\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1366.3200\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28377\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10055531\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-10-07T00:00:00\",\n        \"openFrom\": \"2020-10-07T00:00:00\",\n        \"maturityDate\": \"2020-10-20T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.366325\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1366.3200\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28378\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10055535\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-10-07T00:00:00\",\n        \"openFrom\": \"2020-10-07T00:00:00\",\n        \"maturityDate\": \"2020-10-20T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.366325\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1366.3200\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28379\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10055543\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-10-07T00:00:00\",\n        \"openFrom\": \"2020-10-07T00:00:00\",\n        \"maturityDate\": \"2020-10-20T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.366325\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1366.3200\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28380\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10055547\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-10-07T00:00:00\",\n        \"openFrom\": \"2020-10-07T00:00:00\",\n        \"maturityDate\": \"2020-10-20T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.366325\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1366.3200\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28381\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10055551\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-10-07T00:00:00\",\n        \"openFrom\": \"2020-10-07T00:00:00\",\n        \"maturityDate\": \"2020-10-20T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.366325\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1366.3200\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28382\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10055555\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-10-07T00:00:00\",\n        \"openFrom\": \"2020-10-07T00:00:00\",\n        \"maturityDate\": \"2020-10-20T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.366325\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1366.3200\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28340\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10055419\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-10-06T00:00:00\",\n        \"openFrom\": \"2020-10-06T00:00:00\",\n        \"maturityDate\": \"2020-10-19T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.366325\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1366.3200\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28341\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10055423\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-10-06T00:00:00\",\n        \"openFrom\": \"2020-10-06T00:00:00\",\n        \"maturityDate\": \"2020-10-19T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.366325\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1366.3200\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28316\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10055260\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-10-05T00:00:00\",\n        \"openFrom\": \"2020-10-05T00:00:00\",\n        \"maturityDate\": \"2020-10-19T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.366325\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1366.3200\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28317\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10055264\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-10-05T00:00:00\",\n        \"openFrom\": \"2020-10-05T00:00:00\",\n        \"maturityDate\": \"2020-10-19T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.366325\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1366.3200\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28326\",\n        \"currency\": \"INR\",\n        \"ordNum\": \"OFD10055327\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-10-05T15:27:53.603\",\n        \"openFrom\": \"2020-10-05T00:00:00\",\n        \"maturityDate\": \"2020-10-15T00:00:00\",\n        \"availableBalance\": \"10000\",\n        \"rate\": \"0.014036\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"140.3600\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"10000\"\n    },\n    {\n        \"forwardId\": \"28202\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10051618\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-09-14T00:00:00\",\n        \"openFrom\": \"2020-09-14T00:00:00\",\n        \"maturityDate\": \"2020-09-28T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1376.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28203\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10051621\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-09-14T00:00:00\",\n        \"openFrom\": \"2020-09-14T00:00:00\",\n        \"maturityDate\": \"2020-09-28T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1376.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28170\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10050827\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-08-12T00:00:00\",\n        \"openFrom\": \"2020-08-12T00:00:00\",\n        \"maturityDate\": \"2020-09-21T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1376.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28171\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10050831\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-08-12T00:00:00\",\n        \"openFrom\": \"2020-08-12T00:00:00\",\n        \"maturityDate\": \"2020-09-21T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1376.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28153\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10050186\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-08-12T00:00:00\",\n        \"openFrom\": \"2020-08-12T00:00:00\",\n        \"maturityDate\": \"2020-09-14T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1376.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28154\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10050190\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-08-12T00:00:00\",\n        \"openFrom\": \"2020-08-12T00:00:00\",\n        \"maturityDate\": \"2020-09-14T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1376.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28080\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10048985\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-08-12T00:00:00\",\n        \"openFrom\": \"2020-08-12T00:00:00\",\n        \"maturityDate\": \"2020-09-08T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1376.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28081\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10048989\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-08-12T00:00:00\",\n        \"openFrom\": \"2020-08-12T00:00:00\",\n        \"maturityDate\": \"2020-09-08T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1376.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28172\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10050865\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-08-12T00:00:00\",\n        \"openFrom\": \"2020-08-19T00:00:00\",\n        \"maturityDate\": \"2020-08-31T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321736\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.5800\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28004\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10048233\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-08-12T00:00:00\",\n        \"openFrom\": \"2020-08-12T00:00:00\",\n        \"maturityDate\": \"2020-08-31T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1376.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28201\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10051583\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-09-12T16:39:24.617\",\n        \"openFrom\": \"2020-08-25T00:00:00\",\n        \"maturityDate\": \"2020-08-31T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.308645\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"764.1500\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"28200\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10051582\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-09-12T16:30:39.31\",\n        \"openFrom\": \"2020-08-19T00:00:00\",\n        \"maturityDate\": \"2020-08-31T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.308645\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"764.1500\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27033\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10040454\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-06-22T17:21:46.943\",\n        \"openFrom\": \"2020-06-22T00:00:00\",\n        \"maturityDate\": \"2020-08-31T00:00:00\",\n        \"availableBalance\": \"10000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"13766.2800\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"10000\"\n    },\n    {\n        \"forwardId\": \"27932\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10047202\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-08-07T00:00:00\",\n        \"openFrom\": \"2020-08-07T00:00:00\",\n        \"maturityDate\": \"2020-08-24T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1376.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27933\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10047206\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-08-07T00:00:00\",\n        \"openFrom\": \"2020-08-07T00:00:00\",\n        \"maturityDate\": \"2020-08-24T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1376.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27861\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10046448\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-08-03T00:00:00\",\n        \"openFrom\": \"2020-08-03T00:00:00\",\n        \"maturityDate\": \"2020-08-17T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1376.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27862\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10046452\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-08-03T00:00:00\",\n        \"openFrom\": \"2020-08-03T00:00:00\",\n        \"maturityDate\": \"2020-08-17T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1376.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27793\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10045507\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-07-16T00:00:00\",\n        \"openFrom\": \"2020-07-16T00:00:00\",\n        \"maturityDate\": \"2020-08-10T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1376.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27794\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10045511\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-07-16T00:00:00\",\n        \"openFrom\": \"2020-07-16T00:00:00\",\n        \"maturityDate\": \"2020-08-10T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1376.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27801\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10045578\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-07-27T00:00:00\",\n        \"openFrom\": \"2020-08-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321971\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.4500\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27802\",\n        \"currency\": \"EUR\",\n        \"ordNum\": \"OFD10045588\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-07-27T00:00:00\",\n        \"openFrom\": \"2020-07-27T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"5000\",\n        \"rate\": \"1.158021\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"11580.2100\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"10000\"\n    },\n    {\n        \"forwardId\": \"27828\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10045838\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-07-28T00:00:00\",\n        \"openFrom\": \"2020-07-29T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321994\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.4300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27316\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10041842\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-06-22T00:00:00\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"900\",\n        \"rate\": \"1.321185\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.9000\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27356\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10042016\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-06-22T00:00:00\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"900\",\n        \"rate\": \"1.321185\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.9000\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27357\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10042041\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-06-22T00:00:00\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321185\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.9000\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27360\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10042065\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-06-22T00:00:00\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321185\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.9000\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27397\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10042418\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-06-22T00:00:00\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.308095\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"764.4700\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27557\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10043401\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-06-22T00:00:00\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.308095\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"764.4700\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27212\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10041299\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-06-25T17:00:13.55\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321185\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.9000\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27213\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10041300\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-06-25T17:03:29.417\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321185\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.9000\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27273\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10041690\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-06-29T12:48:56.937\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321185\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.9000\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27274\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10041691\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-06-29T12:59:03.107\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321185\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.9000\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27278\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10041701\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-06-29T13:34:53.13\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321185\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.9000\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27331\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10041928\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-06-30T12:02:40.167\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321185\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.9000\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27358\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10042060\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-07-01T11:22:36.197\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321185\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.9000\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27359\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10042064\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-07-01T11:40:27.887\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321185\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.9000\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27428\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10042611\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-07-06T20:58:52.25\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321185\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.9000\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27429\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10042612\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-07-06T21:11:48.007\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321185\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.9000\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27430\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10042613\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-07-06T21:13:22.75\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321185\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.9000\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27431\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10042614\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-07-06T21:16:22\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321185\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.9000\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27432\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10042615\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-07-06T21:48:02.983\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321185\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.9000\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27485\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10043084\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-07-08T19:00:44.48\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321185\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.9000\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27502\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10043170\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-07-09T14:19:38.333\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321185\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.9000\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27554\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10043398\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-07-11T17:29:41.113\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.308095\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"764.4700\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27555\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10043399\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-07-11T17:36:04.077\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.308095\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"764.4700\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27556\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10043400\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-07-11T17:47:22.497\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.308095\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"764.4700\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27558\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10043406\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-07-11T19:20:59.353\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.308095\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"764.4700\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27559\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10043415\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-07-12T13:21:21.127\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.308095\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"764.4700\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27827\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10045806\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-07-29T11:27:55.63\",\n        \"openFrom\": \"2020-07-29T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321994\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.4300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27593\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10043549\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-07-13T22:40:05.177\",\n        \"openFrom\": \"2020-07-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321185\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.9000\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27792\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10045490\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-07-26T23:53:19.403\",\n        \"openFrom\": \"2020-08-05T00:00:00\",\n        \"maturityDate\": \"2020-08-05T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.321713\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"756.5900\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27702\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10044752\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-07-16T00:00:00\",\n        \"openFrom\": \"2020-07-16T00:00:00\",\n        \"maturityDate\": \"2020-07-30T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1376.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27703\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10044756\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-07-16T00:00:00\",\n        \"openFrom\": \"2020-07-16T00:00:00\",\n        \"maturityDate\": \"2020-07-30T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1376.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27704\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10044785\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-07-16T00:00:00\",\n        \"openFrom\": \"2020-07-16T00:00:00\",\n        \"maturityDate\": \"2020-07-30T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1376.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27705\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10044789\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-07-16T00:00:00\",\n        \"openFrom\": \"2020-07-16T00:00:00\",\n        \"maturityDate\": \"2020-07-30T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1376.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27706\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10044791\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-07-16T00:00:00\",\n        \"openFrom\": \"2020-07-16T00:00:00\",\n        \"maturityDate\": \"2020-07-30T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1376.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27707\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10044859\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-07-16T00:00:00\",\n        \"openFrom\": \"2020-07-16T00:00:00\",\n        \"maturityDate\": \"2020-07-27T00:00:00\",\n        \"availableBalance\": \"1400\",\n        \"rate\": \"1.321924\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"1059.0600\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1400\"\n    },\n    {\n        \"forwardId\": \"27560\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10043433\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-06-22T00:00:00\",\n        \"openFrom\": \"2020-06-22T00:00:00\",\n        \"maturityDate\": \"2020-07-23T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1376.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27561\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10043437\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-06-22T00:00:00\",\n        \"openFrom\": \"2020-06-22T00:00:00\",\n        \"maturityDate\": \"2020-07-23T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.376628\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1376.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"27565\",\n        \"currency\": \"EUR\",\n        \"ordNum\": \"OFD10043469\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-07-13T13:50:13.023\",\n        \"openFrom\": \"2020-06-22T00:00:00\",\n        \"maturityDate\": \"2020-07-15T00:00:00\",\n        \"availableBalance\": \"10000\",\n        \"rate\": \"1.159154\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"11591.5400\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"10000\"\n    },\n    {\n        \"forwardId\": \"27562\",\n        \"currency\": \"EUR\",\n        \"ordNum\": \"OFD10043464\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-07-13T13:25:22.947\",\n        \"openFrom\": \"2020-06-22T00:00:00\",\n        \"maturityDate\": \"2020-07-14T00:00:00\",\n        \"availableBalance\": \"10000\",\n        \"rate\": \"1.563741\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"15637.4100\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"10000\"\n    },\n    {\n        \"forwardId\": \"27464\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10042862\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-07-07T16:26:10.127\",\n        \"openFrom\": \"2020-07-01T00:00:00\",\n        \"maturityDate\": \"2020-07-01T00:00:00\",\n        \"availableBalance\": \"2000\",\n        \"rate\": \"1.321971\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"1512.8900\",\n        \"createdBy\": \"p chan\",\n        \"amount\": \"2000\"\n    },\n    {\n        \"forwardId\": \"27032\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10040452\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-06-22T17:17:47.07\",\n        \"openFrom\": \"2020-06-22T00:00:00\",\n        \"maturityDate\": \"2020-07-01T00:00:00\",\n        \"availableBalance\": \"10000\",\n        \"rate\": \"1.499748\",\n        \"costCurrency\": \"EUR\",\n        \"costAmount\": \"6667.7900\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"10000\"\n    },\n    {\n        \"forwardId\": \"26567\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10037602\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-05-14T00:00:00\",\n        \"openFrom\": \"2020-05-25T00:00:00\",\n        \"maturityDate\": \"2020-05-25T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.436672\",\n        \"costCurrency\": \"EUR\",\n        \"costAmount\": \"696.0500\",\n        \"createdBy\": \"p chan\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"26539\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD10028329\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-04-03T00:00:00\",\n        \"openFrom\": \"2020-04-03T00:00:00\",\n        \"maturityDate\": \"2020-04-16T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.354185\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1354.1800\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"26536\",\n        \"currency\": \"GBP\",\n        \"ordNum\": \"OFD10026773\",\n        \"statusDesc\": \"Available\",\n        \"dealDate\": \"2020-03-27T00:00:00\",\n        \"openFrom\": \"2020-03-30T00:00:00\",\n        \"maturityDate\": \"2020-04-06T00:00:00\",\n        \"availableBalance\": \"13.3400\",\n        \"rate\": \"1.330333\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"17.7500\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"13.3400\"\n    },\n    {\n        \"forwardId\": \"26537\",\n        \"currency\": \"GBP\",\n        \"ordNum\": \"OFD10026788\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-03-30T14:35:21.297\",\n        \"openFrom\": \"2020-03-30T00:00:00\",\n        \"maturityDate\": \"2020-04-06T00:00:00\",\n        \"availableBalance\": \"13.3400\",\n        \"rate\": \"1.330333\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"17.7500\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"13.3400\"\n    },\n    {\n        \"forwardId\": \"26506\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD10012543\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2020-02-28T11:22:27.517\",\n        \"openFrom\": \"2020-03-10T00:00:00\",\n        \"maturityDate\": \"2020-03-10T00:00:00\",\n        \"availableBalance\": \"1500\",\n        \"rate\": \"1.436672\",\n        \"costCurrency\": \"EUR\",\n        \"costAmount\": \"1044.0800\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1500\"\n    },\n    {\n        \"forwardId\": \"26470\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD4182129\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2019-12-24T08:46:57.21\",\n        \"openFrom\": \"2019-11-28T00:00:00\",\n        \"maturityDate\": \"2019-12-06T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.354473\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1354.4700\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"26445\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD4178053\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2019-11-21T15:13:04.46\",\n        \"openFrom\": \"2019-11-19T00:00:00\",\n        \"maturityDate\": \"2019-11-28T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.300707\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"768.8100\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"26408\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD4174429\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2019-11-01T15:34:39.97\",\n        \"openFrom\": \"2019-11-01T00:00:00\",\n        \"maturityDate\": \"2019-11-20T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.354492\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1354.4900\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"26181\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD4164729\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2019-09-25T16:10:31.76\",\n        \"openFrom\": \"2019-10-03T00:00:00\",\n        \"maturityDate\": \"2019-10-03T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.354318\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"1354.3200\",\n        \"createdBy\": \"Abolore Banjo\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"16000\",\n        \"currency\": \"EUR\",\n        \"ordNum\": \"OFD4156704\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2019-08-08T15:36:50.38\",\n        \"openFrom\": \"2019-08-08T00:00:00\",\n        \"maturityDate\": \"2019-08-19T00:00:00\",\n        \"availableBalance\": \"11200\",\n        \"rate\": \"1.496574\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"16761.6300\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"11200\"\n    },\n    {\n        \"forwardId\": \"15930\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD4152225\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2019-06-24T10:11:54.267\",\n        \"openFrom\": \"2019-06-21T00:00:00\",\n        \"maturityDate\": \"2019-07-02T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.294388\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"772.5700\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"15887\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD4151465\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2019-06-12T14:20:45.31\",\n        \"openFrom\": \"2019-06-21T00:00:00\",\n        \"maturityDate\": \"2019-06-21T00:00:00\",\n        \"availableBalance\": \"1500\",\n        \"rate\": \"1.354828\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"2032.2400\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"1500\"\n    },\n    {\n        \"forwardId\": \"14827\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD4115694\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2018-09-19T09:09:46.32\",\n        \"openFrom\": \"2018-09-19T00:00:00\",\n        \"maturityDate\": \"2018-09-28T00:00:00\",\n        \"availableBalance\": \"6\",\n        \"rate\": \"1.345515\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"8.0700\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"6\"\n    },\n    {\n        \"forwardId\": \"14828\",\n        \"currency\": \"GBP\",\n        \"ordNum\": \"OFD4115697\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2018-09-19T09:59:08.527\",\n        \"openFrom\": \"2018-09-28T00:00:00\",\n        \"maturityDate\": \"2018-09-28T00:00:00\",\n        \"availableBalance\": \"45\",\n        \"rate\": \"1.731556\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"77.9200\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"45\"\n    },\n    {\n        \"forwardId\": \"14777\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD4115517\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2018-09-18T10:15:16.85\",\n        \"openFrom\": \"2018-09-27T00:00:00\",\n        \"maturityDate\": \"2018-09-27T00:00:00\",\n        \"availableBalance\": \"200\",\n        \"rate\": \"1.345341\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"269.0700\",\n        \"createdBy\": \"E C\",\n        \"amount\": \"200\"\n    },\n    {\n        \"forwardId\": \"14040\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD4110028\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2018-07-27T16:58:35.21\",\n        \"openFrom\": \"2018-07-27T00:00:00\",\n        \"maturityDate\": \"2018-09-14T00:00:00\",\n        \"availableBalance\": \"50\",\n        \"rate\": \"1.530587\",\n        \"costCurrency\": \"EUR\",\n        \"costAmount\": \"32.6700\",\n        \"createdBy\": \"Pradeep C\",\n        \"amount\": \"50\"\n    },\n    {\n        \"forwardId\": \"14064\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD4110421\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2018-08-01T11:25:28.857\",\n        \"openFrom\": \"2018-08-20T00:00:00\",\n        \"maturityDate\": \"2018-08-20T00:00:00\",\n        \"availableBalance\": \"1000\",\n        \"rate\": \"1.251891\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"798.7900\",\n        \"createdBy\": \"Daniil Saiko\",\n        \"amount\": \"1000\"\n    },\n    {\n        \"forwardId\": \"14065\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD4110423\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2018-08-01T12:05:40.98\",\n        \"openFrom\": \"2018-08-10T00:00:00\",\n        \"maturityDate\": \"2018-08-10T00:00:00\",\n        \"availableBalance\": \"100\",\n        \"rate\": \"1.530882\",\n        \"costCurrency\": \"EUR\",\n        \"costAmount\": \"65.3200\",\n        \"createdBy\": \"Pradeep C\",\n        \"amount\": \"100\"\n    },\n    {\n        \"forwardId\": \"14066\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD4110424\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2018-08-01T12:06:21.023\",\n        \"openFrom\": \"2018-08-01T00:00:00\",\n        \"maturityDate\": \"2018-08-10T00:00:00\",\n        \"availableBalance\": \"100\",\n        \"rate\": \"1.530587\",\n        \"costCurrency\": \"EUR\",\n        \"costAmount\": \"65.3300\",\n        \"createdBy\": \"Pradeep C\",\n        \"amount\": \"100\"\n    },\n    {\n        \"forwardId\": \"14067\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD4110426\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2018-08-01T12:25:17.22\",\n        \"openFrom\": \"2018-08-10T00:00:00\",\n        \"maturityDate\": \"2018-08-10T00:00:00\",\n        \"availableBalance\": \"100\",\n        \"rate\": \"1.303415\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"130.3400\",\n        \"createdBy\": \"Pradeep C\",\n        \"amount\": \"100\"\n    },\n    {\n        \"forwardId\": \"14082\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD4110467\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2018-08-01T13:06:50.637\",\n        \"openFrom\": \"2018-08-10T00:00:00\",\n        \"maturityDate\": \"2018-08-10T00:00:00\",\n        \"availableBalance\": \"100\",\n        \"rate\": \"1.251907\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"79.8800\",\n        \"createdBy\": \"Pradeep C\",\n        \"amount\": \"100\"\n    },\n    {\n        \"forwardId\": \"14083\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD4110468\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2018-08-01T13:07:56.81\",\n        \"openFrom\": \"2018-08-10T00:00:00\",\n        \"maturityDate\": \"2018-08-10T00:00:00\",\n        \"availableBalance\": \"100\",\n        \"rate\": \"1.251907\",\n        \"costCurrency\": \"USD\",\n        \"costAmount\": \"79.8800\",\n        \"createdBy\": \"Pradeep C\",\n        \"amount\": \"100\"\n    },\n    {\n        \"forwardId\": \"14084\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD4110469\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2018-08-01T13:09:22.657\",\n        \"openFrom\": \"2018-08-10T00:00:00\",\n        \"maturityDate\": \"2018-08-10T00:00:00\",\n        \"availableBalance\": \"100\",\n        \"rate\": \"1.530882\",\n        \"costCurrency\": \"EUR\",\n        \"costAmount\": \"65.3200\",\n        \"createdBy\": \"Pradeep C\",\n        \"amount\": \"100\"\n    },\n    {\n        \"forwardId\": \"14085\",\n        \"currency\": \"USD\",\n        \"ordNum\": \"OFD4110470\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2018-08-01T14:45:28.77\",\n        \"openFrom\": \"2018-08-10T00:00:00\",\n        \"maturityDate\": \"2018-08-10T00:00:00\",\n        \"availableBalance\": \"100\",\n        \"rate\": \"1.303415\",\n        \"costCurrency\": \"CAD\",\n        \"costAmount\": \"130.3400\",\n        \"createdBy\": \"Pradeep C\",\n        \"amount\": \"100\"\n    },\n    {\n        \"forwardId\": \"14041\",\n        \"currency\": \"CAD\",\n        \"ordNum\": \"OFD4110029\",\n        \"statusDesc\": \"Incomplete\",\n        \"dealDate\": \"2018-07-27T16:58:59.733\",\n        \"openFrom\": \"2018-07-27T00:00:00\",\n        \"maturityDate\": \"2018-08-07T00:00:00\",\n        \"availableBalance\": \"1\",\n        \"rate\": \"1.530587\",\n        \"costCurrency\": \"EUR\",\n        \"costAmount\": \"0.6500\",\n        \"createdBy\": \"Pradeep C\",\n        \"amount\": \"1\"\n    }\n]"
								}
							]
						},
						{
							"name": "Drawdown Instruct",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "<string>",
										"description": "(Required) "
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/forwards/drawdowns",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"forwards",
										"drawdowns"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "The ‘Book Drawdown’ payload is very similar to the `POST` [Instruct](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#12818ce6-1fc9-4333-8d48-86880b24890b) payload.\n\nThe fee amount must reflect the contractual fee set up for the client. If fees are contractually $0 for this drawdown, then set 'amount': 0. If otherwise, set the amount accordingly.\n\n**Note:** Top-up of drawdown instruction amounts (when drawdown amount exceeds the value of the forward contract) is currently not supported on API.\n\n* * *\n\n##### REQUEST BODY\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>orders.orderNum</td><td><b>string (required)</b><br>Number of the deal to which the payment and settlement instructions should be applied.</td></tr><tr><td>orders.amount</td><td><b>number (required)</b><br>Payment amount.</td></tr><tr><td>payments.beneficiaryId</td><td><b>string (required)</b><br>Identifier of the beneficiary/FXBalance where the payment will be sent. Value can be either 'clientIntegrationId' or 'id'.</td></tr><tr><td>payments.amount</td><td><b>number (required)</b><br>Payment amount. This number must match the value in orders.amount.</td></tr><tr><td>payments.currency</td><td><b>string (required)</b><br>Three-letter ISO code for the payment currency.</td></tr><tr><td>payments.method</td><td><p><b>string (required)</b><br>Method to use to send the payment = ['W', 'E', 'C'].<br></p><ul><li><p>'W' = Wire</p></li><li><p>'E' = EFT</p></li><li><p>'C' = FXBalance</p></li></ul></td></tr><tr><td>payments.purposeOfPayment</td><td><b>string (required)</b><br>The purpose of the payment. </td></tr><tr><td>payments.paymentReference</td><td><b>string (optional)</b><br>Reference to be included with the payment, for example, purchase order number or invoice number.</td></tr><tr><td>payments.remitterId</td><td><b>string (optional)</b><br>Identifier of the remitter on whose behalf the payment is being made.</td></tr><tr><td>settlements.accountId</td><td><b>string (required)</b><br>Settlement account identifier.</td></tr><tr><td>settlements.method</td><td><p><b>string (required)</b><br>Method to use to settle the deal = ['W', 'E', 'C'].<br></p><ul><li><p>'W' = Wire</p></li><li><p>'E' = EFT</p></li><li><p>'C' = FXBalance</p></li></ul></td></tr><tr><td>settlements.currency</td><td><b>string (required)</b><br>Three-letter ISO code for the settlement account currency.</td></tr><tr><td>settlements.purpose</td><td><b>string (required)</b><br>The reason for the settlement = ['All', 'Allocation', 'Fee', 'Spot', 'SpotTrade', 'Drawdown'].</td></tr></tbody></table>"
							},
							"response": [
								{
									"name": "200 response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"orders\": [ \r\n        {\r\n        \"ordNum\": \"OFD10050865\",\r\n\t\t\"amount\" : 100\r\n        }\r\n\t],\t\r\n        \"payments\": [\r\n           {\r\n                \"beneficiaryId\": \"392623edfa50448a8909fe094d0948f8\",\r\n\t\t\t\t\"amount\": 100,\r\n\t\t\t\t\"currency\": \"CAD\",\r\n\t\t\t\t\"payMethod\": \"W\",\r\n                \"purposeOfPayment\":\"fxvx\",\r\n\t\t\t\t\"remitterId\": \"00801OSCXZATTZNAZNC2\",\r\n\t\t\t\t\"paymentReference\":\"\"\r\n\r\n            }\r\n\t\t],\r\n        \"settlements\":[\r\n\t\t\t{\r\n\t\t\t    \"accountId\":\"INCOMING-TEST-USD\" ,\r\n                \"Method\":\"W\",\r\n                \"currency\":\"USD\",\r\n                \"purpose\" : \"Spot\"\r\n\t        }  \r\n\t\t\t\t\r\n\t\t\t    \r\n\t\t]\t\r\n    \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "/partner/:partnerId/:clientCode/forwards/drawdowns",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"forwards",
												"drawdowns"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}",
													"description": "(Required) "
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 21:28:45 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "1714"
										},
										{
											"key": "Content-Length",
											"value": "26"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"ordNum\": \"10056081\"\n}"
								},
								{
									"name": "500 response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}",
												"description": "(Required) "
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"orders\": [ \r\n        {\r\n        \"ordNum\": \"OFD10040234\",\r\n\t\t\"amount\" : 100\r\n        }\r\n\t],\t\r\n        \"payments\": [\r\n           {\r\n                \"beneficiaryId\": \"392623edfa50448a8909fe094d0948f8\",\r\n\t\t\t\t\"amount\": 100,\r\n\t\t\t\t\"currency\": \"CAD\",\r\n\t\t\t\t\"payMethod\": \"W\",\r\n                \"purposeOfPayment\":\"fxvx\",\r\n\t\t\t\t\"remitterId\": \"00801OSCXZATTZNAZNC2\",\r\n\t\t\t\t\"paymentReference\":\"\"\r\n\r\n            }\r\n\t\t],\r\n        \"settlements\":[\r\n\t\t\t{\r\n\t\t\t    \"accountId\":\"INCOMING-TEST-USD\" ,\r\n                \"Method\":\"W\",\r\n                \"currency\":\"USD\",\r\n                \"purpose\" : \"Spot\"\r\n\t        }  \r\n\t\t\t\t\r\n\t\t\t    \r\n\t\t]\t\r\n    \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "/partner/:partnerId/:clientCode/forwards/drawdowns",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"forwards",
												"drawdowns"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partnerId}}",
													"description": "(Required) "
												},
												{
													"key": "clientCode",
													"value": "{{clientCode}}",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 21:26:00 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "5040"
										},
										{
											"key": "Content-Length",
											"value": "609"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timeStamp\": \"2020-10-15T21:26:00.576Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": \"Internal Server Error\",\n    \"errorCode\": 500,\n    \"errorType\": \"HTTP:INTERNAL_SERVER_ERROR\",\n    \"description\": [\n        {\n            \"key\": \"OPERATION_FAILED\",\n            \"type\": \"input\",\n            \"message\": \"Unexpected exception\"\n        },\n        {\n            \"key\": \"ErrorID\",\n            \"type\": \"input\",\n            \"message\": \"2021-12287c19-81ea-4664-a6b4-abd3d3b89e7e\"\n        }\n    ],\n    \"errorClass\": \"org.mule.extension.http.api.request.validator.ResponseValidatorTypedException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"054f2530-0f2d-11eb-898f-122027ceb96f\"\n}"
								}
							]
						}
					],
					"description": "The drawdown workflow withdraws or instructs a specified amount from the available balance of the forward contract. This can happen on the 'Maturity' date, or, in the case of an Open forward, this can happen on or after the open date."
				},
				{
					"name": "Forward Order Details",
					"item": [
						{
							"name": "View Forward",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/forwards/:forwardID",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"forwards",
										":forwardID"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "clientCode",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "forwardID",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								},
								"description": "This call is used after you book the rate and amount in the forward agreement.\r\n\r\nThe URL now contains the 'forwardID', which is different from the 'orderNumber' (which is handed in the Response Body).\r\n<br />\r\n\r\n----\r\n<br />\r\n\r\n##### RESPONSE BODY\r\n\r\n\r\n<table style=\"width:100%\">\r\n  <tr>\r\n    <th align=\"left\">Parameter</th>\r\n    <th align=\"left\">Description</th>\r\n  </tr>\r\n  <tr>\r\n    <td>ordNum</td>\r\n    <td>The order number of the forward.</td>\r\n  </tr>\r\n    <tr>\r\n    <td>openDate</td>\r\n    <td>Timestamp of the Open Date.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>contractType.id</td>\r\n    <td>Indicates the type of Forward Contract. Possible values = ['O', 'C'].</td>\r\n  </tr>\r\n  <tr>\r\n    <td>contractType.text</td>\r\n    <td>Indicates the type of Forward Contract. Possible values = ['Open', 'Closed'].</td>\r\n  </tr>\r\n  <tr>\r\n    <td>maturityDate</td>\r\n    <td>Timestamp of the maturity date.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>buycurrency</td>\r\n    <td>The payment currency.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>buyamount</td>\r\n    <td>The payment amount.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>sellcurrency</td>\r\n    <td>The settlement currency.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>sellamount</td>\r\n    <td>The settlement amount.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>value</td>\r\n    <td>Formula is 'amountBought.amount' ÷ 'amountSold.amount'</td>\r\n  </tr>\r\n  <tr>\r\n    <td>deposit.currency</td>\r\n    <td>The currency the deposit is paid in; the settlement currency.</td>\r\n  </tr>\r\n  <tr>\r\n    <td>deposit.amount</td>\r\n    <td>The amount required for the deposit (in the 'content.deposit.currency' currency).</td>\r\n  </tr>\r\n</table>"
							},
							"response": [
								{
									"name": "200 response - forward not completed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}"
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "/partner/:partnerId/:clientCode/forwards/:forwardID",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"forwards",
												":forwardID"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "partner",
													"description": "(Required) "
												},
												{
													"key": "clientCode",
													"value": "clientCode",
													"description": "(Required) "
												},
												{
													"key": "forwardID",
													"value": "28422",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 21:12:20 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "5465"
										},
										{
											"key": "Content-Length",
											"value": "359"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"ordNum\": \"OFD10056079\",\n    \"openDate\": \"2020-10-15T00:00:00\",\n    \"contractType\": {\n        \"id\": \"O\",\n        \"text\": \"Open\"\n    },\n    \"maturityDate\": \"2020-11-02T00:00:00\",\n    \"buyAmount\": \"1000.0\",\n    \"buyCurrency\": \"CAD\",\n    \"sellAmount\": \"763.0700\",\n    \"sellCurrency\": \"USD\",\n    \"value\": \"1.310491\",\n    \"deposit\": {\n        \"currency\": \"USD\",\n        \"amount\": \"763.0700\"\n    }\n}"
								},
								{
									"name": "404 response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "CMG-AccessToken",
												"value": "{{token}}"
											},
											{
												"key": "client_id",
												"value": "{{id}}",
												"type": "text",
												"disabled": true
											},
											{
												"key": "client_secret",
												"value": "{{secret}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "/partner/:partnerId/:clientCode/forwards/:forwardID",
											"path": [
												"partner",
												":partnerId",
												":clientCode",
												"forwards",
												":forwardID"
											],
											"variable": [
												{
													"key": "partnerId",
													"value": "{{partner}}",
													"description": "(Required) "
												},
												{
													"key": "clientCode",
													"value": "{{code}}",
													"description": "(Required) "
												},
												{
													"key": "forwardID",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=UTF-8"
										},
										{
											"key": "Date",
											"value": "Thu, 15 Oct 2020 21:11:49 GMT"
										},
										{
											"key": "Server",
											"value": "nginx"
										},
										{
											"key": "x-ratelimit-limit",
											"value": "2"
										},
										{
											"key": "x-ratelimit-remaining",
											"value": "1"
										},
										{
											"key": "x-ratelimit-reset",
											"value": "15291"
										},
										{
											"key": "Content-Length",
											"value": "358"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"timeStamp\": \"2020-10-15T21:11:49.957Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": null,\n    \"errorCode\": \"404\",\n    \"errorType\": \"APIKIT:NOT_FOUND\",\n    \"description\": \"/partner/erictest1/252497/forwards/\",\n    \"errorClass\": \"org.mule.module.apikit.exception.NotFoundException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"0a84d560-0f2b-11eb-898f-122027ceb96f\"\n}"
								}
							]
						}
					],
					"description": "These endpoints are used once the {forwardId} is received from \"POST\" \\[fowardBook\\]  \n* POST - completes the forward  \n* GET - retrieves the forward that is not complete"
				}
			],
			"description": "The drawdown workflow withdraws or instructs a specified amount from the available balance of the forward contract. This can happen on the 'Maturity' date, or, in the case of an Open forward, this can happen on or after the open date."
		},
		{
			"name": "Batch Payments",
			"item": [
				{
					"name": "Batch Payments Quote",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[ {\r\n  \"payments\" : \r\n            {\r\n            \"beneficiaryId\": \"Resource10-2\",\r\n            \"amount\": 1000,\r\n            \"currency\": \"EUR\",\r\n            \"paymentMethod\": \"Wire\",\r\n            \"purposeOfPayment\":\"\",\r\n            \"remitterId\": \"\",\r\n            \"paymentReference\": \"\",\r\n            \"DeliveryDate\": \"2021-01-30\",\r\n            \"lockSide\": \"Payment\"\r\n            },\r\n  \"settlements\" : \r\n            {\r\n            \"accountId\":\"INCOMING-TEST-USD\" ,\r\n            \"Method\":\"Wire\",\r\n            \"currency\":\"USD\"    \r\n            }\r\n  }, \r\n     {\r\n  \"payments\" : \r\n            {\r\n            \"beneficiaryId\": \"inr123\",\r\n            \"amount\": 1000,\r\n            \"currency\": \"INR\",\r\n            \"paymentMethod\": \"Wire\",\r\n            \"purposeOfPayment\":\"\",\r\n            \"remitterId\": \"\",\r\n            \"paymentReference\": \"\",\r\n            \"DeliveryDate\": \"2021-01-30\",\r\n            \"lockSide\": \"Payment\"\r\n            },\r\n  \"settlements\" : \r\n            {\r\n            \"accountId\":\"INCOMING-TEST-USD\" ,\r\n            \"Method\":\"Wire\",\r\n            \"currency\":\"USD\"    \r\n            }\r\n  }   ]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/partner/:partnerId/:clientCode/payment-quotes",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"payment-quotes"
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>"
								},
								{
									"key": "clientCode",
									"value": "<string>"
								}
							]
						},
						"description": "This is the first of two calls that are used to book multiple payments. You send the payment information in the request, and the response returns the rate information.\n\nIn order to secure the rate(s), you must execute the next call, `POST` [Book Batch Payments](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#6cd8185c-7a8b-44ec-87be-e5b4ede0a38d), before the rate expires (usually 10 seconds).\n\n* * *\n\n#### Request Body\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>payments.beneficiaryId<br><b>Required</b></td><td>The identifier of the beneficiary or the FXbalance where the payment will be sent. For beneficiaries, use the 'beneId' value which can be found by using the <b>GET</b> <a href=\"https://documenter.getpostman.com/view/5203630/UVR4PAbZ#9eba62f9-d534-4c07-99ab-01443efc8e38\">View Bene</a> endpoint.</td></tr><tr><td>payments.paymentMethod<br><b>Required</b></td><td>Method to use to send the payment = ['Wire', 'EFT', 'StoredValue'].<br>'StoredValue' = FXBalance</td></tr><tr><td>payments.amount<br><b>Required</b></td><td>Payment amount.</td></tr><tr><td>payments.lockside<br><b>Required</b></td><td>Indicates the base currency (of the currency pair), on which the rate calculation is based = ['payment', 'settlement'].</td></tr><tr><td>payments.currency<br><b>Required</b></td><td>The three-letter ISO code for the payment currency.</td></tr><tr><td>settlements.currency<br><b>Required</b></td><td>The three-letter ISO code for the settlement currency.</td></tr><tr><td>settlements.settlementAccountId<br><b>Required</b></td><td>Settlement account identifier.</td></tr><tr><td>settlements.settlementMethod<br><b>Required</b></td><td>Method to use to settle the deal = ['Wire', 'EFT', 'StoredValue'].<br>'StoredValue' = FXBalance</td></tr><tr><td>payments.paymentReference</td><td>Reference to be included with the payment, for example, purchase order number or invoice number.</td></tr><tr><td>payments.purposeOfPayment</td><td>Payment purpose, for example 'Purchase of Goods'.</td></tr><tr><td>payments.remitterId</td><td>Remitter ID</td></tr><tr><td>payments.DeliveryDate</td><td>This is for scheduled payments, when you want payment to land on a certain date.</td></tr></tbody></table>\n\n* * *\n\n#### Response Body\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>paymentSummary.paymentCurrency</td><td>The three-letter ISO code for the payment currency.</td></tr><tr><td>paymentSummary.amountTotal</td><td>Total amount paid to the beneficiary.</td></tr><tr><td>paymentSummary.settlementCurrency</td><td>The three-letter ISO code for the settlement account currency.</td></tr><tr><td>paymentSummary.settlementAmount</td><td>Amount being settled.</td></tr><tr><td>paymentSummary.rate</td><td>The rate figure provided is the factor between the lockside and the quote currency.</td></tr><tr><td>paymentSummary.count</td><td>The total number of payments going to the same beneficiary within this call.</td></tr><tr><td>paymentSummary.lockSide</td><td>The currency on which the rate calculation is based = ['payment', 'settlement']</td></tr></tbody></table>"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[ {\r\n  \"payments\" : \r\n            {\r\n            \"beneficiaryId\": \"Resource10-2\",\r\n            \"amount\": 1000,\r\n            \"currency\": \"EUR\",\r\n            \"paymentMethod\": \"Wire\",\r\n            \"purposeOfPayment\":\"\",\r\n            \"remitterId\": \"\",\r\n            \"paymentReference\": \"\",\r\n            \"DeliveryDate\": \"2021-01-30\",\r\n            \"lockSide\": \"Payment\"\r\n            },\r\n  \"settlements\" : \r\n            {\r\n            \"accountId\":\"INCOMING-TEST-USD\" ,\r\n            \"Method\":\"Wire\",\r\n            \"currency\":\"USD\"    \r\n            }\r\n  }, \r\n     {\r\n  \"payments\" : \r\n            {\r\n            \"beneficiaryId\": \"inr123\",\r\n            \"amount\": 1000,\r\n            \"currency\": \"INR\",\r\n            \"paymentMethod\": \"Wire\",\r\n            \"purposeOfPayment\":\"\",\r\n            \"remitterId\": \"\",\r\n            \"paymentReference\": \"\",\r\n            \"DeliveryDate\": \"2021-01-30\",\r\n            \"lockSide\": \"Payment\"\r\n            },\r\n  \"settlements\" : \r\n            {\r\n            \"accountId\":\"INCOMING-TEST-USD\" ,\r\n            \"Method\":\"Wire\",\r\n            \"currency\":\"USD\"    \r\n            }\r\n  }   ]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/partner/:partnerId/:clientCode/payment-quotes",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"payment-quotes"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}"
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 28 Jan 2021 18:10:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-correlation-id",
									"value": "a7a04f4d-29f2-4d8f-a46c-34283d926203"
								},
								{
									"key": "X-CDN",
									"value": "Incapsula"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "X-Iinfo",
									"value": "5-28246453-28303683 NNYN CT(18 40 0) RT(1611857130801 321950) q(0 0 1 -1) r(25 25) U6"
								}
							],
							"cookie": [],
							"body": "{\n    \"paymentSummary\": [\n        {\n            \"paymentCurrency\": \"EUR\",\n            \"amountTotal\": 1000,\n            \"settlementCurrency\": \"USD\",\n            \"settlementAmount\": 1236.86,\n            \"rate\": 1.23686,\n            \"count\": 1,\n            \"lockSide\": \"Payment\",\n            \"rateType\": \"EURUSD\"\n        },\n        {\n            \"paymentCurrency\": \"INR\",\n            \"amountTotal\": 1000,\n            \"settlementCurrency\": \"USD\",\n            \"settlementAmount\": 14.04,\n            \"rate\": 0.01404,\n            \"count\": 1,\n            \"lockSide\": \"Payment\",\n            \"rateType\": \"INRUSD\"\n        }\n    ],\n    \"quoteId\": \"D81AD92F39F94898BB5C5388FA77D7DA\",\n    \"loginSessionId\": \"6a84dd0e-7c19-43d0-b909-851d0fce0705\"\n}"
						}
					]
				},
				{
					"name": "Book Batch Payments",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>",
								"type": "text"
							}
						],
						"url": {
							"raw": "partner/:partnerId/:clientCode/bookPayments?quoteId=<string>&loginSessionId=<string>",
							"host": [
								"partner"
							],
							"path": [
								":partnerId",
								":clientCode",
								"bookPayments"
							],
							"query": [
								{
									"key": "quoteId",
									"value": "<string>"
								},
								{
									"key": "loginSessionId",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>"
								},
								{
									"key": "clientCode",
									"value": "<string>"
								}
							]
						},
						"description": "This is the second of the two calls that are used to book multiple payments. The URL that you need to send can be found in the response to the preceding call (`POST` [Batch Payments Quote](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#77a56530-e9dc-4d1a-9eb4-e2db1df68ffc)) under 'BOOK_PAYMENT'.\n\n**Important:** The quote obtained from `POST` [Batch Payments Quote](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#77a56530-e9dc-4d1a-9eb4-e2db1df68ffc) is valid for 10 seconds, after which it expires. If you don't book the deal before the rate expires, the response status will be '410 (Gone)'. If that happens, you will need to generate a new quote.\n\n**Note:** The 'quoteId', and 'loginSessionId' params are contained in the response, which is a unique feature to this workflow.\n\n* * *\n\n##### REQUEST BODY\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>combineSettlements</td><td><b>boolean (optional)</b><br>Specifies whether to combine any associated fees into a single deduction. The default is 'false'.</td></tr></tbody></table>\n\n##### RESPONSE BODY\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>orderNumber</td><td>The unique global identifier for the order.</td></tr></tbody></table>"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "partner/:partnerId/:clientCode/bookPayments?quoteId=ABE35A044AEF416B9FF4751304B7B996&loginSessionId=43cfad01-b3b4-40ef-b18c-0b88d6737df3",
									"host": [
										"partner"
									],
									"path": [
										":partnerId",
										":clientCode",
										"bookPayments"
									],
									"query": [
										{
											"key": "quoteId",
											"value": "ABE35A044AEF416B9FF4751304B7B996"
										},
										{
											"key": "loginSessionId",
											"value": "43cfad01-b3b4-40ef-b18c-0b88d6737df3"
										}
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}"
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}"
										}
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"message\": \"Order created successfully.\",\n    \"orderNumber\": \"10311489\"\n}"
						},
						{
							"name": "404 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/bookPayments?quoteId=:quoteId&loginSessionId=:sessionId",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"bookPayments"
									],
									"query": [
										{
											"key": "quoteId",
											"value": ":quoteId"
										},
										{
											"key": "loginSessionId",
											"value": ":sessionId"
										}
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}"
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 28 Jan 2021 18:17:09 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-correlation-id",
									"value": "4f05f310-3e06-41f6-a9b4-46df0364cbda"
								},
								{
									"key": "X-CDN",
									"value": "Incapsula"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "X-Iinfo",
									"value": "5-28246453-28365701 SNYN RT(1611857130801 697519) q(0 0 0 -1) r(1 1) U6"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2021-01-28T18:17:09.162Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": null,\n    \"errorCode\": \"404\",\n    \"errorType\": \"APIKIT:NOT_FOUND\",\n    \"description\": \"/partner/erictest1/252497/bookPayments\",\n    \"errorClass\": \"org.mule.module.apikit.exception.NotFoundException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"4f05f310-3e06-41f6-a9b4-46df0364cbda\"\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/bookPayments?quoteId=B0B71EE873384C9BAF82D414850639F1&loginSessionId=20efc478-f2bc-4a44-a8e1-17f1a5aa8145",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"bookPayments"
									],
									"query": [
										{
											"key": "quoteId",
											"value": "B0B71EE873384C9BAF82D414850639F1"
										},
										{
											"key": "loginSessionId",
											"value": "20efc478-f2bc-4a44-a8e1-17f1a5aa8145"
										}
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{clientCode}}"
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 28 Jan 2021 18:22:31 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-correlation-id",
									"value": "c4c12768-969b-49e0-98a8-885dae9cb353"
								},
								{
									"key": "X-CDN",
									"value": "Incapsula"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "X-Iinfo",
									"value": "5-28246453-28426440 SNYN RT(1611857130801 1018993) q(0 0 0 -1) r(9 9) U6"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2021-01-28T18:22:31.454Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": \"Bad Request\",\n    \"errorCode\": \"400\",\n    \"errorType\": \"HTTP:BAD_REQUEST\",\n    \"description\": [\n        {\n            \"key\": \"QUOTE_EXPIRED\",\n            \"type\": \"input\",\n            \"message\": \"Quote expired\"\n        },\n        {\n            \"key\": \"ErrorID\",\n            \"type\": \"input\",\n            \"message\": \"\"\n        }\n    ],\n    \"errorClass\": \"org.mule.extension.http.api.request.validator.ResponseValidatorTypedException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"c4c12768-969b-49e0-98a8-885dae9cb353\"\n}"
						}
					]
				}
			],
			"description": "The Batch Payment workflow is a two-step payment-aggregation workflow designed to make payments to multiple beneficiaries at the same time, using a single call. \r\n\r\nThe only limitation is the currency-specific account limit of any currency being used for settlement (as outlined in the onboarding agreement).",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Settlement Accounts",
			"item": [
				{
					"name": "View Settlements",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>",
								"type": "text"
							}
						],
						"url": {
							"raw": "/partner/:partnerId/:clientCode/settlement-accounts",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"settlement-accounts"
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>"
								},
								{
									"key": "clientCode",
									"value": "<string>"
								}
							]
						},
						"description": "This endpoint enables you to view all settlement accounts for this client."
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/settlement-accounts",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"settlement-accounts"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}"
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 28 Jan 2021 18:26:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-correlation-id",
									"value": "7e28ffe6-b7c0-4a62-b27c-5542fcba94eb"
								},
								{
									"key": "X-CDN",
									"value": "Incapsula"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "X-Iinfo",
									"value": "5-28246453-28473248 NNYN CT(27 43 0) RT(1611857130801 1253809) q(0 0 0 -1) r(11 11) U12"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"items\": {\n            \"ordnum\": 0,\n            \"text\": \"FXBalances\",\n            \"children\": []\n        }\n    },\n    {\n        \"items\": {\n            \"ordnum\": 1,\n            \"text\": \"Bank Accounts\",\n            \"children\": [\n                {\n                    \"id\": \"INCOMING-TEST-CAD\",\n                    \"method\": {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    },\n                    \"currency\": \"CAD\",\n                    \"paymentIdent\": \" \",\n                    \"bankName\": \"Sample Bank\",\n                    \"bankAccount\": \" \",\n                    \"preferred\": false,\n                    \"selected\": true\n                },\n                {\n                    \"id\": \"INCOMING-TEST-USD\",\n                    \"method\": {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    },\n                    \"currency\": \"USD\",\n                    \"paymentIdent\": \" \",\n                    \"bankName\": \"Sample Bank\",\n                    \"bankAccount\": \" \",\n                    \"preferred\": false,\n                    \"selected\": false\n                },\n                {\n                    \"id\": \"INCOMING11USD\",\n                    \"method\": {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    },\n                    \"currency\": \"USD\",\n                    \"paymentIdent\": \"INCOMING11USD\",\n                    \"bankName\": \"RBC\",\n                    \"bankAccount\": \"3515226\",\n                    \"preferred\": false,\n                    \"selected\": false\n                },\n                {\n                    \"id\": \"INCOMING16453\",\n                    \"method\": {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    },\n                    \"currency\": \"USD\",\n                    \"paymentIdent\": \"CHQ TEMPLATE USD\",\n                    \"bankName\": \" \",\n                    \"bankAccount\": null,\n                    \"preferred\": false,\n                    \"selected\": false\n                },\n                {\n                    \"id\": \"INCOMING252497_EUR\",\n                    \"method\": {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    },\n                    \"currency\": \"EUR\",\n                    \"paymentIdent\": \" \",\n                    \"bankName\": \"RABOBANK NEDERLAND\",\n                    \"bankAccount\": \" \",\n                    \"preferred\": false,\n                    \"selected\": false\n                },\n                {\n                    \"id\": \"INCOMING252497_GBP\",\n                    \"method\": {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    },\n                    \"currency\": \"GBP\",\n                    \"paymentIdent\": \" \",\n                    \"bankName\": \"HSBC BANK PLC\",\n                    \"bankAccount\": \"14058011\",\n                    \"preferred\": false,\n                    \"selected\": false\n                },\n                {\n                    \"id\": \"INCOMING43463\",\n                    \"method\": {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    },\n                    \"currency\": \"CAD\",\n                    \"paymentIdent\": \" 12345\",\n                    \"bankName\": \"Sample Bank\",\n                    \"bankAccount\": \"12345678910\",\n                    \"preferred\": false,\n                    \"selected\": false\n                },\n                {\n                    \"id\": \"INCOMING43507\",\n                    \"method\": {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    },\n                    \"currency\": \"EUR\",\n                    \"paymentIdent\": \"Resource10-2\",\n                    \"bankName\": \"Sparkasse Mainfranken-Wurzburg\",\n                    \"bankAccount\": \"DE96790500000190410480\",\n                    \"preferred\": false,\n                    \"selected\": false\n                },\n                {\n                    \"id\": \"INCOMING43508\",\n                    \"method\": {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    },\n                    \"currency\": \"EUR\",\n                    \"paymentIdent\": \"Resource10-3\",\n                    \"bankName\": \"Sparkasse Mainfranken-Wurzburg\",\n                    \"bankAccount\": \"DE96790500000190410480\",\n                    \"preferred\": false,\n                    \"selected\": false\n                },\n                {\n                    \"id\": \"INCOMING43552\",\n                    \"method\": {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    },\n                    \"currency\": \"EUR\",\n                    \"paymentIdent\": \"Resource10-7\",\n                    \"bankName\": \"Sparkasse Mainfranken-Wurzburg\",\n                    \"bankAccount\": \"DE96790500000190410480\",\n                    \"preferred\": false,\n                    \"selected\": false\n                },\n                {\n                    \"id\": \"INCOMING43630\",\n                    \"method\": {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    },\n                    \"currency\": \"EUR\",\n                    \"paymentIdent\": \"35687\",\n                    \"bankName\": \"Commonwealth Bank of France\",\n                    \"bankAccount\": \"123456789\",\n                    \"preferred\": false,\n                    \"selected\": false\n                },\n                {\n                    \"id\": \"INCOMING44155\",\n                    \"method\": {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    },\n                    \"currency\": \"GBP\",\n                    \"paymentIdent\": \"aaaaaaaaatester\",\n                    \"bankName\": \"ABBEY NATIONAL TREASURY SERVICES\",\n                    \"bankAccount\": \"12312312\",\n                    \"preferred\": false,\n                    \"selected\": false\n                },\n                {\n                    \"id\": \"INCOMING44157\",\n                    \"method\": {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    },\n                    \"currency\": \"GBP\",\n                    \"paymentIdent\": \"0d6e902b981\",\n                    \"bankName\": \"SANTANDER UK PLC\",\n                    \"bankAccount\": \"65432123\",\n                    \"preferred\": false,\n                    \"selected\": false\n                },\n                {\n                    \"id\": \"INCOMING44191\",\n                    \"method\": {\n                        \"id\": \"W\",\n                        \"text\": \"Wire\"\n                    },\n                    \"currency\": \"EUR\",\n                    \"paymentIdent\": \"Resource10-4\",\n                    \"bankName\": \"Sparkasse Mainfranken-Wurzburg\",\n                    \"bankAccount\": \"DE96790500000190410480\",\n                    \"preferred\": false,\n                    \"selected\": false\n                },\n                {\n                    \"id\": \"EFT-CAD\",\n                    \"method\": {\n                        \"id\": \"E\",\n                        \"text\": \"iACH\"\n                    },\n                    \"currency\": \"CAD\",\n                    \"paymentIdent\": \" \",\n                    \"bankName\": \"TD Canada Trust\",\n                    \"bankAccount\": \"84415229266\",\n                    \"preferred\": false,\n                    \"selected\": false\n                },\n                {\n                    \"id\": \"EFT-USD\",\n                    \"method\": {\n                        \"id\": \"E\",\n                        \"text\": \"iACH\"\n                    },\n                    \"currency\": \"USD\",\n                    \"paymentIdent\": \" \",\n                    \"bankName\": \"Royal Bank of Canada\",\n                    \"bankAccount\": \"4006615\",\n                    \"preferred\": false,\n                    \"selected\": false\n                }\n            ]\n        }\n    }\n]"
						}
					]
				},
				{
					"name": "View FXBalance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>",
								"type": "text"
							}
						],
						"url": {
							"raw": "/partner/:partnerId/:clientCode/payment-link-balance-accounts?searchString={search string; optional}&includeBalance={'true' or 'false'}",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"payment-link-balance-accounts"
							],
							"query": [
								{
									"key": "searchString",
									"value": "{search string; optional}"
								},
								{
									"key": "includeBalance",
									"value": "{'true' or 'false'}"
								}
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>"
								},
								{
									"key": "clientCode",
									"value": "<string>"
								}
							]
						},
						"description": "This endpoint enables you to view all settlement accounts for this client."
					},
					"response": [
						{
							"name": "200 response - query empty",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/payment-link-balance-accounts?searchString=string,optional&includeBalance={'true','false'}",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"payment-link-balance-accounts"
									],
									"query": [
										{
											"key": "searchString",
											"value": "string,optional"
										},
										{
											"key": "includeBalance",
											"value": "{'true','false'}"
										}
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}"
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 28 Jan 2021 18:39:02 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-correlation-id",
									"value": "4d6c8449-c4fe-4d32-914f-eb5a1ed9f030"
								},
								{
									"key": "X-CDN",
									"value": "Incapsula"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "X-Iinfo",
									"value": "11-27512843-27512850 SNYN RT(1611859088367 52482) q(0 0 0 -1) r(13 13) U12"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"account\": \"TEST\",\n        \"currency\": \"AUD\",\n        \"ledgerBalance\": 54400301.09,\n        \"balanceHeld\": 8173.76,\n        \"availableBalance\": 54392127.33,\n        \"accountNumber\": \"610252497000011011\",\n        \"clientCode\": 252497,\n        \"clientDivisionId\": 0\n    },\n    {\n        \"account\": \"TEST\",\n        \"currency\": \"CAD\",\n        \"ledgerBalance\": 52499136.87,\n        \"balanceHeld\": 151804.05,\n        \"availableBalance\": 52347332.82,\n        \"accountNumber\": \"610252497000011001\",\n        \"clientCode\": 252497,\n        \"clientDivisionId\": 0\n    },\n    {\n        \"account\": \"TEST\",\n        \"currency\": \"EUR\",\n        \"ledgerBalance\": 51545703.18,\n        \"balanceHeld\": 32441.26,\n        \"availableBalance\": 51513261.92,\n        \"accountNumber\": \"610252497000011003\",\n        \"clientCode\": 252497,\n        \"clientDivisionId\": 0\n    },\n    {\n        \"account\": \"TEST\",\n        \"currency\": \"GBP\",\n        \"ledgerBalance\": 53231428.59,\n        \"balanceHeld\": 43459.66,\n        \"availableBalance\": 53187968.93,\n        \"accountNumber\": \"610252497000011004\",\n        \"clientCode\": 252497,\n        \"clientDivisionId\": 0\n    },\n    {\n        \"account\": \"TEST\",\n        \"currency\": \"JPY\",\n        \"ledgerBalance\": -50994635,\n        \"balanceHeld\": 0,\n        \"availableBalance\": -50994635,\n        \"accountNumber\": \"610252497000011042\",\n        \"clientCode\": 252497,\n        \"clientDivisionId\": 0\n    },\n    {\n        \"account\": \"TEST\",\n        \"currency\": \"NZD\",\n        \"ledgerBalance\": -4604.7,\n        \"balanceHeld\": 45554,\n        \"availableBalance\": -50158.7,\n        \"accountNumber\": \"610252497000011053\",\n        \"clientCode\": 252497,\n        \"clientDivisionId\": 0\n    },\n    {\n        \"account\": \"TEST\",\n        \"currency\": \"USD\",\n        \"ledgerBalance\": 20769636.04,\n        \"balanceHeld\": 175901.33,\n        \"availableBalance\": 20593734.71,\n        \"accountNumber\": \"610252497000011002\",\n        \"clientCode\": 252497,\n        \"clientDivisionId\": 0\n    }\n]"
						},
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/payment-link-balance-accounts?searchString=AUD&includeBalance=true",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"payment-link-balance-accounts"
									],
									"query": [
										{
											"key": "searchString",
											"value": "AUD"
										},
										{
											"key": "includeBalance",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}"
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 28 Jan 2021 18:41:02 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-correlation-id",
									"value": "a0c9b77f-13df-49f8-b053-f3b8f0a9b577"
								},
								{
									"key": "X-CDN",
									"value": "Incapsula"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "X-Iinfo",
									"value": "11-27512843-27545948 NNYN CT(29 21 0) RT(1611859088367 172529) q(0 0 1 -1) r(11 11) U12"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"account\": \"TEST\",\n        \"currency\": \"AUD\",\n        \"ledgerBalance\": 54400301.09,\n        \"balanceHeld\": 8173.76,\n        \"availableBalance\": 54392127.33,\n        \"accountNumber\": \"610252497000011011\",\n        \"clientCode\": 252497,\n        \"clientDivisionId\": 0\n    }\n]"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/payment-link-balance-accounts?searchString=AUD&includeBalance=",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"payment-link-balance-accounts"
									],
									"query": [
										{
											"key": "searchString",
											"value": "AUD"
										},
										{
											"key": "includeBalance",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}"
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 28 Jan 2021 18:41:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-correlation-id",
									"value": "37e28bc5-085d-413c-8a4a-2d0d1866a49f"
								},
								{
									"key": "X-CDN",
									"value": "Incapsula"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "X-Iinfo",
									"value": "11-27512843-27553796 NNYN CT(33 19 0) RT(1611859088367 213543) q(0 0 0 -1) r(4 4) U11"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2021-01-28T18:41:43.054Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": null,\n    \"errorCode\": \"400\",\n    \"errorType\": \"APIKIT:BAD_REQUEST\",\n    \"description\": \"\\\"Invalid value '' for query parameter includeBalance. expected type: Boolean, found: String\\\"\",\n    \"errorClass\": \"org.mule.module.apikit.api.exception.InvalidQueryParameterException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"37e28bc5-085d-413c-8a4a-2d0d1866a49f\"\n}"
						}
					]
				},
				{
					"name": "FXBalance History",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<string>",
								"type": "text"
							}
						],
						"url": {
							"raw": "/partner/:partnerId/:clientCode/link-balance-accounts/{linkBalanceId}/history?fromDate={YYYY-MM-DD}&toDate={YYYY-MM-DD}",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"link-balance-accounts",
								"{linkBalanceId}",
								"history"
							],
							"query": [
								{
									"key": "fromDate",
									"value": "{YYYY-MM-DD}"
								},
								{
									"key": "toDate",
									"value": "{YYYY-MM-DD}"
								}
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>"
								},
								{
									"key": "clientCode",
									"value": "<string>"
								}
							]
						},
						"description": "This call returns the transaction history of the specified FXBalance.\n\n* * *\n\n##### RESPONSE BODY\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>pagination.total</td><td>Total number of transactions related to the specified FXBalance during the specified period.</td></tr><tr><td>pagination.skip</td><td>Number of transactions skipped.</td></tr><tr><td>pagination.take</td><td>Number of transactions returned.</td></tr><tr><td>links</td><td>HATEOAS link to the Corpay Cross-Border Account Details page.</td></tr><tr><td>orderNumber</td><td>The deal number.</td></tr><tr><td>date</td><td>Transaction date.</td></tr><tr><td>amount</td><td>Amount deducted from the FXBalance.</td></tr><tr><td>isPosted</td><td><p>Specifies whether the record has been posted.</p><ul><li><p>0 = Not posted</p></li><li><p>1 = Posted</p></li></ul></td></tr><tr><td>balance</td><td>Amount remaining in the FXBalance.</td></tr><tr><td>links</td><td>HATEOAS link to the order.</td></tr><tr><td>date</td><td>Business date(s) during the specified period.</td></tr><tr><td>balance</td><td>FXBalance value at the end of the above date.</td></tr></tbody></table>"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/link-balance-accounts/:linkBalanceId/history?fromDate=2020-06-02&toDate=2021-01-28",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"link-balance-accounts",
										":linkBalanceId",
										"history"
									],
									"query": [
										{
											"key": "fromDate",
											"value": "2020-06-02"
										},
										{
											"key": "toDate",
											"value": "2021-01-28"
										}
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}"
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}"
										},
										{
											"key": "linkBalanceId",
											"value": "610252497000011011"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 28 Jan 2021 18:44:28 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-correlation-id",
									"value": "3906827d-1eb2-45ff-a0a2-bdaa39c5a6e5"
								},
								{
									"key": "X-CDN",
									"value": "Incapsula"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "X-Iinfo",
									"value": "11-27512843-27582807 SNYN RT(1611859088367 378249) q(0 0 0 -1) r(9 9) U12"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"orderNumber\": \"10066100\",\n        \"date\": \"2020-12-23\",\n        \"amount\": -108.65,\n        \"isPosted\": 0,\n        \"balance\": \"54880658.4000\"\n    },\n    {\n        \"orderNumber\": \"10057747\",\n        \"date\": \"2020-10-23\",\n        \"amount\": -77047.06,\n        \"isPosted\": 0,\n        \"balance\": \"54880767.0500\"\n    },\n    {\n        \"orderNumber\": \"10045946\",\n        \"date\": \"2020-07-28\",\n        \"amount\": -41892.55,\n        \"isPosted\": 0,\n        \"balance\": \"54957814.1100\"\n    }\n]"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/link-balance-accounts/:linkBalanceId/history?fromDate=2020-06-02&toDate=",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"link-balance-accounts",
										":linkBalanceId",
										"history"
									],
									"query": [
										{
											"key": "fromDate",
											"value": "2020-06-02"
										},
										{
											"key": "toDate",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}"
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}"
										},
										{
											"key": "linkBalanceId",
											"value": "610252497000011011"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 28 Jan 2021 18:53:15 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-correlation-id",
									"value": "3f780f4b-9d98-4749-a8f4-043be508926e"
								},
								{
									"key": "X-CDN",
									"value": "Incapsula"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "X-Iinfo",
									"value": "14-37213637-37213648 NNYN CT(19 49 0) RT(1611859993674 35) q(0 0 0 -1) r(5 5) U11"
								}
							],
							"cookie": [],
							"body": "{\n    \"timeStamp\": \"2021-01-28T18:53:14.858Z\",\n    \"flowStep\": \"error\",\n    \"rootCauseMessage\": null,\n    \"errorCode\": \"400\",\n    \"errorType\": \"APIKIT:BAD_REQUEST\",\n    \"description\": \"\\\"Invalid value '' for query parameter toDate. string [] does not match pattern (((19|20)([2468][048]|[13579][26]|0[48])|2000)[/-]02[/-]29|((19|20)[0-9]{2}[/-](0[469]|11)[/-](0[1-9]|[12][0-9]|30)|(19|20)[0-9]{2}[/-](0[13578]|1[02])[/-](0[1-9]|[12][0-9]|3[01])|(19|20)[0-9]{2}[/-]02[/-](0[1-9]|1[0-9]|2[0-8])))\\\"\",\n    \"errorClass\": \"org.mule.module.apikit.api.exception.InvalidQueryParameterException\",\n    \"flowName\": \"handle-error\",\n    \"CID\": \"3f780f4b-9d98-4749-a8f4-043be508926e\"\n}"
						}
					]
				}
			],
			"description": "The Settlement Account template is also known as the ‘Incoming Funds Template’. Once complete, these accounts can be used to settle transactions and payments.  \nAccounts created through this workflow are non-Corpay bank accounts. FXBalance Accounts or Corpay holding account templates are not created in this same way."
		},
		{
			"name": "Swift-Payment Confirmations",
			"item": [
				{
					"name": "Swift Channel Information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "CMG-AccessToken",
								"value": "<token>",
								"type": "text"
							}
						],
						"url": {
							"raw": "/partner/:partnerId/:clientCode/swift-confirmations/:paymentInstructionId",
							"path": [
								"partner",
								":partnerId",
								":clientCode",
								"swift-confirmations",
								":paymentInstructionId"
							],
							"variable": [
								{
									"key": "partnerId",
									"value": "<string>"
								},
								{
									"key": "clientCode",
									"value": "<clientCode>"
								},
								{
									"key": "paymentInstructionId",
									"value": ""
								}
							]
						},
						"description": "Rather than 'ordNum', this endpoint uses the 'paymentInstructionId' in the URL. You can get the 'paymentInstructionId' by using `GET` [View Orders](https://documenter.getpostman.com/view/5203630/UVR4PAbZ#e8620246-bf87-4f57-929f-f783478cd4e1).  \n  \n\n* * *\n\n##### RESPONSE BODY\n\n<table><tbody><tr><th>Parameter</th><th>Description</th></tr><tr><td>paymentInstruction</td><td>The 'paymentInstructionId' used in the URL.</td></tr><tr><td>messages.details.response</td><td>The contents of the MT103 message. For an explanation of the fields that may be in the message, see the <b>SWIFT MESSAGE FIELDS</b> table below.</td></tr><tr><td>messages.details.responseDate</td><td>The response date.</td></tr><tr><td>messages.details.responseReference</td><td>The SWIFT confirmation ID from the channel.</td></tr><tr><td>messages.channel</td><td>The channel used for the payment = {'SWIFT'}.</td></tr><tr><td>messages.status</td><td>This field is currently not in use.</td></tr></tbody></table>\n\n##### SWIFT MESSAGE FIELDS\n\n<br><table><tbody><tr><th>Field Number</th><th>Field Name</th><th>Description</th></tr><tr><td>:20</td><td>Transaction reference number</td><td>Message number assigned by the sender.</td></tr><tr><td>:23B</td><td>Bank operation code</td><td>Type of operation.</td></tr><tr><td>:32A</td><td>Value date, Currency, Interbank settled amount</td><td>Date format is <i>YYMMDD</i>. Currency is three-letter ISO code.</td></tr><tr><td>:33B</td><td>Currency, Original ordered amount</td><td>Three-letter ISO currency code and amount of instruction.</td></tr><tr><td>:50A, F, or K</td><td>Ordering customer (payer) or address of the remitter</td><td>Customer ordering the transaction.</td></tr><tr><td>:52A or D</td><td>Ordering institution</td><td>Payer's bank.</td></tr><tr><td>:53A, B, or D</td><td>Sender's correspondent (bank)</td><td>Account or branch of sender.</td></tr><tr><td>:54A, B, or D</td><td>Receiver's correspondent</td><td>Branch or FI where funds are available to receiver.</td></tr><tr><td>:56A, C, or D</td><td>Intermediary bank</td><td>FI through which transaction must pass.</td></tr><tr><td>:59 or 59A</td><td>Beneficiary customer</td><td>Recipient of the funds.</td></tr><tr><td>:57A, B, C, or D</td><td>Account with institution</td><td>Beneficiary's account.</td></tr><tr><td>:70</td><td>Remittance information</td><td>Information about the transaction.</td></tr><tr></tr><tr><td>:71A</td><td>Details of charges.</td><td>Specifies which party is responsible for fees - OUR, SHA, or BEN.</td></tr><tr><td>:72</td><td>Sender to receiver information</td><td>Additional information for the receiver.</td></tr><tr><td>:77B</td><td>Regulatory reporting</td><td>Regulatory information required by the sender or receiver country.</td></tr></tbody></table>"
					},
					"response": [
						{
							"name": "200 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "CMG-AccessToken",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "/partner/:partnerId/:clientCode/swift-confirmations/:paymentInstructionId",
									"path": [
										"partner",
										":partnerId",
										":clientCode",
										"swift-confirmations",
										":paymentInstructionId"
									],
									"variable": [
										{
											"key": "partnerId",
											"value": "{{partnerId}}"
										},
										{
											"key": "clientCode",
											"value": "{{clientCode}}"
										},
										{
											"key": "paymentInstructionId",
											"value": "1573731"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 28 Jan 2021 19:37:45 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-correlation-id",
									"value": "dc365f1e-c974-489b-b636-8a0c776d5ea9"
								},
								{
									"key": "Set-Cookie",
									"value": "incap_ses_1001_2367180=GU4pZ2MS0AnOwpSBc0TkDYkSE2AAAAAA+JrWEMNkr0vZf2XTKv8ZhA==; path=/; Domain=.ca-ce1-01.api.fleetcor.com"
								},
								{
									"key": "X-CDN",
									"value": "Incapsula"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "X-Iinfo",
									"value": "12-31216025-31216036 NNYN CT(18 41 0) RT(1611862664157 85) q(0 0 1 0) r(8 8) U12"
								}
							],
							"cookie": [],
							"body": "{\n    \"paymentInstruction\": 1573731,\n    \"messages\": [\n        {\n            \"details\": {\n                \"response\": \"{1:F01CMFXCATTAXXX0919292037}{2:I103BARCGB22XXXXN}{4::20: 1219331-1-16MA:23B:CRED:32A:090317EUR10093,20:50K:B/O DERICHEBOURG RECYCLING USA, I7501 WALLISVILLE RD.HOUSTON 77020-3543 UNITED STATESCAMBRIDGE MERCANTILE CORP.:53B:/<< HIDDEN >>:57A:CMCIFR2A:59:/FR7611899001240002526434567ORANGE BUSINESS SERVICES FRANCE TELECOM SA.-SERVICE CLIENTS FACTURATION 18 AVENUE JEAN JAURES 75019 PARIS:70:REF INVOICES 8804001113 AND 1903068361:71A:SHA:72:/REC/PC(CM)-}\",\n                \"responseDate\": \"2009-03-16T16:05:00-04:00\",\n                \"responseReference\": \"919292037\"\n            },\n            \"channel\": \"SWIFT\",\n            \"status\": \"MT103\"\n        }\n    ]\n}"
						}
					]
				}
			],
			"description": "The confirmation endpoint displays a channel-specific payment confirmation message. To receive a successful response, the payment must be ***successfully instructed***  \n(status: `200` on `POST` \\[Instruct Deal\\].\n\nCurrently this feature is available only to MT103 messages travelling via the SWIFT Network - *Wires* - (i.e. method is Wire). **EFT/iACH payments are not currently supported**.\n\n**Note:** Messages are provided in full only if the payment has exited the Corpay bank account and is en route to the beneficiary's bank account.  \nTherefore, if the number of returned messages is 0, even though the payment has been booked, it just means the funds haven't left the Corpay bank account."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "code",
			"value": "clientCode"
		},
		{
			"key": "partner",
			"value": "partner"
		}
	]
}